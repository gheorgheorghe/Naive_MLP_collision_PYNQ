-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity backward_lite is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    in_stream_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    in_stream_TVALID : IN STD_LOGIC;
    in_stream_TREADY : OUT STD_LOGIC;
    in_stream_TLAST : IN STD_LOGIC;
    out_stream_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_stream_TVALID : OUT STD_LOGIC;
    out_stream_TREADY : IN STD_LOGIC;
    out_stream_TLAST : OUT STD_LOGIC );
end;


architecture behav of backward_lite is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "backward_lite,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.656750,HLS_SYN_LAT=1083481,HLS_SYN_TPT=none,HLS_SYN_MEM=11,HLS_SYN_DSP=33,HLS_SYN_FF=4952,HLS_SYN_LUT=8595,HLS_VERSION=2018_3}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state86 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state87 : STD_LOGIC_VECTOR (97 downto 0) := "00000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state88 : STD_LOGIC_VECTOR (97 downto 0) := "00000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state89 : STD_LOGIC_VECTOR (97 downto 0) := "00000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state90 : STD_LOGIC_VECTOR (97 downto 0) := "00000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state91 : STD_LOGIC_VECTOR (97 downto 0) := "00000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state92 : STD_LOGIC_VECTOR (97 downto 0) := "00000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state93 : STD_LOGIC_VECTOR (97 downto 0) := "00000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state94 : STD_LOGIC_VECTOR (97 downto 0) := "00001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state95 : STD_LOGIC_VECTOR (97 downto 0) := "00010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state96 : STD_LOGIC_VECTOR (97 downto 0) := "00100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state97 : STD_LOGIC_VECTOR (97 downto 0) := "01000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state98 : STD_LOGIC_VECTOR (97 downto 0) := "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_61 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100001";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_51 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010001";
    constant ap_const_lv32_59 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011001";
    constant ap_const_lv32_5C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011100";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_52 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010010";
    constant ap_const_lv32_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010011";
    constant ap_const_lv32_54 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010100";
    constant ap_const_lv32_55 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010101";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_5B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011011";
    constant ap_const_lv32_5D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011101";
    constant ap_const_lv32_5E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011110";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv8_40 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_const_lv11_80 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_const_lv12_480 : STD_LOGIC_VECTOR (11 downto 0) := "010010000000";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv12_880 : STD_LOGIC_VECTOR (11 downto 0) := "100010000000";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv12_960 : STD_LOGIC_VECTOR (11 downto 0) := "100101100000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_5A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011010";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_10 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_const_lv12_FF0 : STD_LOGIC_VECTOR (11 downto 0) := "111111110000";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv8_C0 : STD_LOGIC_VECTOR (7 downto 0) := "11000000";
    constant ap_const_lv29_0 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv11_480 : STD_LOGIC_VECTOR (10 downto 0) := "10010000000";
    constant ap_const_lv11_780 : STD_LOGIC_VECTOR (10 downto 0) := "11110000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv12_B80 : STD_LOGIC_VECTOR (11 downto 0) := "101110000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv13_1780 : STD_LOGIC_VECTOR (12 downto 0) := "1011110000000";
    constant ap_const_lv12_A80 : STD_LOGIC_VECTOR (11 downto 0) := "101010000000";
    constant ap_const_lv13_16A0 : STD_LOGIC_VECTOR (12 downto 0) := "1011010100000";
    constant ap_const_lv9_1B2 : STD_LOGIC_VECTOR (8 downto 0) := "110110010";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv9_122 : STD_LOGIC_VECTOR (8 downto 0) := "100100010";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv48_FFFFFFFFFFFF : STD_LOGIC_VECTOR (47 downto 0) := "111111111111111111111111111111111111111111111111";
    constant ap_const_lv48_0 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000000000000";
    constant ap_const_lv80_FFFFFFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (79 downto 0) := "11111111111111111111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv80_0 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv6_22 : STD_LOGIC_VECTOR (5 downto 0) := "100010";
    constant ap_const_lv8_A2 : STD_LOGIC_VECTOR (7 downto 0) := "10100010";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv9_132 : STD_LOGIC_VECTOR (8 downto 0) := "100110010";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_FFFFFFE8 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111101000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv6_39 : STD_LOGIC_VECTOR (5 downto 0) := "111001";
    constant ap_const_lv32_FFFFFFE7 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111100111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv8_7E : STD_LOGIC_VECTOR (7 downto 0) := "01111110";
    constant ap_const_lv8_10 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_rst_n_inv : STD_LOGIC;
    signal in_stream_data_0_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal in_stream_data_0_vld_in : STD_LOGIC;
    signal in_stream_data_0_vld_out : STD_LOGIC;
    signal in_stream_data_0_ack_in : STD_LOGIC;
    signal in_stream_data_0_ack_out : STD_LOGIC;
    signal in_stream_data_0_payload_A : STD_LOGIC_VECTOR (31 downto 0);
    signal in_stream_data_0_payload_B : STD_LOGIC_VECTOR (31 downto 0);
    signal in_stream_data_0_sel_rd : STD_LOGIC := '0';
    signal in_stream_data_0_sel_wr : STD_LOGIC := '0';
    signal in_stream_data_0_sel : STD_LOGIC;
    signal in_stream_data_0_load_A : STD_LOGIC;
    signal in_stream_data_0_load_B : STD_LOGIC;
    signal in_stream_data_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal in_stream_data_0_state_cmp_full : STD_LOGIC;
    signal in_stream_last_0_vld_in : STD_LOGIC;
    signal in_stream_last_0_ack_out : STD_LOGIC;
    signal in_stream_last_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_stream_data_1_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal out_stream_data_1_vld_in : STD_LOGIC;
    signal out_stream_data_1_vld_out : STD_LOGIC;
    signal out_stream_data_1_ack_in : STD_LOGIC;
    signal out_stream_data_1_ack_out : STD_LOGIC;
    signal out_stream_data_1_payload_A : STD_LOGIC_VECTOR (31 downto 0);
    signal out_stream_data_1_payload_B : STD_LOGIC_VECTOR (31 downto 0);
    signal out_stream_data_1_sel_rd : STD_LOGIC := '0';
    signal out_stream_data_1_sel_wr : STD_LOGIC := '0';
    signal out_stream_data_1_sel : STD_LOGIC;
    signal out_stream_data_1_load_A : STD_LOGIC;
    signal out_stream_data_1_load_B : STD_LOGIC;
    signal out_stream_data_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_stream_data_1_state_cmp_full : STD_LOGIC;
    signal out_stream_last_1_data_out : STD_LOGIC;
    signal out_stream_last_1_vld_in : STD_LOGIC;
    signal out_stream_last_1_vld_out : STD_LOGIC;
    signal out_stream_last_1_ack_in : STD_LOGIC;
    signal out_stream_last_1_ack_out : STD_LOGIC;
    signal out_stream_last_1_payload_A : STD_LOGIC;
    signal out_stream_last_1_payload_B : STD_LOGIC;
    signal out_stream_last_1_sel_rd : STD_LOGIC := '0';
    signal out_stream_last_1_sel_wr : STD_LOGIC := '0';
    signal out_stream_last_1_sel : STD_LOGIC;
    signal out_stream_last_1_load_A : STD_LOGIC;
    signal out_stream_last_1_load_B : STD_LOGIC;
    signal out_stream_last_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_stream_last_1_state_cmp_full : STD_LOGIC;
    signal dataOut_last_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal dataOut_last_ce0 : STD_LOGIC;
    signal dataOut_last_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_stream_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (97 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal exitcond1_fu_733_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal exitcond2_fu_1029_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal exitcond3_fu_1431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal exitcond4_fu_1733_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal exitcond5_fu_2039_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state64 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal exitcond6_fu_2344_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_stream_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state97 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state97 : signal is "none";
    signal ap_CS_fsm_state98 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state98 : signal is "none";
    signal reg_715 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state2 : BOOLEAN;
    signal ap_block_state5 : BOOLEAN;
    signal ap_block_state55 : BOOLEAN;
    signal ap_block_state58 : BOOLEAN;
    signal ap_block_state61 : BOOLEAN;
    signal ap_block_state64 : BOOLEAN;
    signal dataOut_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_719 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal ap_CS_fsm_state74 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state74 : signal is "none";
    signal dataOut_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state82 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state82 : signal is "none";
    signal ap_CS_fsm_state90 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state90 : signal is "none";
    signal ap_CS_fsm_state93 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state93 : signal is "none";
    signal batch_w_mat_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_724 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state73 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal ap_CS_fsm_state77 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state77 : signal is "none";
    signal reg_728 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_7_fu_739_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_7_reg_3544 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Result_3_reg_3549 : STD_LOGIC_VECTOR (0 downto 0);
    signal exp_tmp_V_reg_3554 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_21_fu_771_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_21_reg_3559 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_8_fu_775_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_3564 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_2_fu_801_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_2_reg_3570 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal sh_amt_fu_832_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_reg_3575 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_22_fu_846_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_reg_3580 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp4_fu_950_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_reg_3585 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_956_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_3590 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel1_fu_962_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel1_reg_3595 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond2_fu_976_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_3600 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_1035_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_10_reg_3608 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_5_reg_3614 : STD_LOGIC_VECTOR (0 downto 0);
    signal exp_tmp_V_1_reg_3619 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_49_fu_1067_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_49_reg_3624 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_13_fu_1071_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_reg_3629 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_5_fu_1097_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_5_reg_3645 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal sh_amt_1_fu_1128_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_1_reg_3650 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_50_fu_1142_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_50_reg_3655 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp17_fu_1246_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp17_reg_3660 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_fu_1252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_3665 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel5_fu_1258_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel5_reg_3670 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond5_fu_1272_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond5_reg_3675 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_reg_3680 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_64_reg_3687 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp2_fu_1397_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp2_reg_3692 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal i_9_fu_1425_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal p_Result_7_reg_3714 : STD_LOGIC_VECTOR (0 downto 0);
    signal exp_tmp_V_2_reg_3719 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_79_fu_1463_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_79_reg_3724 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_28_fu_1467_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_reg_3729 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_8_fu_1493_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_8_reg_3735 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal sh_amt_2_fu_1524_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_2_reg_3740 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_87_fu_1538_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_87_reg_3745 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp26_fu_1642_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp26_reg_3750 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond6_fu_1648_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond6_reg_3755 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel9_fu_1654_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel9_reg_3760 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond8_fu_1668_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond8_reg_3765 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_8_fu_1727_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal p_Result_9_reg_3778 : STD_LOGIC_VECTOR (0 downto 0);
    signal exp_tmp_V_3_reg_3783 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_111_fu_1765_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_111_reg_3788 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_48_fu_1769_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_3793 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_11_fu_1795_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_11_reg_3799 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal sh_amt_3_fu_1826_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_3_reg_3804 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_112_fu_1840_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_112_reg_3809 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp35_fu_1944_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp35_reg_3814 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond9_fu_1950_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond9_reg_3819 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel13_fu_1956_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel13_reg_3824 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond11_fu_1970_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond11_reg_3829 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_10_fu_2029_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal i_4_cast_fu_2035_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal i_4_cast_reg_3839 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Result_11_reg_3847 : STD_LOGIC_VECTOR (0 downto 0);
    signal exp_tmp_V_4_reg_3852 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_153_fu_2071_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_153_reg_3857 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_75_fu_2075_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_75_reg_3862 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_11_fu_2081_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal i_11_reg_3868 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_14_fu_2107_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_14_reg_3873 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal sh_amt_4_fu_2138_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_4_reg_3878 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_154_fu_2152_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_154_reg_3883 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp44_fu_2256_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp44_reg_3888 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond12_fu_2262_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond12_reg_3893 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel17_fu_2268_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel17_reg_3898 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond14_fu_2282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond14_reg_3903 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_5_cast_fu_2340_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal i_5_cast_reg_3908 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Result_13_reg_3916 : STD_LOGIC_VECTOR (0 downto 0);
    signal exp_tmp_V_5_reg_3921 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_174_fu_2376_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_174_reg_3926 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_95_fu_2380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_95_reg_3931 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_12_fu_2386_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal i_12_reg_3937 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_17_fu_2412_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_17_reg_3942 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_CS_fsm_state65 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal sh_amt_5_fu_2443_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_5_reg_3947 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_175_fu_2457_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_175_reg_3952 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp53_fu_2561_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp53_reg_3957 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond15_fu_2567_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond15_reg_3962 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel21_fu_2573_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel21_reg_3967 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond17_fu_2587_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond17_reg_3972 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_13_fu_2651_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state67 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal batchIndex_cast_fu_2662_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal batchIndex_cast_reg_3985 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal batchIndex_cast1_fu_2666_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal batchIndex_cast1_reg_3990 : STD_LOGIC_VECTOR (8 downto 0);
    signal batchIndex_cast2_fu_2670_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal batchIndex_cast2_reg_3995 : STD_LOGIC_VECTOR (9 downto 0);
    signal batchIndex_1_fu_2680_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal batchIndex_1_reg_4003 : STD_LOGIC_VECTOR (5 downto 0);
    signal i1_cast_fu_2686_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal i1_cast_reg_4008 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal i_14_fu_2696_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_14_reg_4016 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_204_fu_2715_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_204_reg_4021 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond9_fu_2690_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal dataOut_V_addr_2_reg_4031 : STD_LOGIC_VECTOR (8 downto 0);
    signal smooth_grad_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_13_reg_4036 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_fu_2744_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_reg_4043 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal r_V_cast_fu_2747_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_V_cast_reg_4048 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_133_fu_2750_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_133_reg_4053 : STD_LOGIC_VECTOR (4 downto 0);
    signal j2_cast_fu_2757_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal j2_cast_reg_4058 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal j2_cast1_fu_2761_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal j2_cast1_reg_4063 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_fu_2771_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_reg_4071 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_205_fu_2777_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_205_reg_4076 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond10_fu_2765_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_147_fu_2822_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_147_reg_4091 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_138_fu_2827_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_138_reg_4101 : STD_LOGIC_VECTOR (0 downto 0);
    signal dataOut_V_addr_3_reg_4108 : STD_LOGIC_VECTOR (8 downto 0);
    signal batch_a_mat_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal batch_a_mat_V_load_reg_4114 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataOut_V_addr_4_reg_4119 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_1_fu_2851_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_1_reg_4125 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_18_reg_4132 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_6_cast_fu_2921_p1 : STD_LOGIC_VECTOR (93 downto 0);
    signal r_V_6_cast_reg_4137 : STD_LOGIC_VECTOR (93 downto 0);
    signal ap_CS_fsm_state75 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal tmp_157_cast_fu_2931_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_157_cast_reg_4142 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_151_fu_2935_p3 : STD_LOGIC_VECTOR (79 downto 0);
    signal tmp_151_reg_4147 : STD_LOGIC_VECTOR (79 downto 0);
    signal tmp_152_fu_2942_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_152_reg_4152 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_cast2_fu_2949_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k3_cast2_reg_4158 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state76 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal k_fu_2963_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal k_reg_4167 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_207_fu_2969_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_207_reg_4172 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond11_fu_2957_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_170_fu_3019_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_170_reg_4187 : STD_LOGIC_VECTOR (8 downto 0);
    signal batch_z_mat_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal batch_z_mat_V_load_1_reg_4192 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_161_fu_3024_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_161_reg_4198 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state78 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state78 : signal is "none";
    signal dataOut_V_addr_5_reg_4214 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state81 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state81 : signal is "none";
    signal dataOut_V_addr_6_reg_4219 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_176_fu_3075_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_176_reg_4224 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_3033_p2 : STD_LOGIC_VECTOR (93 downto 0);
    signal r_V_3_reg_4229 : STD_LOGIC_VECTOR (93 downto 0);
    signal grp_fu_3041_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_s_reg_4234 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_4_cast_fu_3096_p2 : STD_LOGIC_VECTOR (79 downto 0);
    signal r_V_4_cast_reg_4239 : STD_LOGIC_VECTOR (79 downto 0);
    signal tmp_185_cast_fu_3177_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_185_cast_reg_4244 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state83 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state83 : signal is "none";
    signal k0_fu_3190_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal k0_reg_4252 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state84 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state84 : signal is "none";
    signal tmp_179_fu_3202_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_179_reg_4257 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond12_fu_3184_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal batch_x_mat_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal batch_x_mat_V_load_reg_4267 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state85 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state85 : signal is "none";
    signal ap_CS_fsm_state86 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state86 : signal is "none";
    signal dataOut_V_addr_7_reg_4277 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state89 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state89 : signal is "none";
    signal grp_fu_3228_p2 : STD_LOGIC_VECTOR (79 downto 0);
    signal r_V_2_reg_4282 : STD_LOGIC_VECTOR (79 downto 0);
    signal i_15_fu_3267_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_15_reg_4290 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state92 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state92 : signal is "none";
    signal ap_block_state92 : BOOLEAN;
    signal exitcond_fu_3261_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_15_reg_4305 : STD_LOGIC_VECTOR (0 downto 0);
    signal dataOut_last_load_reg_4311 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_110_fu_3287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_110_reg_4316 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state94 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state94 : signal is "none";
    signal tmp_V_4_fu_3299_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_4_reg_4321 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_fu_3316_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_reg_4329 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_203_fu_3324_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_203_reg_4334 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_113_fu_3328_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_113_reg_4339 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state95 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state95 : signal is "none";
    signal tmp_117_fu_3425_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_117_reg_4345 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_120_fu_3433_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_120_reg_4350 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_reg_4355 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state96 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state96 : signal is "none";
    signal tmp_202_reg_4360 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_s_fu_3533_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataOut_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal dataOut_V_ce0 : STD_LOGIC;
    signal dataOut_V_we0 : STD_LOGIC;
    signal dataOut_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataOut_V_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal dataOut_V_ce1 : STD_LOGIC;
    signal dataOut_V_we1 : STD_LOGIC;
    signal dataOut_V_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal smooth_grad_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal smooth_grad_V_ce0 : STD_LOGIC;
    signal smooth_grad_V_we0 : STD_LOGIC;
    signal smooth_grad_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal nn_out_mat_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal nn_out_mat_V_ce0 : STD_LOGIC;
    signal nn_out_mat_V_we0 : STD_LOGIC;
    signal nn_out_mat_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal nn_out_mat_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal batch_y_mat_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal batch_y_mat_V_ce0 : STD_LOGIC;
    signal batch_y_mat_V_we0 : STD_LOGIC;
    signal batch_y_mat_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal batch_y_mat_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal batch_a_mat_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal batch_a_mat_V_ce0 : STD_LOGIC;
    signal batch_a_mat_V_we0 : STD_LOGIC;
    signal batch_a_mat_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal batch_z_mat_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal batch_z_mat_V_ce0 : STD_LOGIC;
    signal batch_z_mat_V_we0 : STD_LOGIC;
    signal batch_z_mat_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal batch_x_mat_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal batch_x_mat_V_ce0 : STD_LOGIC;
    signal batch_x_mat_V_we0 : STD_LOGIC;
    signal batch_x_mat_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal batch_w_mat_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal batch_w_mat_V_ce0 : STD_LOGIC;
    signal batch_w_mat_V_we0 : STD_LOGIC;
    signal batch_w_mat_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_reg_559 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal i_1_reg_571 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_2_reg_583 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_3_reg_595 : STD_LOGIC_VECTOR (11 downto 0);
    signal i_4_reg_607 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal i_5_reg_618 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state66 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal i_6_reg_629 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond7_fu_2645_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal batchIndex_reg_640 : STD_LOGIC_VECTOR (5 downto 0);
    signal i1_reg_652 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond8_fu_2674_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j2_reg_663 : STD_LOGIC_VECTOR (4 downto 0);
    signal k3_reg_674 : STD_LOGIC_VECTOR (4 downto 0);
    signal k1_reg_685 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state91 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state91 : signal is "none";
    signal i5_reg_696 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_fu_982_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_fu_1316_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal smooth_grad_V_addr_1_gep_fu_376_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_24_fu_1680_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_44_fu_1982_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_71_fu_2293_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_91_fu_2598_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_108_fu_2657_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_131_fu_2733_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_128_fu_2710_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_137_fu_2796_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_143_fu_2817_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_140_fu_2838_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_148_fu_2843_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_159_fu_2986_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_166_fu_3004_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_163_fu_3055_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_171_fu_3060_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_184_fu_3220_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_180_fu_3233_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_109_fu_3273_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal abs_dif_V_3_fu_1363_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_69_fu_1420_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_132_fu_2738_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_149_fu_2915_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_707_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_V_fu_745_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_fu_749_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_7_fu_784_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_4_fu_791_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_1_fu_795_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_3_fu_781_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_fu_808_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_s_fu_814_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_820_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_2_fu_826_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_29_fu_856_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ireg_V_to_int_fu_872_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_35_fu_876_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_840_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_892_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_demorgan_fu_903_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_908_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_850_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_914_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_920_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp21_demorgan_fu_938_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_866_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_944_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_932_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_fu_926_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_884_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp2_fu_897_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_fu_970_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_cast_fu_987_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_990_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_15_fu_994_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_25_fu_1003_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_fu_999_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel_fu_1008_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel2_fu_1015_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ireg_V_1_fu_1041_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_fu_1045_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_27_fu_1080_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_6_fu_1087_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_4_fu_1091_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_11_fu_1077_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_1_fu_1104_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_16_fu_1110_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_1116_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_18_fu_1122_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_52_fu_1152_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ireg_V_1_to_int_fu_1168_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_57_fu_1172_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_1136_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_fu_1188_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp30_demorgan_fu_1199_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp11_fu_1204_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_1146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp12_fu_1210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_fu_1216_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp45_demorgan_fu_1234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp1_fu_1162_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp16_fu_1240_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp15_fu_1228_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp14_fu_1222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_fu_1180_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp10_fu_1193_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_fu_1266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lhs_V_fu_1278_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal rhs_V_fu_1282_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_fu_1286_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_5_fu_1310_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sh_amt_1_cast_fu_1321_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_fu_1324_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_33_fu_1328_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_41_fu_1337_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_54_fu_1333_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel4_fu_1342_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel6_fu_1349_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal abs_dif_V_3_cast_fu_1367_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal abs_dif_V_fu_1370_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal abs_dif_V_1_fu_1376_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_65_fu_1387_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal abs_dif_V_1_cast_fu_1383_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1414_p0 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_1414_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_fu_1414_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ireg_V_2_fu_1437_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_74_fu_1441_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_51_fu_1476_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_8_fu_1483_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_7_fu_1487_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_26_fu_1473_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_2_fu_1500_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_36_fu_1506_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_fu_1512_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_38_fu_1518_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_89_fu_1548_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ireg_V_2_to_int_fu_1564_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_97_fu_1568_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_1532_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp18_fu_1584_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp55_demorgan_fu_1595_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp20_fu_1600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_fu_1542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp21_fu_1606_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp22_fu_1612_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp70_demorgan_fu_1630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp3_fu_1558_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp25_fu_1636_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp24_fu_1624_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp23_fu_1618_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_fu_1576_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp19_fu_1589_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond7_fu_1662_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_1674_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sh_amt_2_cast_fu_1685_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_55_fu_1688_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_56_fu_1692_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_63_fu_1701_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_96_fu_1697_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel8_fu_1706_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel10_fu_1713_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ireg_V_3_fu_1739_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_105_fu_1743_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_66_fu_1778_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_10_fu_1785_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_10_fu_1789_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_46_fu_1775_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_3_fu_1802_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_59_fu_1808_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_fu_1814_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_61_fu_1820_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_118_fu_1850_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ireg_V_3_to_int_fu_1866_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_121_fu_1870_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_fu_1834_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp27_fu_1886_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp80_demorgan_fu_1897_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp29_fu_1902_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_67_fu_1844_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp30_fu_1908_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp31_fu_1914_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp95_demorgan_fu_1932_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp4_fu_1860_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp34_fu_1938_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp33_fu_1926_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp32_fu_1920_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_76_fu_1878_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp28_fu_1891_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond10_fu_1964_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_fu_1976_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_3_cast_fu_1987_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_68_fu_1990_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_72_fu_1994_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_77_fu_2003_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_119_fu_1999_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel12_fu_2008_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel14_fu_2015_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ireg_V_4_fu_2045_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_141_fu_2049_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_78_fu_2090_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_12_fu_2097_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_13_fu_2101_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_73_fu_2087_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_4_fu_2114_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_80_fu_2120_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_fu_2126_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_82_fu_2132_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_156_fu_2162_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ireg_V_4_to_int_fu_2178_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_160_fu_2182_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_83_fu_2146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp36_fu_2198_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp105_demorgan_fu_2209_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp38_fu_2214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_fu_2156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp39_fu_2220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp40_fu_2226_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp120_demorgan_fu_2244_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp5_fu_2172_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp43_fu_2250_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp42_fu_2238_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp41_fu_2232_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_88_fu_2190_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp37_fu_2203_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond13_fu_2276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_70_fu_2288_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sh_amt_4_cast_fu_2298_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_85_fu_2301_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_86_fu_2305_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_92_fu_2314_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_158_fu_2310_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel16_fu_2319_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel18_fu_2326_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ireg_V_5_fu_2350_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_172_fu_2354_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_94_fu_2395_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_14_fu_2402_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_16_fu_2406_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_93_fu_2392_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_5_fu_2419_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_98_fu_2425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_99_fu_2431_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_100_fu_2437_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_182_fu_2467_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ireg_V_5_to_int_fu_2483_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_193_fu_2487_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_101_fu_2451_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp45_fu_2503_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp130_demorgan_fu_2514_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp47_fu_2519_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_102_fu_2461_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp48_fu_2525_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp49_fu_2531_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp145_demorgan_fu_2549_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp6_fu_2477_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp52_fu_2555_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp51_fu_2543_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp50_fu_2537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_106_fu_2495_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp46_fu_2508_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond16_fu_2581_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_90_fu_2593_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sh_amt_5_cast_fu_2603_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_103_fu_2606_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_104_fu_2610_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_107_fu_2619_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_192_fu_2615_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel20_fu_2624_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel22_fu_2631_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_135_fu_2702_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_129_fu_2719_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_130_fu_2727_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp1_fu_2781_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_136_fu_2791_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp2_fu_2802_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_142_fu_2812_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_139_fu_2833_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_1_fu_2851_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_1_fu_2851_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_5_fu_2859_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_5_fu_2859_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_5_fu_2859_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_206_fu_2874_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_145_fu_2877_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_148_cast_fu_2892_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal lhs_V_1_fu_2884_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal ret_V_5_fu_2898_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_150_fu_2924_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_155_fu_2973_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_157_fu_2981_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_164_fu_2991_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_165_fu_2999_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal k3_cast_fu_2953_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp155_fu_3009_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp155_cast_fu_3015_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_3033_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_162_fu_3046_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_167_cast_fu_3051_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl_fu_3064_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl_cast_fu_3071_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_208_fu_3080_p1 : STD_LOGIC_VECTOR (79 downto 0);
    signal tmp_177_fu_3084_p2 : STD_LOGIC_VECTOR (79 downto 0);
    signal tmp_178_fu_3089_p3 : STD_LOGIC_VECTOR (79 downto 0);
    signal tmp_209_fu_3102_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_167_fu_3105_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_168_fu_3110_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal lhs_V_2_fu_3117_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_175_cast_fu_3125_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_V_6_fu_3131_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal lhs_V_3_fu_3148_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_182_cast_fu_3156_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_V_7_fu_3160_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal k1_cast_fu_3180_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp156_fu_3196_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_181_fu_3207_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_183_fu_3215_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_V_4_fu_3237_p3 : STD_LOGIC_VECTOR (79 downto 0);
    signal ret_V_8_fu_3245_p2 : STD_LOGIC_VECTOR (79 downto 0);
    signal tmp_V_fu_3293_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_16_fu_3306_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_fu_3333_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_195_fu_3339_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_196_fu_3355_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_197_fu_3359_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_198_fu_3365_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_199_fu_3369_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_fu_3375_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp7_fu_3349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_114_fu_3380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_201_fu_3392_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_1_fu_3406_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_3400_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_115_fu_3413_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_fu_3386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_116_fu_3419_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_122_fu_3439_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_124_fu_3449_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_123_fu_3444_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_125_fu_3454_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_1_fu_3459_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_2_fu_3466_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_224_cast_cast_fu_3492_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_126_fu_3499_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_2_trunc_fu_3504_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal m_6_fu_3489_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_127_fu_3510_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_17_fu_3517_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_134_fu_3529_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1414_ap_start : STD_LOGIC;
    signal grp_fu_1414_ap_done : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (97 downto 0);
    signal grp_fu_1414_p10 : STD_LOGIC_VECTOR (43 downto 0);

    component backward_lite_fpekbM IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component backward_lite_sdilbW IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (43 downto 0);
        din1 : IN STD_LOGIC_VECTOR (32 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component backward_lite_mulmb6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (93 downto 0) );
    end component;


    component backward_lite_mulncg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component backward_lite_mulocq IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (79 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (79 downto 0) );
    end component;


    component backward_lite_datbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component backward_lite_datcud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component backward_lite_smodEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component backward_lite_batg8j IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component backward_lite_batibs IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component backward_lite_batjbC IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    dataOut_last_U : component backward_lite_datbkb
    generic map (
        DataWidth => 1,
        AddressRange => 434,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => dataOut_last_address0,
        ce0 => dataOut_last_ce0,
        q0 => dataOut_last_q0);

    dataOut_V_U : component backward_lite_datcud
    generic map (
        DataWidth => 32,
        AddressRange => 434,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => dataOut_V_address0,
        ce0 => dataOut_V_ce0,
        we0 => dataOut_V_we0,
        d0 => dataOut_V_d0,
        q0 => dataOut_V_q0,
        address1 => dataOut_V_address1,
        ce1 => dataOut_V_ce1,
        we1 => dataOut_V_we1,
        d1 => dataOut_V_d1,
        q1 => dataOut_V_q1);

    smooth_grad_V_U : component backward_lite_smodEe
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => smooth_grad_V_address0,
        ce0 => smooth_grad_V_ce0,
        we0 => smooth_grad_V_we0,
        d0 => smooth_grad_V_d0,
        q0 => smooth_grad_V_q0);

    nn_out_mat_V_U : component backward_lite_smodEe
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => nn_out_mat_V_address0,
        ce0 => nn_out_mat_V_ce0,
        we0 => nn_out_mat_V_we0,
        d0 => nn_out_mat_V_d0,
        q0 => nn_out_mat_V_q0);

    batch_y_mat_V_U : component backward_lite_smodEe
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => batch_y_mat_V_address0,
        ce0 => batch_y_mat_V_ce0,
        we0 => batch_y_mat_V_we0,
        d0 => batch_y_mat_V_d0,
        q0 => batch_y_mat_V_q0);

    batch_a_mat_V_U : component backward_lite_batg8j
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => batch_a_mat_V_address0,
        ce0 => batch_a_mat_V_ce0,
        we0 => batch_a_mat_V_we0,
        d0 => batch_a_mat_V_d0,
        q0 => batch_a_mat_V_q0);

    batch_z_mat_V_U : component backward_lite_batg8j
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => batch_z_mat_V_address0,
        ce0 => batch_z_mat_V_ce0,
        we0 => batch_z_mat_V_we0,
        d0 => batch_z_mat_V_d0,
        q0 => batch_z_mat_V_q0);

    batch_x_mat_V_U : component backward_lite_batibs
    generic map (
        DataWidth => 32,
        AddressRange => 224,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => batch_x_mat_V_address0,
        ce0 => batch_x_mat_V_ce0,
        we0 => batch_x_mat_V_we0,
        d0 => batch_x_mat_V_d0,
        q0 => batch_x_mat_V_q0);

    batch_w_mat_V_U : component backward_lite_batjbC
    generic map (
        DataWidth => 32,
        AddressRange => 288,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => batch_w_mat_V_address0,
        ce0 => batch_w_mat_V_ce0,
        we0 => batch_w_mat_V_we0,
        d0 => batch_w_mat_V_d0,
        q0 => batch_w_mat_V_q0);

    backward_lite_fpekbM_U1 : component backward_lite_fpekbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => in_stream_data_0_data_out,
        dout => grp_fu_707_p1);

    backward_lite_sdilbW_U2 : component backward_lite_sdilbW
    generic map (
        ID => 1,
        NUM_STAGE => 48,
        din0_WIDTH => 44,
        din1_WIDTH => 33,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        start => grp_fu_1414_ap_start,
        done => grp_fu_1414_ap_done,
        din0 => grp_fu_1414_p0,
        din1 => grp_fu_1414_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1414_p2);

    backward_lite_mulmb6_U3 : component backward_lite_mulmb6
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 94)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_3033_p0,
        din1 => reg_724,
        ce => ap_const_logic_1,
        dout => grp_fu_3033_p2);

    backward_lite_mulncg_U4 : component backward_lite_mulncg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => r_V_1_reg_4125,
        din1 => batch_z_mat_V_load_1_reg_4192,
        ce => ap_const_logic_1,
        dout => grp_fu_3041_p2);

    backward_lite_mulocq_U5 : component backward_lite_mulocq
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 80,
        dout_WIDTH => 80)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => batch_x_mat_V_load_reg_4267,
        din1 => r_V_4_cast_reg_4239,
        ce => ap_const_logic_1,
        dout => grp_fu_3228_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    in_stream_data_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                in_stream_data_0_sel_rd <= ap_const_logic_0;
            else
                if (((in_stream_data_0_ack_out = ap_const_logic_1) and (in_stream_data_0_vld_out = ap_const_logic_1))) then 
                                        in_stream_data_0_sel_rd <= not(in_stream_data_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    in_stream_data_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                in_stream_data_0_sel_wr <= ap_const_logic_0;
            else
                if (((in_stream_data_0_ack_in = ap_const_logic_1) and (in_stream_data_0_vld_in = ap_const_logic_1))) then 
                                        in_stream_data_0_sel_wr <= not(in_stream_data_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    in_stream_data_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                in_stream_data_0_state <= ap_const_lv2_0;
            else
                if ((((in_stream_data_0_vld_in = ap_const_logic_0) and (in_stream_data_0_state = ap_const_lv2_2)) or ((in_stream_data_0_vld_in = ap_const_logic_0) and (in_stream_data_0_ack_out = ap_const_logic_1) and (in_stream_data_0_state = ap_const_lv2_3)))) then 
                    in_stream_data_0_state <= ap_const_lv2_2;
                elsif ((((in_stream_data_0_ack_out = ap_const_logic_0) and (in_stream_data_0_state = ap_const_lv2_1)) or ((in_stream_data_0_ack_out = ap_const_logic_0) and (in_stream_data_0_vld_in = ap_const_logic_1) and (in_stream_data_0_state = ap_const_lv2_3)))) then 
                    in_stream_data_0_state <= ap_const_lv2_1;
                elsif (((not(((in_stream_data_0_vld_in = ap_const_logic_0) and (in_stream_data_0_ack_out = ap_const_logic_1))) and not(((in_stream_data_0_ack_out = ap_const_logic_0) and (in_stream_data_0_vld_in = ap_const_logic_1))) and (in_stream_data_0_state = ap_const_lv2_3)) or ((in_stream_data_0_ack_out = ap_const_logic_1) and (in_stream_data_0_state = ap_const_lv2_1)) or ((in_stream_data_0_vld_in = ap_const_logic_1) and (in_stream_data_0_state = ap_const_lv2_2)))) then 
                    in_stream_data_0_state <= ap_const_lv2_3;
                else 
                    in_stream_data_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    in_stream_last_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                in_stream_last_0_state <= ap_const_lv2_0;
            else
                if ((((in_stream_last_0_vld_in = ap_const_logic_0) and (in_stream_last_0_state = ap_const_lv2_2)) or ((in_stream_last_0_vld_in = ap_const_logic_0) and (in_stream_last_0_ack_out = ap_const_logic_1) and (in_stream_last_0_state = ap_const_lv2_3)))) then 
                    in_stream_last_0_state <= ap_const_lv2_2;
                elsif ((((in_stream_last_0_ack_out = ap_const_logic_0) and (in_stream_last_0_state = ap_const_lv2_1)) or ((in_stream_last_0_ack_out = ap_const_logic_0) and (in_stream_last_0_vld_in = ap_const_logic_1) and (in_stream_last_0_state = ap_const_lv2_3)))) then 
                    in_stream_last_0_state <= ap_const_lv2_1;
                elsif (((not(((in_stream_last_0_vld_in = ap_const_logic_0) and (in_stream_last_0_ack_out = ap_const_logic_1))) and not(((in_stream_last_0_ack_out = ap_const_logic_0) and (in_stream_last_0_vld_in = ap_const_logic_1))) and (in_stream_last_0_state = ap_const_lv2_3)) or ((in_stream_last_0_ack_out = ap_const_logic_1) and (in_stream_last_0_state = ap_const_lv2_1)) or ((in_stream_last_0_vld_in = ap_const_logic_1) and (in_stream_last_0_state = ap_const_lv2_2)))) then 
                    in_stream_last_0_state <= ap_const_lv2_3;
                else 
                    in_stream_last_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_stream_data_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_stream_data_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_stream_data_1_ack_out = ap_const_logic_1) and (out_stream_data_1_vld_out = ap_const_logic_1))) then 
                                        out_stream_data_1_sel_rd <= not(out_stream_data_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_stream_data_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_stream_data_1_sel_wr <= ap_const_logic_0;
            else
                if (((out_stream_data_1_ack_in = ap_const_logic_1) and (out_stream_data_1_vld_in = ap_const_logic_1))) then 
                                        out_stream_data_1_sel_wr <= not(out_stream_data_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    out_stream_data_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_stream_data_1_state <= ap_const_lv2_0;
            else
                if ((((out_stream_data_1_vld_in = ap_const_logic_0) and (out_stream_data_1_state = ap_const_lv2_2)) or ((out_stream_data_1_vld_in = ap_const_logic_0) and (out_stream_data_1_ack_out = ap_const_logic_1) and (out_stream_data_1_state = ap_const_lv2_3)))) then 
                    out_stream_data_1_state <= ap_const_lv2_2;
                elsif ((((out_stream_data_1_ack_out = ap_const_logic_0) and (out_stream_data_1_state = ap_const_lv2_1)) or ((out_stream_data_1_ack_out = ap_const_logic_0) and (out_stream_data_1_vld_in = ap_const_logic_1) and (out_stream_data_1_state = ap_const_lv2_3)))) then 
                    out_stream_data_1_state <= ap_const_lv2_1;
                elsif (((not(((out_stream_data_1_vld_in = ap_const_logic_0) and (out_stream_data_1_ack_out = ap_const_logic_1))) and not(((out_stream_data_1_ack_out = ap_const_logic_0) and (out_stream_data_1_vld_in = ap_const_logic_1))) and (out_stream_data_1_state = ap_const_lv2_3)) or ((out_stream_data_1_ack_out = ap_const_logic_1) and (out_stream_data_1_state = ap_const_lv2_1)) or ((out_stream_data_1_vld_in = ap_const_logic_1) and (out_stream_data_1_state = ap_const_lv2_2)))) then 
                    out_stream_data_1_state <= ap_const_lv2_3;
                else 
                    out_stream_data_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_stream_last_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_stream_last_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_stream_last_1_ack_out = ap_const_logic_1) and (out_stream_last_1_vld_out = ap_const_logic_1))) then 
                                        out_stream_last_1_sel_rd <= not(out_stream_last_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_stream_last_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_stream_last_1_sel_wr <= ap_const_logic_0;
            else
                if (((out_stream_last_1_ack_in = ap_const_logic_1) and (out_stream_last_1_vld_in = ap_const_logic_1))) then 
                                        out_stream_last_1_sel_wr <= not(out_stream_last_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    out_stream_last_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_stream_last_1_state <= ap_const_lv2_0;
            else
                if ((((out_stream_last_1_vld_in = ap_const_logic_0) and (out_stream_last_1_state = ap_const_lv2_2)) or ((out_stream_last_1_vld_in = ap_const_logic_0) and (out_stream_last_1_ack_out = ap_const_logic_1) and (out_stream_last_1_state = ap_const_lv2_3)))) then 
                    out_stream_last_1_state <= ap_const_lv2_2;
                elsif ((((out_stream_last_1_ack_out = ap_const_logic_0) and (out_stream_last_1_state = ap_const_lv2_1)) or ((out_stream_last_1_ack_out = ap_const_logic_0) and (out_stream_last_1_vld_in = ap_const_logic_1) and (out_stream_last_1_state = ap_const_lv2_3)))) then 
                    out_stream_last_1_state <= ap_const_lv2_1;
                elsif (((not(((out_stream_last_1_vld_in = ap_const_logic_0) and (out_stream_last_1_ack_out = ap_const_logic_1))) and not(((out_stream_last_1_ack_out = ap_const_logic_0) and (out_stream_last_1_vld_in = ap_const_logic_1))) and (out_stream_last_1_state = ap_const_lv2_3)) or ((out_stream_last_1_ack_out = ap_const_logic_1) and (out_stream_last_1_state = ap_const_lv2_1)) or ((out_stream_last_1_vld_in = ap_const_logic_1) and (out_stream_last_1_state = ap_const_lv2_2)))) then 
                    out_stream_last_1_state <= ap_const_lv2_3;
                else 
                    out_stream_last_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    batchIndex_reg_640_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state67) and (exitcond7_fu_2645_p2 = ap_const_lv1_1))) then 
                batchIndex_reg_640 <= ap_const_lv6_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state69) and (exitcond9_fu_2690_p2 = ap_const_lv1_1))) then 
                batchIndex_reg_640 <= batchIndex_1_reg_4003;
            end if; 
        end if;
    end process;

    i1_reg_652_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state68) and (exitcond8_fu_2674_p2 = ap_const_lv1_0))) then 
                i1_reg_652 <= ap_const_lv2_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state72) and (exitcond10_fu_2765_p2 = ap_const_lv1_1))) then 
                i1_reg_652 <= i_14_reg_4016;
            end if; 
        end if;
    end process;

    i5_reg_696_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state68) and (exitcond8_fu_2674_p2 = ap_const_lv1_1))) then 
                i5_reg_696 <= ap_const_lv9_0;
            elsif (((out_stream_data_1_ack_in = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state98))) then 
                i5_reg_696 <= i_15_reg_4290;
            end if; 
        end if;
    end process;

    i_1_reg_571_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond1_fu_733_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_fu_733_p2 = ap_const_lv1_1))) then 
                i_1_reg_571 <= ap_const_lv8_40;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
                i_1_reg_571 <= i_9_fu_1425_p2;
            end if; 
        end if;
    end process;

    i_2_reg_583_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond2_fu_1029_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond2_fu_1029_p2 = ap_const_lv1_1))) then 
                i_2_reg_583 <= ap_const_lv11_80;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
                i_2_reg_583 <= i_8_fu_1727_p2;
            end if; 
        end if;
    end process;

    i_3_reg_595_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond3_fu_1431_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state55) and (exitcond3_fu_1431_p2 = ap_const_lv1_1))) then 
                i_3_reg_595 <= ap_const_lv12_480;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
                i_3_reg_595 <= i_10_fu_2029_p2;
            end if; 
        end if;
    end process;

    i_4_reg_607_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond4_fu_1733_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state58) and (exitcond4_fu_1733_p2 = ap_const_lv1_1))) then 
                i_4_reg_607 <= ap_const_lv12_880;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
                i_4_reg_607 <= i_11_reg_3868;
            end if; 
        end if;
    end process;

    i_5_reg_618_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond5_fu_2039_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state61) and (exitcond5_fu_2039_p2 = ap_const_lv1_1))) then 
                i_5_reg_618 <= ap_const_lv12_960;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
                i_5_reg_618 <= i_12_reg_3937;
            end if; 
        end if;
    end process;

    i_6_reg_629_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond6_fu_2344_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state64) and (exitcond6_fu_2344_p2 = ap_const_lv1_1))) then 
                i_6_reg_629 <= ap_const_lv9_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state67) and (exitcond7_fu_2645_p2 = ap_const_lv1_0))) then 
                i_6_reg_629 <= i_13_fu_2651_p2;
            end if; 
        end if;
    end process;

    i_reg_559_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                i_reg_559 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                i_reg_559 <= i_7_reg_3544;
            end if; 
        end if;
    end process;

    j2_reg_663_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state76) and (exitcond11_fu_2957_p2 = ap_const_lv1_1))) then 
                j2_reg_663 <= j_reg_4071;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
                j2_reg_663 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    k1_reg_685_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
                k1_reg_685 <= k0_reg_4252;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
                k1_reg_685 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    k3_reg_674_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state84) and (exitcond12_fu_3184_p2 = ap_const_lv1_1))) then 
                k3_reg_674 <= k_reg_4167;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
                k3_reg_674 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    reg_719_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state93) or (ap_const_logic_1 = ap_CS_fsm_state90) or (ap_const_logic_1 = ap_CS_fsm_state82))) then 
                reg_719 <= dataOut_V_q1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state70))) then 
                reg_719 <= dataOut_V_q0;
            end if; 
        end if;
    end process;

    reg_728_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
                reg_728 <= dataOut_V_q0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
                reg_728 <= dataOut_V_q1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state68)) then
                batchIndex_1_reg_4003 <= batchIndex_1_fu_2680_p2;
                    batchIndex_cast1_reg_3990(5 downto 0) <= batchIndex_cast1_fu_2666_p1(5 downto 0);
                    batchIndex_cast2_reg_3995(5 downto 0) <= batchIndex_cast2_fu_2670_p1(5 downto 0);
                    batchIndex_cast_reg_3985(5 downto 0) <= batchIndex_cast_fu_2662_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state73)) then
                batch_a_mat_V_load_reg_4114 <= batch_a_mat_V_q0;
                dataOut_V_addr_3_reg_4108 <= tmp_140_fu_2838_p1(9 - 1 downto 0);
                    dataOut_V_addr_4_reg_4119(4 downto 0) <= tmp_148_fu_2843_p1(9 - 1 downto 0)(4 downto 0);
                tmp_138_reg_4101 <= tmp_138_fu_2827_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state85)) then
                batch_x_mat_V_load_reg_4267 <= batch_x_mat_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state77)) then
                batch_z_mat_V_load_1_reg_4192 <= batch_z_mat_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state69) and (exitcond9_fu_2690_p2 = ap_const_lv1_0))) then
                    dataOut_V_addr_2_reg_4031(1 downto 0) <= tmp_128_fu_2710_p1(9 - 1 downto 0)(1 downto 0);
                tmp_204_reg_4021 <= tmp_204_fu_2715_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state81)) then
                dataOut_V_addr_5_reg_4214 <= tmp_163_fu_3055_p1(9 - 1 downto 0);
                dataOut_V_addr_6_reg_4219 <= tmp_171_fu_3060_p1(9 - 1 downto 0);
                tmp_176_reg_4224 <= tmp_176_fu_3075_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state89)) then
                dataOut_V_addr_7_reg_4277 <= tmp_180_fu_3233_p1(9 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state93)) then
                dataOut_last_load_reg_4311 <= dataOut_last_q0;
                p_Result_15_reg_4305 <= dataOut_V_q1(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond2_fu_1029_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond2_fu_1029_p2 = ap_const_lv1_0))) then
                exp_tmp_V_1_reg_3619 <= ireg_V_1_fu_1041_p1(62 downto 52);
                p_Result_5_reg_3614 <= ireg_V_1_fu_1041_p1(63 downto 63);
                    tmp_10_reg_3608(7 downto 0) <= tmp_10_fu_1035_p1(7 downto 0);
                tmp_13_reg_3629 <= tmp_13_fu_1071_p2;
                tmp_49_reg_3624 <= tmp_49_fu_1067_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond3_fu_1431_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state55) and (exitcond3_fu_1431_p2 = ap_const_lv1_0))) then
                exp_tmp_V_2_reg_3719 <= ireg_V_2_fu_1437_p1(62 downto 52);
                p_Result_7_reg_3714 <= ireg_V_2_fu_1437_p1(63 downto 63);
                tmp_28_reg_3729 <= tmp_28_fu_1467_p2;
                tmp_79_reg_3724 <= tmp_79_fu_1463_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond4_fu_1733_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state58) and (exitcond4_fu_1733_p2 = ap_const_lv1_0))) then
                exp_tmp_V_3_reg_3783 <= ireg_V_3_fu_1739_p1(62 downto 52);
                p_Result_9_reg_3778 <= ireg_V_3_fu_1739_p1(63 downto 63);
                tmp_111_reg_3788 <= tmp_111_fu_1765_p1;
                tmp_48_reg_3793 <= tmp_48_fu_1769_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond5_fu_2039_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state61) and (exitcond5_fu_2039_p2 = ap_const_lv1_0))) then
                exp_tmp_V_4_reg_3852 <= ireg_V_4_fu_2045_p1(62 downto 52);
                i_11_reg_3868 <= i_11_fu_2081_p2;
                p_Result_11_reg_3847 <= ireg_V_4_fu_2045_p1(63 downto 63);
                tmp_153_reg_3857 <= tmp_153_fu_2071_p1;
                tmp_75_reg_3862 <= tmp_75_fu_2075_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond6_fu_2344_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state64) and (exitcond6_fu_2344_p2 = ap_const_lv1_0))) then
                exp_tmp_V_5_reg_3921 <= ireg_V_5_fu_2350_p1(62 downto 52);
                i_12_reg_3937 <= i_12_fu_2386_p2;
                p_Result_13_reg_3916 <= ireg_V_5_fu_2350_p1(63 downto 63);
                tmp_174_reg_3926 <= tmp_174_fu_2376_p1;
                tmp_95_reg_3931 <= tmp_95_fu_2380_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond1_fu_733_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_fu_733_p2 = ap_const_lv1_0))) then
                exp_tmp_V_reg_3554 <= ireg_V_fu_745_p1(62 downto 52);
                p_Result_3_reg_3549 <= ireg_V_fu_745_p1(63 downto 63);
                tmp_21_reg_3559 <= tmp_21_fu_771_p1;
                tmp_8_reg_3564 <= tmp_8_fu_775_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state69)) then
                    i1_cast_reg_4008(1 downto 0) <= i1_cast_fu_2686_p1(1 downto 0);
                i_14_reg_4016 <= i_14_fu_2696_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((out_stream_last_1_ack_in = ap_const_logic_0) or (out_stream_data_1_ack_in = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state92))) then
                i_15_reg_4290 <= i_15_fu_3267_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond5_fu_2039_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state61))) then
                    i_4_cast_reg_3839(11 downto 0) <= i_4_cast_fu_2035_p1(11 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond6_fu_2344_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state64))) then
                    i_5_cast_reg_3908(11 downto 0) <= i_5_cast_fu_2340_p1(11 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond1_fu_733_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                i_7_reg_3544 <= i_7_fu_739_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                icmp2_reg_3692 <= icmp2_fu_1397_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((in_stream_data_0_load_A = ap_const_logic_1)) then
                in_stream_data_0_payload_A <= in_stream_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((in_stream_data_0_load_B = ap_const_logic_1)) then
                in_stream_data_0_payload_B <= in_stream_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state72)) then
                    j2_cast1_reg_4063(4 downto 0) <= j2_cast1_fu_2761_p1(4 downto 0);
                    j2_cast_reg_4058(4 downto 0) <= j2_cast_fu_2757_p1(4 downto 0);
                j_reg_4071 <= j_fu_2771_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state84)) then
                k0_reg_4252 <= k0_fu_3190_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state76)) then
                    k3_cast2_reg_4158(4 downto 0) <= k3_cast2_fu_2949_p1(4 downto 0);
                k_reg_4167 <= k_fu_2963_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state94)) then
                l_reg_4329 <= l_fu_3316_p3;
                tmp_110_reg_4316 <= tmp_110_fu_3287_p2;
                tmp_203_reg_4334 <= tmp_203_fu_3324_p1;
                tmp_V_4_reg_4321 <= tmp_V_4_fu_3299_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state96) and (tmp_110_reg_4316 = ap_const_lv1_0))) then
                m_reg_4355 <= m_2_fu_3466_p2(31 downto 1);
                tmp_202_reg_4360 <= m_2_fu_3466_p2(25 downto 25);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state59)) then
                man_V_11_reg_3799 <= man_V_11_fu_1795_p3;
                newSel13_reg_3824 <= newSel13_fu_1956_p3;
                or_cond11_reg_3829 <= or_cond11_fu_1970_p2;
                or_cond9_reg_3819 <= or_cond9_fu_1950_p2;
                sel_tmp35_reg_3814 <= sel_tmp35_fu_1944_p2;
                sh_amt_3_reg_3804 <= sh_amt_3_fu_1826_p3;
                tmp_112_reg_3809 <= tmp_112_fu_1840_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state62)) then
                man_V_14_reg_3873 <= man_V_14_fu_2107_p3;
                newSel17_reg_3898 <= newSel17_fu_2268_p3;
                or_cond12_reg_3893 <= or_cond12_fu_2262_p2;
                or_cond14_reg_3903 <= or_cond14_fu_2282_p2;
                sel_tmp44_reg_3888 <= sel_tmp44_fu_2256_p2;
                sh_amt_4_reg_3878 <= sh_amt_4_fu_2138_p3;
                tmp_154_reg_3883 <= tmp_154_fu_2152_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state65)) then
                man_V_17_reg_3942 <= man_V_17_fu_2412_p3;
                newSel21_reg_3967 <= newSel21_fu_2573_p3;
                or_cond15_reg_3962 <= or_cond15_fu_2567_p2;
                or_cond17_reg_3972 <= or_cond17_fu_2587_p2;
                sel_tmp53_reg_3957 <= sel_tmp53_fu_2561_p2;
                sh_amt_5_reg_3947 <= sh_amt_5_fu_2443_p3;
                tmp_175_reg_3952 <= tmp_175_fu_2457_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                man_V_2_reg_3570 <= man_V_2_fu_801_p3;
                newSel1_reg_3595 <= newSel1_fu_962_p3;
                or_cond2_reg_3600 <= or_cond2_fu_976_p2;
                or_cond_reg_3590 <= or_cond_fu_956_p2;
                sel_tmp4_reg_3585 <= sel_tmp4_fu_950_p2;
                sh_amt_reg_3575 <= sh_amt_fu_832_p3;
                tmp_22_reg_3580 <= tmp_22_fu_846_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                man_V_5_reg_3645 <= man_V_5_fu_1097_p3;
                newSel5_reg_3670 <= newSel5_fu_1258_p3;
                or_cond3_reg_3665 <= or_cond3_fu_1252_p2;
                or_cond5_reg_3675 <= or_cond5_fu_1272_p2;
                sel_tmp17_reg_3660 <= sel_tmp17_fu_1246_p2;
                sh_amt_1_reg_3650 <= sh_amt_1_fu_1128_p3;
                tmp_42_reg_3680 <= ret_V_fu_1286_p2(32 downto 5);
                tmp_50_reg_3655 <= tmp_50_fu_1142_p1;
                tmp_64_reg_3687 <= ret_V_fu_1286_p2(32 downto 32);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state56)) then
                man_V_8_reg_3735 <= man_V_8_fu_1493_p3;
                newSel9_reg_3760 <= newSel9_fu_1654_p3;
                or_cond6_reg_3755 <= or_cond6_fu_1648_p2;
                or_cond8_reg_3765 <= or_cond8_fu_1668_p2;
                sel_tmp26_reg_3750 <= sel_tmp26_fu_1642_p2;
                sh_amt_2_reg_3740 <= sh_amt_2_fu_1524_p3;
                tmp_87_reg_3745 <= tmp_87_fu_1538_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_stream_data_1_load_A = ap_const_logic_1)) then
                out_stream_data_1_payload_A <= p_s_fu_3533_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_stream_data_1_load_B = ap_const_logic_1)) then
                out_stream_data_1_payload_B <= p_s_fu_3533_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_stream_last_1_load_A = ap_const_logic_1)) then
                out_stream_last_1_payload_A <= dataOut_last_load_reg_4311(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_stream_last_1_load_B = ap_const_logic_1)) then
                out_stream_last_1_payload_B <= dataOut_last_load_reg_4311(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state70)) then
                p_Val2_13_reg_4036 <= smooth_grad_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state74)) then
                p_Val2_18_reg_4132 <= r_V_5_fu_2859_p2(47 downto 16);
                r_V_1_reg_4125 <= r_V_1_fu_2851_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state90)) then
                r_V_2_reg_4282 <= grp_fu_3228_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state82)) then
                r_V_3_reg_4229 <= grp_fu_3033_p2;
                r_V_4_cast_reg_4239 <= r_V_4_cast_fu_3096_p2;
                r_V_s_reg_4234 <= grp_fu_3041_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state75)) then
                r_V_6_cast_reg_4137 <= r_V_6_cast_fu_2921_p1;
                tmp_151_reg_4147 <= tmp_151_fu_2935_p3;
                tmp_152_reg_4152 <= tmp_152_fu_2942_p3;
                    tmp_157_cast_reg_4142(7 downto 4) <= tmp_157_cast_fu_2931_p1(7 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state71)) then
                r_V_cast_reg_4048 <= r_V_cast_fu_2747_p1;
                r_V_reg_4043 <= r_V_fu_2744_p1;
                    tmp_133_reg_4053(4) <= tmp_133_fu_2750_p3(4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond6_fu_2344_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state64) and (exitcond6_fu_2344_p2 = ap_const_lv1_0)) or (not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond5_fu_2039_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state61) and (exitcond5_fu_2039_p2 = ap_const_lv1_0)) or (not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond4_fu_1733_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state58) and (exitcond4_fu_1733_p2 = ap_const_lv1_0)) or (not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond3_fu_1431_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state55) and (exitcond3_fu_1431_p2 = ap_const_lv1_0)) or (not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond2_fu_1029_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond2_fu_1029_p2 = ap_const_lv1_0)) or (not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond1_fu_733_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_fu_733_p2 = ap_const_lv1_0)))) then
                reg_715 <= in_stream_data_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state73))) then
                reg_724 <= batch_w_mat_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state95) and (tmp_110_reg_4316 = ap_const_lv1_0))) then
                tmp_113_reg_4339 <= tmp_113_fu_3328_p2;
                    tmp_117_reg_4345(0) <= tmp_117_fu_3425_p3(0);
                tmp_120_reg_4350 <= tmp_120_fu_3433_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state72) and (exitcond10_fu_2765_p2 = ap_const_lv1_0))) then
                tmp_147_reg_4091 <= tmp_147_fu_2822_p2;
                tmp_205_reg_4076 <= tmp_205_fu_2777_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state78)) then
                tmp_161_reg_4198 <= tmp_161_fu_3024_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state76) and (exitcond11_fu_2957_p2 = ap_const_lv1_0))) then
                tmp_170_reg_4187 <= tmp_170_fu_3019_p2;
                tmp_207_reg_4172 <= tmp_207_fu_2969_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state84) and (exitcond12_fu_3184_p2 = ap_const_lv1_0))) then
                tmp_179_reg_4257 <= tmp_179_fu_3202_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state83)) then
                tmp_185_cast_reg_4244 <= tmp_185_cast_fu_3177_p1;
            end if;
        end if;
    end process;
    tmp_10_reg_3608(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    i_4_cast_reg_3839(12) <= '0';
    i_5_cast_reg_3908(12) <= '0';
    batchIndex_cast_reg_3985(7 downto 6) <= "00";
    batchIndex_cast1_reg_3990(8 downto 6) <= "000";
    batchIndex_cast2_reg_3995(9 downto 6) <= "0000";
    i1_cast_reg_4008(8 downto 2) <= "0000000";
    dataOut_V_addr_2_reg_4031(8 downto 2) <= "0001000";
    tmp_133_reg_4053(3 downto 0) <= "0000";
    j2_cast_reg_4058(7 downto 5) <= "000";
    j2_cast1_reg_4063(8 downto 5) <= "0000";
    dataOut_V_addr_4_reg_4119(8 downto 5) <= "0000";
    tmp_157_cast_reg_4142(3 downto 0) <= "0000";
    tmp_157_cast_reg_4142(8) <= '0';
    k3_cast2_reg_4158(7 downto 5) <= "000";
    tmp_117_reg_4345(31 downto 1) <= "0000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (in_stream_data_0_vld_out, out_stream_data_1_ack_in, out_stream_data_1_state, out_stream_last_1_ack_in, out_stream_last_1_state, ap_CS_fsm, ap_CS_fsm_state2, exitcond1_fu_733_p2, ap_CS_fsm_state5, exitcond2_fu_1029_p2, ap_CS_fsm_state55, exitcond3_fu_1431_p2, ap_CS_fsm_state58, exitcond4_fu_1733_p2, ap_CS_fsm_state61, exitcond5_fu_2039_p2, ap_CS_fsm_state64, exitcond6_fu_2344_p2, ap_CS_fsm_state97, ap_CS_fsm_state98, icmp2_fu_1397_p2, ap_CS_fsm_state7, ap_CS_fsm_state67, ap_CS_fsm_state68, ap_CS_fsm_state69, exitcond9_fu_2690_p2, ap_CS_fsm_state72, exitcond10_fu_2765_p2, ap_CS_fsm_state76, exitcond11_fu_2957_p2, ap_CS_fsm_state84, exitcond12_fu_3184_p2, ap_CS_fsm_state92, exitcond_fu_3261_p2, exitcond7_fu_2645_p2, exitcond8_fu_2674_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state2 => 
                if ((not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond1_fu_733_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_fu_733_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                elsif ((not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond1_fu_733_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_fu_733_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state5 => 
                if ((not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond2_fu_1029_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond2_fu_1029_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state55;
                elsif ((not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond2_fu_1029_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond2_fu_1029_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp2_fu_1397_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state54;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state55 => 
                if ((not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond3_fu_1431_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state55) and (exitcond3_fu_1431_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state58;
                elsif ((not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond3_fu_1431_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state55) and (exitcond3_fu_1431_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state56;
                else
                    ap_NS_fsm <= ap_ST_fsm_state55;
                end if;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state58 => 
                if ((not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond4_fu_1733_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state58) and (exitcond4_fu_1733_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state61;
                elsif ((not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond4_fu_1733_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state58) and (exitcond4_fu_1733_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state59;
                else
                    ap_NS_fsm <= ap_ST_fsm_state58;
                end if;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state61 => 
                if ((not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond5_fu_2039_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state61) and (exitcond5_fu_2039_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state64;
                elsif ((not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond5_fu_2039_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state61) and (exitcond5_fu_2039_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state62;
                else
                    ap_NS_fsm <= ap_ST_fsm_state61;
                end if;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state64 => 
                if ((not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond6_fu_2344_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state64) and (exitcond6_fu_2344_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state67;
                elsif ((not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond6_fu_2344_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state64) and (exitcond6_fu_2344_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state65;
                else
                    ap_NS_fsm <= ap_ST_fsm_state64;
                end if;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state67 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state67) and (exitcond7_fu_2645_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state68;
                else
                    ap_NS_fsm <= ap_ST_fsm_state67;
                end if;
            when ap_ST_fsm_state68 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state68) and (exitcond8_fu_2674_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state92;
                else
                    ap_NS_fsm <= ap_ST_fsm_state69;
                end if;
            when ap_ST_fsm_state69 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state69) and (exitcond9_fu_2690_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state68;
                else
                    ap_NS_fsm <= ap_ST_fsm_state70;
                end if;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state72) and (exitcond10_fu_2765_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state69;
                else
                    ap_NS_fsm <= ap_ST_fsm_state73;
                end if;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state76) and (exitcond11_fu_2957_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state72;
                else
                    ap_NS_fsm <= ap_ST_fsm_state77;
                end if;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state79;
            when ap_ST_fsm_state79 => 
                ap_NS_fsm <= ap_ST_fsm_state80;
            when ap_ST_fsm_state80 => 
                ap_NS_fsm <= ap_ST_fsm_state81;
            when ap_ST_fsm_state81 => 
                ap_NS_fsm <= ap_ST_fsm_state82;
            when ap_ST_fsm_state82 => 
                ap_NS_fsm <= ap_ST_fsm_state83;
            when ap_ST_fsm_state83 => 
                ap_NS_fsm <= ap_ST_fsm_state84;
            when ap_ST_fsm_state84 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state84) and (exitcond12_fu_3184_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state76;
                else
                    ap_NS_fsm <= ap_ST_fsm_state85;
                end if;
            when ap_ST_fsm_state85 => 
                ap_NS_fsm <= ap_ST_fsm_state86;
            when ap_ST_fsm_state86 => 
                ap_NS_fsm <= ap_ST_fsm_state87;
            when ap_ST_fsm_state87 => 
                ap_NS_fsm <= ap_ST_fsm_state88;
            when ap_ST_fsm_state88 => 
                ap_NS_fsm <= ap_ST_fsm_state89;
            when ap_ST_fsm_state89 => 
                ap_NS_fsm <= ap_ST_fsm_state90;
            when ap_ST_fsm_state90 => 
                ap_NS_fsm <= ap_ST_fsm_state91;
            when ap_ST_fsm_state91 => 
                ap_NS_fsm <= ap_ST_fsm_state84;
            when ap_ST_fsm_state92 => 
                if ((not(((out_stream_last_1_ack_in = ap_const_logic_0) or (out_stream_data_1_ack_in = ap_const_logic_0))) and (out_stream_last_1_state(0) = ap_const_logic_0) and (out_stream_data_1_state(0) = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state92) and (exitcond_fu_3261_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif ((not(((out_stream_last_1_ack_in = ap_const_logic_0) or (out_stream_data_1_ack_in = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state92) and (exitcond_fu_3261_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state93;
                else
                    ap_NS_fsm <= ap_ST_fsm_state92;
                end if;
            when ap_ST_fsm_state93 => 
                ap_NS_fsm <= ap_ST_fsm_state94;
            when ap_ST_fsm_state94 => 
                ap_NS_fsm <= ap_ST_fsm_state95;
            when ap_ST_fsm_state95 => 
                ap_NS_fsm <= ap_ST_fsm_state96;
            when ap_ST_fsm_state96 => 
                ap_NS_fsm <= ap_ST_fsm_state97;
            when ap_ST_fsm_state97 => 
                if (((out_stream_data_1_ack_in = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state97))) then
                    ap_NS_fsm <= ap_ST_fsm_state98;
                else
                    ap_NS_fsm <= ap_ST_fsm_state97;
                end if;
            when ap_ST_fsm_state98 => 
                if (((out_stream_data_1_ack_in = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state98))) then
                    ap_NS_fsm <= ap_ST_fsm_state92;
                else
                    ap_NS_fsm <= ap_ST_fsm_state98;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    F2_1_fu_1104_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(tmp_11_fu_1077_p1));
    F2_2_fu_1500_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(tmp_26_fu_1473_p1));
    F2_3_fu_1802_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(tmp_46_fu_1775_p1));
    F2_4_fu_2114_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(tmp_73_fu_2087_p1));
    F2_5_fu_2419_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(tmp_93_fu_2392_p1));
    F2_fu_808_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(tmp_3_fu_781_p1));
    a_fu_3386_p2 <= (tmp_114_fu_3380_p2 and icmp7_fu_3349_p2);
        abs_dif_V_1_cast_fu_1383_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(abs_dif_V_1_fu_1376_p3),32));

    abs_dif_V_1_fu_1376_p3 <= 
        abs_dif_V_fu_1370_p2 when (tmp_64_reg_3687(0) = '1') else 
        abs_dif_V_3_cast_fu_1367_p1;
        abs_dif_V_3_cast_fu_1367_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_42_reg_3680),29));

        abs_dif_V_3_fu_1363_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_42_reg_3680),32));

    abs_dif_V_fu_1370_p2 <= std_logic_vector(unsigned(ap_const_lv29_0) - unsigned(abs_dif_V_3_cast_fu_1367_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57);
    ap_CS_fsm_state59 <= ap_CS_fsm(58);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state60 <= ap_CS_fsm(59);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61);
    ap_CS_fsm_state63 <= ap_CS_fsm(62);
    ap_CS_fsm_state64 <= ap_CS_fsm(63);
    ap_CS_fsm_state65 <= ap_CS_fsm(64);
    ap_CS_fsm_state66 <= ap_CS_fsm(65);
    ap_CS_fsm_state67 <= ap_CS_fsm(66);
    ap_CS_fsm_state68 <= ap_CS_fsm(67);
    ap_CS_fsm_state69 <= ap_CS_fsm(68);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state70 <= ap_CS_fsm(69);
    ap_CS_fsm_state71 <= ap_CS_fsm(70);
    ap_CS_fsm_state72 <= ap_CS_fsm(71);
    ap_CS_fsm_state73 <= ap_CS_fsm(72);
    ap_CS_fsm_state74 <= ap_CS_fsm(73);
    ap_CS_fsm_state75 <= ap_CS_fsm(74);
    ap_CS_fsm_state76 <= ap_CS_fsm(75);
    ap_CS_fsm_state77 <= ap_CS_fsm(76);
    ap_CS_fsm_state78 <= ap_CS_fsm(77);
    ap_CS_fsm_state81 <= ap_CS_fsm(80);
    ap_CS_fsm_state82 <= ap_CS_fsm(81);
    ap_CS_fsm_state83 <= ap_CS_fsm(82);
    ap_CS_fsm_state84 <= ap_CS_fsm(83);
    ap_CS_fsm_state85 <= ap_CS_fsm(84);
    ap_CS_fsm_state86 <= ap_CS_fsm(85);
    ap_CS_fsm_state89 <= ap_CS_fsm(88);
    ap_CS_fsm_state90 <= ap_CS_fsm(89);
    ap_CS_fsm_state91 <= ap_CS_fsm(90);
    ap_CS_fsm_state92 <= ap_CS_fsm(91);
    ap_CS_fsm_state93 <= ap_CS_fsm(92);
    ap_CS_fsm_state94 <= ap_CS_fsm(93);
    ap_CS_fsm_state95 <= ap_CS_fsm(94);
    ap_CS_fsm_state96 <= ap_CS_fsm(95);
    ap_CS_fsm_state97 <= ap_CS_fsm(96);
    ap_CS_fsm_state98 <= ap_CS_fsm(97);

    ap_block_state2_assign_proc : process(in_stream_data_0_vld_out, exitcond1_fu_733_p2)
    begin
                ap_block_state2 <= ((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond1_fu_733_p2 = ap_const_lv1_0));
    end process;


    ap_block_state5_assign_proc : process(in_stream_data_0_vld_out, exitcond2_fu_1029_p2)
    begin
                ap_block_state5 <= ((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond2_fu_1029_p2 = ap_const_lv1_0));
    end process;


    ap_block_state55_assign_proc : process(in_stream_data_0_vld_out, exitcond3_fu_1431_p2)
    begin
                ap_block_state55 <= ((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond3_fu_1431_p2 = ap_const_lv1_0));
    end process;


    ap_block_state58_assign_proc : process(in_stream_data_0_vld_out, exitcond4_fu_1733_p2)
    begin
                ap_block_state58 <= ((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond4_fu_1733_p2 = ap_const_lv1_0));
    end process;


    ap_block_state61_assign_proc : process(in_stream_data_0_vld_out, exitcond5_fu_2039_p2)
    begin
                ap_block_state61 <= ((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond5_fu_2039_p2 = ap_const_lv1_0));
    end process;


    ap_block_state64_assign_proc : process(in_stream_data_0_vld_out, exitcond6_fu_2344_p2)
    begin
                ap_block_state64 <= ((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond6_fu_2344_p2 = ap_const_lv1_0));
    end process;


    ap_block_state92_assign_proc : process(out_stream_data_1_ack_in, out_stream_last_1_ack_in)
    begin
                ap_block_state92 <= ((out_stream_last_1_ack_in = ap_const_logic_0) or (out_stream_data_1_ack_in = ap_const_logic_0));
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    batchIndex_1_fu_2680_p2 <= std_logic_vector(unsigned(batchIndex_reg_640) + unsigned(ap_const_lv6_1));
    batchIndex_cast1_fu_2666_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(batchIndex_reg_640),9));
    batchIndex_cast2_fu_2670_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(batchIndex_reg_640),10));
    batchIndex_cast_fu_2662_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(batchIndex_reg_640),8));

    batch_a_mat_V_address0_assign_proc : process(ap_CS_fsm_state57, ap_CS_fsm_state72, tmp_24_fu_1680_p1, tmp_137_fu_2796_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            batch_a_mat_V_address0 <= tmp_137_fu_2796_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            batch_a_mat_V_address0 <= tmp_24_fu_1680_p1(10 - 1 downto 0);
        else 
            batch_a_mat_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    batch_a_mat_V_ce0_assign_proc : process(ap_CS_fsm_state57, ap_CS_fsm_state72)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            batch_a_mat_V_ce0 <= ap_const_logic_1;
        else 
            batch_a_mat_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    batch_a_mat_V_d0 <= 
        newSel10_fu_1713_p3 when (or_cond8_reg_3765(0) = '1') else 
        ap_const_lv32_0;

    batch_a_mat_V_we0_assign_proc : process(ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            batch_a_mat_V_we0 <= ap_const_logic_1;
        else 
            batch_a_mat_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    batch_w_mat_V_address0_assign_proc : process(ap_CS_fsm_state72, ap_CS_fsm_state76, ap_CS_fsm_state66, tmp_91_fu_2598_p1, tmp_143_fu_2817_p1, tmp_166_fu_3004_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            batch_w_mat_V_address0 <= tmp_166_fu_3004_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            batch_w_mat_V_address0 <= tmp_143_fu_2817_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            batch_w_mat_V_address0 <= tmp_91_fu_2598_p1(9 - 1 downto 0);
        else 
            batch_w_mat_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    batch_w_mat_V_ce0_assign_proc : process(ap_CS_fsm_state72, ap_CS_fsm_state76, ap_CS_fsm_state66)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            batch_w_mat_V_ce0 <= ap_const_logic_1;
        else 
            batch_w_mat_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    batch_w_mat_V_d0 <= 
        newSel22_fu_2631_p3 when (or_cond17_reg_3972(0) = '1') else 
        ap_const_lv32_0;

    batch_w_mat_V_we0_assign_proc : process(ap_CS_fsm_state66)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            batch_w_mat_V_we0 <= ap_const_logic_1;
        else 
            batch_w_mat_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    batch_x_mat_V_address0_assign_proc : process(ap_CS_fsm_state84, ap_CS_fsm_state63, tmp_71_fu_2293_p1, tmp_184_fu_3220_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            batch_x_mat_V_address0 <= tmp_184_fu_3220_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            batch_x_mat_V_address0 <= tmp_71_fu_2293_p1(8 - 1 downto 0);
        else 
            batch_x_mat_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    batch_x_mat_V_ce0_assign_proc : process(ap_CS_fsm_state84, ap_CS_fsm_state63)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state63))) then 
            batch_x_mat_V_ce0 <= ap_const_logic_1;
        else 
            batch_x_mat_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    batch_x_mat_V_d0 <= 
        newSel18_fu_2326_p3 when (or_cond14_reg_3903(0) = '1') else 
        ap_const_lv32_0;

    batch_x_mat_V_we0_assign_proc : process(ap_CS_fsm_state63)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            batch_x_mat_V_we0 <= ap_const_logic_1;
        else 
            batch_x_mat_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    batch_y_mat_V_address0_assign_proc : process(ap_CS_fsm_state5, tmp_10_fu_1035_p1, ap_CS_fsm_state7, tmp_6_fu_1316_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            batch_y_mat_V_address0 <= tmp_6_fu_1316_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            batch_y_mat_V_address0 <= tmp_10_fu_1035_p1(6 - 1 downto 0);
        else 
            batch_y_mat_V_address0 <= "XXXXXX";
        end if; 
    end process;


    batch_y_mat_V_ce0_assign_proc : process(in_stream_data_0_vld_out, ap_CS_fsm_state5, exitcond2_fu_1029_p2, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond2_fu_1029_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            batch_y_mat_V_ce0 <= ap_const_logic_1;
        else 
            batch_y_mat_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    batch_y_mat_V_d0 <= 
        newSel6_fu_1349_p3 when (or_cond5_reg_3675(0) = '1') else 
        ap_const_lv32_0;

    batch_y_mat_V_we0_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            batch_y_mat_V_we0 <= ap_const_logic_1;
        else 
            batch_y_mat_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    batch_z_mat_V_address0_assign_proc : process(ap_CS_fsm_state60, ap_CS_fsm_state72, ap_CS_fsm_state76, tmp_44_fu_1982_p1, tmp_137_fu_2796_p1, tmp_159_fu_2986_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            batch_z_mat_V_address0 <= tmp_159_fu_2986_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            batch_z_mat_V_address0 <= tmp_137_fu_2796_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            batch_z_mat_V_address0 <= tmp_44_fu_1982_p1(10 - 1 downto 0);
        else 
            batch_z_mat_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    batch_z_mat_V_ce0_assign_proc : process(ap_CS_fsm_state60, ap_CS_fsm_state72, ap_CS_fsm_state76)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state60))) then 
            batch_z_mat_V_ce0 <= ap_const_logic_1;
        else 
            batch_z_mat_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    batch_z_mat_V_d0 <= 
        newSel14_fu_2015_p3 when (or_cond11_reg_3829(0) = '1') else 
        ap_const_lv32_0;

    batch_z_mat_V_we0_assign_proc : process(ap_CS_fsm_state60)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            batch_z_mat_V_we0 <= ap_const_logic_1;
        else 
            batch_z_mat_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dataOut_V_address0_assign_proc : process(ap_CS_fsm_state73, ap_CS_fsm_state67, ap_CS_fsm_state69, dataOut_V_addr_2_reg_4031, ap_CS_fsm_state71, dataOut_V_addr_4_reg_4119, ap_CS_fsm_state75, ap_CS_fsm_state81, dataOut_V_addr_6_reg_4219, ap_CS_fsm_state83, tmp_108_fu_2657_p1, tmp_128_fu_2710_p1, tmp_140_fu_2838_p1, tmp_171_fu_3060_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            dataOut_V_address0 <= dataOut_V_addr_6_reg_4219;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            dataOut_V_address0 <= tmp_171_fu_3060_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            dataOut_V_address0 <= dataOut_V_addr_4_reg_4119;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            dataOut_V_address0 <= tmp_140_fu_2838_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            dataOut_V_address0 <= dataOut_V_addr_2_reg_4031;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            dataOut_V_address0 <= tmp_128_fu_2710_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            dataOut_V_address0 <= tmp_108_fu_2657_p1(9 - 1 downto 0);
        else 
            dataOut_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    dataOut_V_address1_assign_proc : process(ap_CS_fsm_state73, dataOut_V_addr_3_reg_4108, ap_CS_fsm_state75, dataOut_V_addr_5_reg_4214, ap_CS_fsm_state81, ap_CS_fsm_state83, dataOut_V_addr_7_reg_4277, ap_CS_fsm_state89, ap_CS_fsm_state92, ap_CS_fsm_state91, tmp_148_fu_2843_p1, tmp_163_fu_3055_p1, tmp_180_fu_3233_p1, tmp_109_fu_3273_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            dataOut_V_address1 <= tmp_109_fu_3273_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            dataOut_V_address1 <= dataOut_V_addr_7_reg_4277;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            dataOut_V_address1 <= tmp_180_fu_3233_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            dataOut_V_address1 <= dataOut_V_addr_5_reg_4214;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            dataOut_V_address1 <= tmp_163_fu_3055_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            dataOut_V_address1 <= dataOut_V_addr_3_reg_4108;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            dataOut_V_address1 <= tmp_148_fu_2843_p1(9 - 1 downto 0);
        else 
            dataOut_V_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    dataOut_V_ce0_assign_proc : process(ap_CS_fsm_state73, ap_CS_fsm_state67, ap_CS_fsm_state69, ap_CS_fsm_state71, ap_CS_fsm_state75, ap_CS_fsm_state81, ap_CS_fsm_state83)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state81) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state73))) then 
            dataOut_V_ce0 <= ap_const_logic_1;
        else 
            dataOut_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dataOut_V_ce1_assign_proc : process(out_stream_data_1_ack_in, out_stream_last_1_ack_in, ap_CS_fsm_state73, ap_CS_fsm_state75, ap_CS_fsm_state81, ap_CS_fsm_state83, ap_CS_fsm_state89, ap_CS_fsm_state92, ap_CS_fsm_state91)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state89) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state81) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state91) or (not(((out_stream_last_1_ack_in = ap_const_logic_0) or (out_stream_data_1_ack_in = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state92)))) then 
            dataOut_V_ce1 <= ap_const_logic_1;
        else 
            dataOut_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dataOut_V_d0_assign_proc : process(ap_CS_fsm_state67, ap_CS_fsm_state71, ap_CS_fsm_state75, ap_CS_fsm_state83, tmp_132_fu_2738_p2, tmp_149_fu_2915_p2, ret_V_7_fu_3160_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            dataOut_V_d0 <= ret_V_7_fu_3160_p2(63 downto 32);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            dataOut_V_d0 <= tmp_149_fu_2915_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            dataOut_V_d0 <= tmp_132_fu_2738_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            dataOut_V_d0 <= ap_const_lv32_0;
        else 
            dataOut_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dataOut_V_d1_assign_proc : process(ap_CS_fsm_state75, ap_CS_fsm_state83, ap_CS_fsm_state91, ret_V_5_fu_2898_p2, ret_V_6_fu_3131_p2, ret_V_8_fu_3245_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            dataOut_V_d1 <= ret_V_8_fu_3245_p2(79 downto 48);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            dataOut_V_d1 <= ret_V_6_fu_3131_p2(63 downto 32);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            dataOut_V_d1 <= ret_V_5_fu_2898_p2(47 downto 16);
        else 
            dataOut_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dataOut_V_we0_assign_proc : process(ap_CS_fsm_state67, ap_CS_fsm_state71, ap_CS_fsm_state75, ap_CS_fsm_state83, exitcond7_fu_2645_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state71) or ((ap_const_logic_1 = ap_CS_fsm_state67) and (exitcond7_fu_2645_p2 = ap_const_lv1_0)))) then 
            dataOut_V_we0 <= ap_const_logic_1;
        else 
            dataOut_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dataOut_V_we1_assign_proc : process(ap_CS_fsm_state75, ap_CS_fsm_state83, ap_CS_fsm_state91)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state91))) then 
            dataOut_V_we1 <= ap_const_logic_1;
        else 
            dataOut_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    dataOut_last_address0 <= tmp_109_fu_3273_p1(9 - 1 downto 0);

    dataOut_last_ce0_assign_proc : process(out_stream_data_1_ack_in, out_stream_last_1_ack_in, ap_CS_fsm_state92)
    begin
        if ((not(((out_stream_last_1_ack_in = ap_const_logic_0) or (out_stream_data_1_ack_in = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state92))) then 
            dataOut_last_ce0 <= ap_const_logic_1;
        else 
            dataOut_last_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond10_fu_2765_p2 <= "1" when (j2_reg_663 = ap_const_lv5_10) else "0";
    exitcond11_fu_2957_p2 <= "1" when (k3_reg_674 = ap_const_lv5_10) else "0";
    exitcond12_fu_3184_p2 <= "1" when (k1_reg_685 = ap_const_lv3_7) else "0";
    exitcond1_fu_733_p2 <= "1" when (i_reg_559 = ap_const_lv7_40) else "0";
    exitcond2_fu_1029_p2 <= "1" when (i_1_reg_571 = ap_const_lv8_80) else "0";
    exitcond3_fu_1431_p2 <= "1" when (i_2_reg_583 = ap_const_lv11_480) else "0";
    exitcond4_fu_1733_p2 <= "1" when (i_3_reg_595 = ap_const_lv12_880) else "0";
    exitcond5_fu_2039_p2 <= "1" when (i_4_reg_607 = ap_const_lv12_960) else "0";
    exitcond6_fu_2344_p2 <= "1" when (i_5_reg_618 = ap_const_lv12_A80) else "0";
    exitcond7_fu_2645_p2 <= "1" when (i_6_reg_629 = ap_const_lv9_1B2) else "0";
    exitcond8_fu_2674_p2 <= "1" when (batchIndex_reg_640 = ap_const_lv6_20) else "0";
    exitcond9_fu_2690_p2 <= "1" when (i1_reg_652 = ap_const_lv2_2) else "0";
    exitcond_fu_3261_p2 <= "1" when (i5_reg_696 = ap_const_lv9_1B2) else "0";

    grp_fu_1414_ap_start_assign_proc : process(icmp2_fu_1397_p2, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp2_fu_1397_p2 = ap_const_lv1_0))) then 
            grp_fu_1414_ap_start <= ap_const_logic_1;
        else 
            grp_fu_1414_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1414_p0 <= (tmp_42_reg_3680 & ap_const_lv16_0);
    grp_fu_1414_p1 <= grp_fu_1414_p10(33 - 1 downto 0);
    grp_fu_1414_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(abs_dif_V_1_cast_fu_1383_p1),44));
    grp_fu_3033_p0 <= r_V_6_cast_reg_4137(64 - 1 downto 0);
    i1_cast_fu_2686_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i1_reg_652),9));
    i_10_fu_2029_p2 <= std_logic_vector(unsigned(ap_const_lv12_1) + unsigned(i_3_reg_595));
    i_11_fu_2081_p2 <= std_logic_vector(unsigned(ap_const_lv12_1) + unsigned(i_4_reg_607));
    i_12_fu_2386_p2 <= std_logic_vector(unsigned(ap_const_lv12_1) + unsigned(i_5_reg_618));
    i_13_fu_2651_p2 <= std_logic_vector(unsigned(i_6_reg_629) + unsigned(ap_const_lv9_1));
    i_14_fu_2696_p2 <= std_logic_vector(unsigned(i1_reg_652) + unsigned(ap_const_lv2_1));
    i_15_fu_3267_p2 <= std_logic_vector(unsigned(i5_reg_696) + unsigned(ap_const_lv9_1));
    i_4_cast_fu_2035_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_4_reg_607),13));
    i_5_cast_fu_2340_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_5_reg_618),13));
    i_7_fu_739_p2 <= std_logic_vector(unsigned(i_reg_559) + unsigned(ap_const_lv7_1));
    i_8_fu_1727_p2 <= std_logic_vector(unsigned(ap_const_lv11_1) + unsigned(i_2_reg_583));
    i_9_fu_1425_p2 <= std_logic_vector(unsigned(i_1_reg_571) + unsigned(ap_const_lv8_1));
    icmp1_fu_1162_p2 <= "1" when (tmp_52_fu_1152_p4 = ap_const_lv7_0) else "0";
    icmp2_fu_1397_p2 <= "1" when (signed(tmp_65_fu_1387_p4) < signed(ap_const_lv13_1)) else "0";
    icmp3_fu_1558_p2 <= "1" when (tmp_89_fu_1548_p4 = ap_const_lv7_0) else "0";
    icmp4_fu_1860_p2 <= "1" when (tmp_118_fu_1850_p4 = ap_const_lv7_0) else "0";
    icmp5_fu_2172_p2 <= "1" when (tmp_156_fu_2162_p4 = ap_const_lv7_0) else "0";
    icmp6_fu_2477_p2 <= "1" when (tmp_182_fu_2467_p4 = ap_const_lv7_0) else "0";
    icmp7_fu_3349_p2 <= "1" when (signed(tmp_195_fu_3339_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_fu_866_p2 <= "1" when (tmp_29_fu_856_p4 = ap_const_lv7_0) else "0";

    in_stream_TDATA_blk_n_assign_proc : process(in_stream_data_0_state, ap_CS_fsm_state2, exitcond1_fu_733_p2, ap_CS_fsm_state5, exitcond2_fu_1029_p2, ap_CS_fsm_state55, exitcond3_fu_1431_p2, ap_CS_fsm_state58, exitcond4_fu_1733_p2, ap_CS_fsm_state61, exitcond5_fu_2039_p2, ap_CS_fsm_state64, exitcond6_fu_2344_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state64) and (exitcond6_fu_2344_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state61) and (exitcond5_fu_2039_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state58) and (exitcond4_fu_1733_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (exitcond3_fu_1431_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond2_fu_1029_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_fu_733_p2 = ap_const_lv1_0)))) then 
            in_stream_TDATA_blk_n <= in_stream_data_0_state(0);
        else 
            in_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_stream_TREADY <= in_stream_last_0_state(1);
    in_stream_data_0_ack_in <= in_stream_data_0_state(1);

    in_stream_data_0_ack_out_assign_proc : process(in_stream_data_0_vld_out, ap_CS_fsm_state2, exitcond1_fu_733_p2, ap_CS_fsm_state5, exitcond2_fu_1029_p2, ap_CS_fsm_state55, exitcond3_fu_1431_p2, ap_CS_fsm_state58, exitcond4_fu_1733_p2, ap_CS_fsm_state61, exitcond5_fu_2039_p2, ap_CS_fsm_state64, exitcond6_fu_2344_p2)
    begin
        if (((not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond6_fu_2344_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state64) and (exitcond6_fu_2344_p2 = ap_const_lv1_0)) or (not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond5_fu_2039_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state61) and (exitcond5_fu_2039_p2 = ap_const_lv1_0)) or (not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond4_fu_1733_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state58) and (exitcond4_fu_1733_p2 = ap_const_lv1_0)) or (not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond3_fu_1431_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state55) and (exitcond3_fu_1431_p2 = ap_const_lv1_0)) or (not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond2_fu_1029_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond2_fu_1029_p2 = ap_const_lv1_0)) or (not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond1_fu_733_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_fu_733_p2 = ap_const_lv1_0)))) then 
            in_stream_data_0_ack_out <= ap_const_logic_1;
        else 
            in_stream_data_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    in_stream_data_0_data_out_assign_proc : process(in_stream_data_0_payload_A, in_stream_data_0_payload_B, in_stream_data_0_sel)
    begin
        if ((in_stream_data_0_sel = ap_const_logic_1)) then 
            in_stream_data_0_data_out <= in_stream_data_0_payload_B;
        else 
            in_stream_data_0_data_out <= in_stream_data_0_payload_A;
        end if; 
    end process;

    in_stream_data_0_load_A <= (in_stream_data_0_state_cmp_full and not(in_stream_data_0_sel_wr));
    in_stream_data_0_load_B <= (in_stream_data_0_state_cmp_full and in_stream_data_0_sel_wr);
    in_stream_data_0_sel <= in_stream_data_0_sel_rd;
    in_stream_data_0_state_cmp_full <= '0' when (in_stream_data_0_state = ap_const_lv2_1) else '1';
    in_stream_data_0_vld_in <= in_stream_TVALID;
    in_stream_data_0_vld_out <= in_stream_data_0_state(0);

    in_stream_last_0_ack_out_assign_proc : process(in_stream_data_0_vld_out, ap_CS_fsm_state2, exitcond1_fu_733_p2, ap_CS_fsm_state5, exitcond2_fu_1029_p2, ap_CS_fsm_state55, exitcond3_fu_1431_p2, ap_CS_fsm_state58, exitcond4_fu_1733_p2, ap_CS_fsm_state61, exitcond5_fu_2039_p2, ap_CS_fsm_state64, exitcond6_fu_2344_p2)
    begin
        if (((not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond6_fu_2344_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state64) and (exitcond6_fu_2344_p2 = ap_const_lv1_0)) or (not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond5_fu_2039_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state61) and (exitcond5_fu_2039_p2 = ap_const_lv1_0)) or (not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond4_fu_1733_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state58) and (exitcond4_fu_1733_p2 = ap_const_lv1_0)) or (not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond3_fu_1431_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state55) and (exitcond3_fu_1431_p2 = ap_const_lv1_0)) or (not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond2_fu_1029_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond2_fu_1029_p2 = ap_const_lv1_0)) or (not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond1_fu_733_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_fu_733_p2 = ap_const_lv1_0)))) then 
            in_stream_last_0_ack_out <= ap_const_logic_1;
        else 
            in_stream_last_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

    in_stream_last_0_vld_in <= in_stream_TVALID;
    ireg_V_1_fu_1041_p1 <= grp_fu_707_p1;
    ireg_V_1_to_int_fu_1168_p1 <= reg_715;
    ireg_V_2_fu_1437_p1 <= grp_fu_707_p1;
    ireg_V_2_to_int_fu_1564_p1 <= reg_715;
    ireg_V_3_fu_1739_p1 <= grp_fu_707_p1;
    ireg_V_3_to_int_fu_1866_p1 <= reg_715;
    ireg_V_4_fu_2045_p1 <= grp_fu_707_p1;
    ireg_V_4_to_int_fu_2178_p1 <= reg_715;
    ireg_V_5_fu_2350_p1 <= grp_fu_707_p1;
    ireg_V_5_to_int_fu_2483_p1 <= reg_715;
    ireg_V_fu_745_p1 <= grp_fu_707_p1;
    ireg_V_to_int_fu_872_p1 <= reg_715;
    j2_cast1_fu_2761_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j2_reg_663),9));
    j2_cast_fu_2757_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j2_reg_663),8));
    j_fu_2771_p2 <= std_logic_vector(unsigned(j2_reg_663) + unsigned(ap_const_lv5_1));
    k0_fu_3190_p2 <= std_logic_vector(unsigned(k1_reg_685) + unsigned(ap_const_lv3_1));
    k1_cast_fu_3180_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k1_reg_685),9));
    k3_cast2_fu_2949_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k3_reg_674),8));
    k3_cast_fu_2953_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k3_reg_674),6));
    k_fu_2963_p2 <= std_logic_vector(unsigned(k3_reg_674) + unsigned(ap_const_lv5_1));
    
    l_fu_3316_p3_proc : process(p_Result_16_fu_3306_p4)
    begin
        l_fu_3316_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_16_fu_3306_p4(i) = '1' then
                l_fu_3316_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    lhs_V_1_fu_2884_p3 <= (reg_719 & ap_const_lv16_0);
    lhs_V_2_fu_3117_p3 <= (reg_719 & ap_const_lv32_0);
    lhs_V_3_fu_3148_p3 <= (reg_728 & ap_const_lv32_0);
    lhs_V_4_fu_3237_p3 <= (reg_719 & ap_const_lv48_0);
        lhs_V_fu_1278_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(batch_y_mat_V_q0),33));

    lsb_index_fu_3333_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFE8) + signed(tmp_113_fu_3328_p2));
    m_1_fu_3459_p3 <= 
        tmp_123_fu_3444_p2 when (tmp_120_reg_4350(0) = '1') else 
        tmp_125_fu_3454_p2;
    m_2_fu_3466_p2 <= std_logic_vector(unsigned(m_1_fu_3459_p3) + unsigned(tmp_117_reg_4345));
    m_6_fu_3489_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_reg_4355),32));
    man_V_10_fu_1789_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_10_fu_1785_p1));
    man_V_11_fu_1795_p3 <= 
        man_V_10_fu_1789_p2 when (p_Result_9_reg_3778(0) = '1') else 
        p_Result_10_fu_1785_p1;
    man_V_13_fu_2101_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_12_fu_2097_p1));
    man_V_14_fu_2107_p3 <= 
        man_V_13_fu_2101_p2 when (p_Result_11_reg_3847(0) = '1') else 
        p_Result_12_fu_2097_p1;
    man_V_16_fu_2406_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_14_fu_2402_p1));
    man_V_17_fu_2412_p3 <= 
        man_V_16_fu_2406_p2 when (p_Result_13_reg_3916(0) = '1') else 
        p_Result_14_fu_2402_p1;
    man_V_1_fu_795_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_4_fu_791_p1));
    man_V_2_fu_801_p3 <= 
        man_V_1_fu_795_p2 when (p_Result_3_reg_3549(0) = '1') else 
        p_Result_4_fu_791_p1;
    man_V_4_fu_1091_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_6_fu_1087_p1));
    man_V_5_fu_1097_p3 <= 
        man_V_4_fu_1091_p2 when (p_Result_5_reg_3614(0) = '1') else 
        p_Result_6_fu_1087_p1;
    man_V_7_fu_1487_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_8_fu_1483_p1));
    man_V_8_fu_1493_p3 <= 
        man_V_7_fu_1487_p2 when (p_Result_7_reg_3714(0) = '1') else 
        p_Result_8_fu_1483_p1;
    newSel10_fu_1713_p3 <= 
        newSel8_fu_1706_p3 when (or_cond6_reg_3755(0) = '1') else 
        newSel9_reg_3760;
    newSel12_fu_2008_p3 <= 
        tmp_77_fu_2003_p2 when (sel_tmp35_reg_3814(0) = '1') else 
        tmp_119_fu_1999_p1;
    newSel13_fu_1956_p3 <= 
        tmp_76_fu_1878_p3 when (sel_tmp32_fu_1920_p2(0) = '1') else 
        tmp_112_fu_1840_p1;
    newSel14_fu_2015_p3 <= 
        newSel12_fu_2008_p3 when (or_cond9_reg_3819(0) = '1') else 
        newSel13_reg_3824;
    newSel16_fu_2319_p3 <= 
        tmp_92_fu_2314_p2 when (sel_tmp44_reg_3888(0) = '1') else 
        tmp_158_fu_2310_p1;
    newSel17_fu_2268_p3 <= 
        tmp_88_fu_2190_p3 when (sel_tmp41_fu_2232_p2(0) = '1') else 
        tmp_154_fu_2152_p1;
    newSel18_fu_2326_p3 <= 
        newSel16_fu_2319_p3 when (or_cond12_reg_3893(0) = '1') else 
        newSel17_reg_3898;
    newSel1_fu_962_p3 <= 
        tmp_20_fu_884_p3 when (sel_tmp9_fu_926_p2(0) = '1') else 
        tmp_22_fu_846_p1;
    newSel20_fu_2624_p3 <= 
        tmp_107_fu_2619_p2 when (sel_tmp53_reg_3957(0) = '1') else 
        tmp_192_fu_2615_p1;
    newSel21_fu_2573_p3 <= 
        tmp_106_fu_2495_p3 when (sel_tmp50_fu_2537_p2(0) = '1') else 
        tmp_175_fu_2457_p1;
    newSel22_fu_2631_p3 <= 
        newSel20_fu_2624_p3 when (or_cond15_reg_3962(0) = '1') else 
        newSel21_reg_3967;
    newSel2_fu_1015_p3 <= 
        newSel_fu_1008_p3 when (or_cond_reg_3590(0) = '1') else 
        newSel1_reg_3595;
    newSel4_fu_1342_p3 <= 
        tmp_41_fu_1337_p2 when (sel_tmp17_reg_3660(0) = '1') else 
        tmp_54_fu_1333_p1;
    newSel5_fu_1258_p3 <= 
        tmp_34_fu_1180_p3 when (sel_tmp14_fu_1222_p2(0) = '1') else 
        tmp_50_fu_1142_p1;
    newSel6_fu_1349_p3 <= 
        newSel4_fu_1342_p3 when (or_cond3_reg_3665(0) = '1') else 
        newSel5_reg_3670;
    newSel8_fu_1706_p3 <= 
        tmp_63_fu_1701_p2 when (sel_tmp26_reg_3750(0) = '1') else 
        tmp_96_fu_1697_p1;
    newSel9_fu_1654_p3 <= 
        tmp_58_fu_1576_p3 when (sel_tmp23_fu_1618_p2(0) = '1') else 
        tmp_87_fu_1538_p1;
    newSel_fu_1008_p3 <= 
        tmp_25_fu_1003_p2 when (sel_tmp4_reg_3585(0) = '1') else 
        tmp_32_fu_999_p1;

    nn_out_mat_V_address0_assign_proc : process(ap_CS_fsm_state5, tmp_10_fu_1035_p1, ap_CS_fsm_state4, tmp_fu_982_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            nn_out_mat_V_address0 <= tmp_10_fu_1035_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            nn_out_mat_V_address0 <= tmp_fu_982_p1(6 - 1 downto 0);
        else 
            nn_out_mat_V_address0 <= "XXXXXX";
        end if; 
    end process;


    nn_out_mat_V_ce0_assign_proc : process(in_stream_data_0_vld_out, ap_CS_fsm_state5, exitcond2_fu_1029_p2, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (not(((in_stream_data_0_vld_out = ap_const_logic_0) and (exitcond2_fu_1029_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            nn_out_mat_V_ce0 <= ap_const_logic_1;
        else 
            nn_out_mat_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nn_out_mat_V_d0 <= 
        newSel2_fu_1015_p3 when (or_cond2_reg_3600(0) = '1') else 
        ap_const_lv32_0;

    nn_out_mat_V_we0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            nn_out_mat_V_we0 <= ap_const_logic_1;
        else 
            nn_out_mat_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    or_cond10_fu_1964_p2 <= (sel_tmp32_fu_1920_p2 or sel_tmp28_fu_1891_p2);
    or_cond11_fu_1970_p2 <= (or_cond9_fu_1950_p2 or or_cond10_fu_1964_p2);
    or_cond12_fu_2262_p2 <= (sel_tmp44_fu_2256_p2 or sel_tmp42_fu_2238_p2);
    or_cond13_fu_2276_p2 <= (sel_tmp41_fu_2232_p2 or sel_tmp37_fu_2203_p2);
    or_cond14_fu_2282_p2 <= (or_cond13_fu_2276_p2 or or_cond12_fu_2262_p2);
    or_cond15_fu_2567_p2 <= (sel_tmp53_fu_2561_p2 or sel_tmp51_fu_2543_p2);
    or_cond16_fu_2581_p2 <= (sel_tmp50_fu_2537_p2 or sel_tmp46_fu_2508_p2);
    or_cond17_fu_2587_p2 <= (or_cond16_fu_2581_p2 or or_cond15_fu_2567_p2);
    or_cond1_fu_970_p2 <= (sel_tmp9_fu_926_p2 or sel_tmp2_fu_897_p2);
    or_cond2_fu_976_p2 <= (or_cond_fu_956_p2 or or_cond1_fu_970_p2);
    or_cond3_fu_1252_p2 <= (sel_tmp17_fu_1246_p2 or sel_tmp15_fu_1228_p2);
    or_cond4_fu_1266_p2 <= (sel_tmp14_fu_1222_p2 or sel_tmp10_fu_1193_p2);
    or_cond5_fu_1272_p2 <= (or_cond4_fu_1266_p2 or or_cond3_fu_1252_p2);
    or_cond6_fu_1648_p2 <= (sel_tmp26_fu_1642_p2 or sel_tmp24_fu_1624_p2);
    or_cond7_fu_1662_p2 <= (sel_tmp23_fu_1618_p2 or sel_tmp19_fu_1589_p2);
    or_cond8_fu_1668_p2 <= (or_cond7_fu_1662_p2 or or_cond6_fu_1648_p2);
    or_cond9_fu_1950_p2 <= (sel_tmp35_fu_1944_p2 or sel_tmp33_fu_1926_p2);
    or_cond_fu_956_p2 <= (sel_tmp_fu_932_p2 or sel_tmp4_fu_950_p2);
    out_stream_TDATA <= out_stream_data_1_data_out;

    out_stream_TDATA_blk_n_assign_proc : process(out_stream_data_1_state, ap_CS_fsm_state97, ap_CS_fsm_state98)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state98) or (ap_const_logic_1 = ap_CS_fsm_state97))) then 
            out_stream_TDATA_blk_n <= out_stream_data_1_state(1);
        else 
            out_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_stream_TLAST <= out_stream_last_1_data_out;
    out_stream_TVALID <= out_stream_last_1_state(0);
    out_stream_data_1_ack_in <= out_stream_data_1_state(1);
    out_stream_data_1_ack_out <= out_stream_TREADY;

    out_stream_data_1_data_out_assign_proc : process(out_stream_data_1_payload_A, out_stream_data_1_payload_B, out_stream_data_1_sel)
    begin
        if ((out_stream_data_1_sel = ap_const_logic_1)) then 
            out_stream_data_1_data_out <= out_stream_data_1_payload_B;
        else 
            out_stream_data_1_data_out <= out_stream_data_1_payload_A;
        end if; 
    end process;

    out_stream_data_1_load_A <= (out_stream_data_1_state_cmp_full and not(out_stream_data_1_sel_wr));
    out_stream_data_1_load_B <= (out_stream_data_1_state_cmp_full and out_stream_data_1_sel_wr);
    out_stream_data_1_sel <= out_stream_data_1_sel_rd;
    out_stream_data_1_state_cmp_full <= '0' when (out_stream_data_1_state = ap_const_lv2_1) else '1';

    out_stream_data_1_vld_in_assign_proc : process(out_stream_data_1_ack_in, ap_CS_fsm_state97)
    begin
        if (((out_stream_data_1_ack_in = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state97))) then 
            out_stream_data_1_vld_in <= ap_const_logic_1;
        else 
            out_stream_data_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_stream_data_1_vld_out <= out_stream_data_1_state(0);
    out_stream_last_1_ack_in <= out_stream_last_1_state(1);
    out_stream_last_1_ack_out <= out_stream_TREADY;

    out_stream_last_1_data_out_assign_proc : process(out_stream_last_1_payload_A, out_stream_last_1_payload_B, out_stream_last_1_sel)
    begin
        if ((out_stream_last_1_sel = ap_const_logic_1)) then 
            out_stream_last_1_data_out <= out_stream_last_1_payload_B;
        else 
            out_stream_last_1_data_out <= out_stream_last_1_payload_A;
        end if; 
    end process;

    out_stream_last_1_load_A <= (out_stream_last_1_state_cmp_full and not(out_stream_last_1_sel_wr));
    out_stream_last_1_load_B <= (out_stream_last_1_state_cmp_full and out_stream_last_1_sel_wr);
    out_stream_last_1_sel <= out_stream_last_1_sel_rd;
    out_stream_last_1_state_cmp_full <= '0' when (out_stream_last_1_state = ap_const_lv2_1) else '1';

    out_stream_last_1_vld_in_assign_proc : process(out_stream_data_1_ack_in, ap_CS_fsm_state97)
    begin
        if (((out_stream_data_1_ack_in = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state97))) then 
            out_stream_last_1_vld_in <= ap_const_logic_1;
        else 
            out_stream_last_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_stream_last_1_vld_out <= out_stream_last_1_state(0);
    p_Repl2_2_trunc_fu_3504_p2 <= std_logic_vector(unsigned(tmp_224_cast_cast_fu_3492_p3) + unsigned(tmp_126_fu_3499_p2));
    p_Result_10_fu_1785_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_66_fu_1778_p3),54));
    p_Result_12_fu_2097_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_78_fu_2090_p3),54));
    p_Result_14_fu_2402_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_94_fu_2395_p3),54));
    
    p_Result_16_fu_3306_p4_proc : process(tmp_V_4_fu_3299_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable p_Result_16_fu_3306_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1F(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := tmp_V_4_fu_3299_p3;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1F(5-1 downto 0)));
            for p_Result_16_fu_3306_p4_i in 0 to 32-1 loop
                v0_cpy(p_Result_16_fu_3306_p4_i) := tmp_V_4_fu_3299_p3(32-1-p_Result_16_fu_3306_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_16_fu_3306_p4 <= resvalue(32-1 downto 0);
    end process;

    p_Result_17_fu_3517_p5 <= (tmp_127_fu_3510_p3 & m_6_fu_3489_p1(22 downto 0));
    p_Result_1_fu_3406_p3 <= tmp_V_4_reg_4321(to_integer(unsigned(lsb_index_fu_3333_p2)) downto to_integer(unsigned(lsb_index_fu_3333_p2))) when (to_integer(unsigned(lsb_index_fu_3333_p2))>= 0 and to_integer(unsigned(lsb_index_fu_3333_p2))<=31) else "-";
    p_Result_4_fu_791_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_784_p3),54));
    p_Result_6_fu_1087_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_27_fu_1080_p3),54));
    p_Result_8_fu_1483_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_51_fu_1476_p3),54));
    p_Result_s_fu_3375_p2 <= (tmp_V_4_reg_4321 and tmp_199_fu_3369_p2);
    p_s_fu_3533_p3 <= 
        ap_const_lv32_0 when (tmp_110_reg_4316(0) = '1') else 
        tmp_134_fu_3529_p1;
    p_shl_cast_fu_3071_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_fu_3064_p3),8));
    p_shl_fu_3064_p3 <= (tmp_207_reg_4172 & ap_const_lv3_0);
    r_V_1_fu_2851_p0 <= r_V_reg_4043(32 - 1 downto 0);
    r_V_1_fu_2851_p1 <= reg_724;
    r_V_1_fu_2851_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_1_fu_2851_p0) * signed(r_V_1_fu_2851_p1))), 64));
    r_V_4_cast_fu_3096_p2 <= (tmp_178_fu_3089_p3 and tmp_177_fu_3084_p2);
    r_V_5_fu_2859_p0 <= r_V_cast_reg_4048(32 - 1 downto 0);
    r_V_5_fu_2859_p1 <= batch_a_mat_V_load_reg_4114;
    r_V_5_fu_2859_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_5_fu_2859_p0) * signed(r_V_5_fu_2859_p1))), 48));
        r_V_6_cast_fu_2921_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_1_reg_4125),94));

        r_V_cast_fu_2747_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_13_reg_4036),48));

        r_V_fu_2744_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_13_reg_4036),64));

    ret_V_5_fu_2898_p2 <= std_logic_vector(unsigned(tmp_148_cast_fu_2892_p2) + unsigned(lhs_V_1_fu_2884_p3));
    ret_V_6_fu_3131_p2 <= std_logic_vector(unsigned(lhs_V_2_fu_3117_p3) + unsigned(tmp_175_cast_fu_3125_p2));
    ret_V_7_fu_3160_p2 <= std_logic_vector(unsigned(lhs_V_3_fu_3148_p3) + unsigned(tmp_182_cast_fu_3156_p2));
    ret_V_8_fu_3245_p2 <= std_logic_vector(unsigned(r_V_2_reg_4282) + unsigned(lhs_V_4_fu_3237_p3));
    ret_V_fu_1286_p2 <= std_logic_vector(signed(lhs_V_fu_1278_p1) - signed(rhs_V_fu_1282_p1));
    rev_fu_3400_p2 <= (tmp_201_fu_3392_p3 xor ap_const_lv1_1);
        rhs_V_fu_1282_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(nn_out_mat_V_q0),33));

    sel_tmp105_demorgan_fu_2209_p2 <= (tmp_83_fu_2146_p2 or tmp_75_reg_3862);
    sel_tmp10_fu_1193_p2 <= (tmp_19_fu_1136_p2 and sel_tmp5_fu_1188_p2);
    sel_tmp11_fu_1204_p2 <= (sel_tmp30_demorgan_fu_1199_p2 xor ap_const_lv1_1);
    sel_tmp120_demorgan_fu_2244_p2 <= (tmp_80_fu_2120_p2 or sel_tmp105_demorgan_fu_2209_p2);
    sel_tmp12_fu_1210_p2 <= (tmp_16_fu_1110_p2 and sel_tmp11_fu_1204_p2);
    sel_tmp130_demorgan_fu_2514_p2 <= (tmp_95_reg_3931 or tmp_101_fu_2451_p2);
    sel_tmp13_fu_1216_p2 <= (tmp_30_fu_1146_p2 xor ap_const_lv1_1);
    sel_tmp145_demorgan_fu_2549_p2 <= (tmp_98_fu_2425_p2 or sel_tmp130_demorgan_fu_2514_p2);
    sel_tmp14_fu_1222_p2 <= (sel_tmp13_fu_1216_p2 and sel_tmp12_fu_1210_p2);
    sel_tmp15_fu_1228_p2 <= (tmp_30_fu_1146_p2 and sel_tmp12_fu_1210_p2);
    sel_tmp16_fu_1240_p2 <= (sel_tmp45_demorgan_fu_1234_p2 xor ap_const_lv1_1);
    sel_tmp17_fu_1246_p2 <= (sel_tmp16_fu_1240_p2 and icmp1_fu_1162_p2);
    sel_tmp18_fu_1584_p2 <= (tmp_28_reg_3729 xor ap_const_lv1_1);
    sel_tmp19_fu_1589_p2 <= (tmp_39_fu_1532_p2 and sel_tmp18_fu_1584_p2);
    sel_tmp1_fu_892_p2 <= (tmp_8_reg_3564 xor ap_const_lv1_1);
    sel_tmp20_fu_1600_p2 <= (sel_tmp55_demorgan_fu_1595_p2 xor ap_const_lv1_1);
    sel_tmp21_demorgan_fu_938_p2 <= (tmp_s_fu_814_p2 or sel_tmp6_demorgan_fu_903_p2);
    sel_tmp21_fu_1606_p2 <= (tmp_36_fu_1506_p2 and sel_tmp20_fu_1600_p2);
    sel_tmp22_fu_1612_p2 <= (tmp_53_fu_1542_p2 xor ap_const_lv1_1);
    sel_tmp23_fu_1618_p2 <= (sel_tmp22_fu_1612_p2 and sel_tmp21_fu_1606_p2);
    sel_tmp24_fu_1624_p2 <= (tmp_53_fu_1542_p2 and sel_tmp21_fu_1606_p2);
    sel_tmp25_fu_1636_p2 <= (sel_tmp70_demorgan_fu_1630_p2 xor ap_const_lv1_1);
    sel_tmp26_fu_1642_p2 <= (sel_tmp25_fu_1636_p2 and icmp3_fu_1558_p2);
    sel_tmp27_fu_1886_p2 <= (tmp_48_reg_3793 xor ap_const_lv1_1);
    sel_tmp28_fu_1891_p2 <= (tmp_62_fu_1834_p2 and sel_tmp27_fu_1886_p2);
    sel_tmp29_fu_1902_p2 <= (sel_tmp80_demorgan_fu_1897_p2 xor ap_const_lv1_1);
    sel_tmp2_fu_897_p2 <= (tmp_4_fu_840_p2 and sel_tmp1_fu_892_p2);
    sel_tmp30_demorgan_fu_1199_p2 <= (tmp_19_fu_1136_p2 or tmp_13_reg_3629);
    sel_tmp30_fu_1908_p2 <= (tmp_59_fu_1808_p2 and sel_tmp29_fu_1902_p2);
    sel_tmp31_fu_1914_p2 <= (tmp_67_fu_1844_p2 xor ap_const_lv1_1);
    sel_tmp32_fu_1920_p2 <= (sel_tmp31_fu_1914_p2 and sel_tmp30_fu_1908_p2);
    sel_tmp33_fu_1926_p2 <= (tmp_67_fu_1844_p2 and sel_tmp30_fu_1908_p2);
    sel_tmp34_fu_1938_p2 <= (sel_tmp95_demorgan_fu_1932_p2 xor ap_const_lv1_1);
    sel_tmp35_fu_1944_p2 <= (sel_tmp34_fu_1938_p2 and icmp4_fu_1860_p2);
    sel_tmp36_fu_2198_p2 <= (tmp_75_reg_3862 xor ap_const_lv1_1);
    sel_tmp37_fu_2203_p2 <= (tmp_83_fu_2146_p2 and sel_tmp36_fu_2198_p2);
    sel_tmp38_fu_2214_p2 <= (sel_tmp105_demorgan_fu_2209_p2 xor ap_const_lv1_1);
    sel_tmp39_fu_2220_p2 <= (tmp_80_fu_2120_p2 and sel_tmp38_fu_2214_p2);
    sel_tmp3_fu_944_p2 <= (sel_tmp21_demorgan_fu_938_p2 xor ap_const_lv1_1);
    sel_tmp40_fu_2226_p2 <= (tmp_84_fu_2156_p2 xor ap_const_lv1_1);
    sel_tmp41_fu_2232_p2 <= (sel_tmp40_fu_2226_p2 and sel_tmp39_fu_2220_p2);
    sel_tmp42_fu_2238_p2 <= (tmp_84_fu_2156_p2 and sel_tmp39_fu_2220_p2);
    sel_tmp43_fu_2250_p2 <= (sel_tmp120_demorgan_fu_2244_p2 xor ap_const_lv1_1);
    sel_tmp44_fu_2256_p2 <= (sel_tmp43_fu_2250_p2 and icmp5_fu_2172_p2);
    sel_tmp45_demorgan_fu_1234_p2 <= (tmp_16_fu_1110_p2 or sel_tmp30_demorgan_fu_1199_p2);
    sel_tmp45_fu_2503_p2 <= (tmp_95_reg_3931 xor ap_const_lv1_1);
    sel_tmp46_fu_2508_p2 <= (tmp_101_fu_2451_p2 and sel_tmp45_fu_2503_p2);
    sel_tmp47_fu_2519_p2 <= (sel_tmp130_demorgan_fu_2514_p2 xor ap_const_lv1_1);
    sel_tmp48_fu_2525_p2 <= (tmp_98_fu_2425_p2 and sel_tmp47_fu_2519_p2);
    sel_tmp49_fu_2531_p2 <= (tmp_102_fu_2461_p2 xor ap_const_lv1_1);
    sel_tmp4_fu_950_p2 <= (sel_tmp3_fu_944_p2 and icmp_fu_866_p2);
    sel_tmp50_fu_2537_p2 <= (sel_tmp49_fu_2531_p2 and sel_tmp48_fu_2525_p2);
    sel_tmp51_fu_2543_p2 <= (tmp_102_fu_2461_p2 and sel_tmp48_fu_2525_p2);
    sel_tmp52_fu_2555_p2 <= (sel_tmp145_demorgan_fu_2549_p2 xor ap_const_lv1_1);
    sel_tmp53_fu_2561_p2 <= (sel_tmp52_fu_2555_p2 and icmp6_fu_2477_p2);
    sel_tmp55_demorgan_fu_1595_p2 <= (tmp_39_fu_1532_p2 or tmp_28_reg_3729);
    sel_tmp5_fu_1188_p2 <= (tmp_13_reg_3629 xor ap_const_lv1_1);
    sel_tmp6_demorgan_fu_903_p2 <= (tmp_8_reg_3564 or tmp_4_fu_840_p2);
    sel_tmp6_fu_908_p2 <= (sel_tmp6_demorgan_fu_903_p2 xor ap_const_lv1_1);
    sel_tmp70_demorgan_fu_1630_p2 <= (tmp_36_fu_1506_p2 or sel_tmp55_demorgan_fu_1595_p2);
    sel_tmp7_fu_914_p2 <= (tmp_s_fu_814_p2 and sel_tmp6_fu_908_p2);
    sel_tmp80_demorgan_fu_1897_p2 <= (tmp_62_fu_1834_p2 or tmp_48_reg_3793);
    sel_tmp8_fu_920_p2 <= (tmp_12_fu_850_p2 xor ap_const_lv1_1);
    sel_tmp95_demorgan_fu_1932_p2 <= (tmp_59_fu_1808_p2 or sel_tmp80_demorgan_fu_1897_p2);
    sel_tmp9_fu_926_p2 <= (sel_tmp8_fu_920_p2 and sel_tmp7_fu_914_p2);
    sel_tmp_fu_932_p2 <= (tmp_12_fu_850_p2 and sel_tmp7_fu_914_p2);
        sh_amt_1_cast_fu_1321_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_1_reg_3650),32));

    sh_amt_1_fu_1128_p3 <= 
        tmp_17_fu_1116_p2 when (tmp_16_fu_1110_p2(0) = '1') else 
        tmp_18_fu_1122_p2;
        sh_amt_2_cast_fu_1685_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_2_reg_3740),32));

    sh_amt_2_fu_1524_p3 <= 
        tmp_37_fu_1512_p2 when (tmp_36_fu_1506_p2(0) = '1') else 
        tmp_38_fu_1518_p2;
        sh_amt_3_cast_fu_1987_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_3_reg_3804),32));

    sh_amt_3_fu_1826_p3 <= 
        tmp_60_fu_1814_p2 when (tmp_59_fu_1808_p2(0) = '1') else 
        tmp_61_fu_1820_p2;
        sh_amt_4_cast_fu_2298_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_4_reg_3878),32));

    sh_amt_4_fu_2138_p3 <= 
        tmp_81_fu_2126_p2 when (tmp_80_fu_2120_p2(0) = '1') else 
        tmp_82_fu_2132_p2;
        sh_amt_5_cast_fu_2603_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_5_reg_3947),32));

    sh_amt_5_fu_2443_p3 <= 
        tmp_99_fu_2431_p2 when (tmp_98_fu_2425_p2(0) = '1') else 
        tmp_100_fu_2437_p2;
        sh_amt_cast_fu_987_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_reg_3575),32));

    sh_amt_fu_832_p3 <= 
        tmp_1_fu_820_p2 when (tmp_s_fu_814_p2(0) = '1') else 
        tmp_2_fu_826_p2;
    smooth_grad_V_addr_1_gep_fu_376_p3 <= tmp_10_reg_3608(6 - 1 downto 0);

    smooth_grad_V_address0_assign_proc : process(tmp_10_reg_3608, ap_CS_fsm_state7, ap_CS_fsm_state54, ap_CS_fsm_state69, smooth_grad_V_addr_1_gep_fu_376_p3, tmp_131_fu_2733_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            smooth_grad_V_address0 <= tmp_131_fu_2733_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            smooth_grad_V_address0 <= smooth_grad_V_addr_1_gep_fu_376_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            smooth_grad_V_address0 <= tmp_10_reg_3608(6 - 1 downto 0);
        else 
            smooth_grad_V_address0 <= "XXXXXX";
        end if; 
    end process;


    smooth_grad_V_ce0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state54, ap_CS_fsm_state69)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            smooth_grad_V_ce0 <= ap_const_logic_1;
        else 
            smooth_grad_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    smooth_grad_V_d0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state54, abs_dif_V_3_fu_1363_p1, tmp_69_fu_1420_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            smooth_grad_V_d0 <= tmp_69_fu_1420_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            smooth_grad_V_d0 <= abs_dif_V_3_fu_1363_p1;
        else 
            smooth_grad_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    smooth_grad_V_we0_assign_proc : process(icmp2_fu_1397_p2, icmp2_reg_3692, ap_CS_fsm_state7, ap_CS_fsm_state54)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state54) and (icmp2_reg_3692 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp2_fu_1397_p2 = ap_const_lv1_1)))) then 
            smooth_grad_V_we0 <= ap_const_logic_1;
        else 
            smooth_grad_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp155_cast_fu_3015_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp155_fu_3009_p2),9));
    tmp155_fu_3009_p2 <= std_logic_vector(signed(ap_const_lv6_22) + signed(k3_cast_fu_2953_p1));
    tmp156_fu_3196_p2 <= std_logic_vector(unsigned(k1_cast_fu_3180_p1) + unsigned(ap_const_lv9_132));
    tmp1_fu_2781_p4 <= ((ap_const_lv1_1 & tmp_205_fu_2777_p1) & ap_const_lv5_0);
    tmp2_fu_2802_p4 <= ((ap_const_lv4_8 & tmp_205_fu_2777_p1) & ap_const_lv1_0);
    tmp_100_fu_2437_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) - unsigned(F2_5_fu_2419_p2));
    tmp_101_fu_2451_p2 <= "1" when (F2_5_fu_2419_p2 = ap_const_lv12_10) else "0";
    tmp_102_fu_2461_p2 <= "1" when (unsigned(sh_amt_5_fu_2443_p3) < unsigned(ap_const_lv12_36)) else "0";
    tmp_103_fu_2606_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_amt_5_cast_fu_2603_p1),54));
    tmp_104_fu_2610_p2 <= std_logic_vector(shift_right(signed(man_V_17_reg_3942),to_integer(unsigned('0' & tmp_103_fu_2606_p1(31-1 downto 0)))));
    tmp_105_fu_1743_p1 <= ireg_V_3_fu_1739_p1(63 - 1 downto 0);
    tmp_106_fu_2495_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_193_fu_2487_p3(0) = '1') else 
        ap_const_lv32_0;
    tmp_107_fu_2619_p2 <= std_logic_vector(shift_left(unsigned(tmp_175_reg_3952),to_integer(unsigned('0' & sh_amt_5_cast_fu_2603_p1(31-1 downto 0)))));
    tmp_108_fu_2657_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_6_reg_629),64));
    tmp_109_fu_3273_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i5_reg_696),64));
    tmp_10_fu_1035_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_reg_571),64));
    tmp_110_fu_3287_p2 <= "1" when (reg_719 = ap_const_lv32_0) else "0";
    tmp_111_fu_1765_p1 <= ireg_V_3_fu_1739_p1(52 - 1 downto 0);
    tmp_112_fu_1840_p1 <= man_V_11_fu_1795_p3(32 - 1 downto 0);
    tmp_113_fu_3328_p2 <= std_logic_vector(unsigned(ap_const_lv32_20) - unsigned(l_reg_4329));
    tmp_114_fu_3380_p2 <= "0" when (p_Result_s_fu_3375_p2 = ap_const_lv32_0) else "1";
    tmp_115_fu_3413_p2 <= (rev_fu_3400_p2 and p_Result_1_fu_3406_p3);
    tmp_116_fu_3419_p2 <= (tmp_115_fu_3413_p2 or a_fu_3386_p2);
    tmp_117_fu_3425_p3 <= (ap_const_lv31_0 & tmp_116_fu_3419_p2);
    tmp_118_fu_1850_p4 <= sh_amt_3_fu_1826_p3(11 downto 5);
    tmp_119_fu_1999_p1 <= tmp_72_fu_1994_p2(32 - 1 downto 0);
    tmp_11_fu_1077_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_1_reg_3619),12));
    tmp_120_fu_3433_p2 <= "1" when (signed(lsb_index_fu_3333_p2) > signed(ap_const_lv32_0)) else "0";
    tmp_121_fu_1870_p3 <= ireg_V_3_to_int_fu_1866_p1(31 downto 31);
    tmp_122_fu_3439_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFE7) + signed(tmp_113_reg_4339));
    tmp_123_fu_3444_p2 <= std_logic_vector(shift_right(unsigned(tmp_V_4_reg_4321),to_integer(unsigned('0' & tmp_122_fu_3439_p2(31-1 downto 0)))));
    tmp_124_fu_3449_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(tmp_113_reg_4339));
    tmp_125_fu_3454_p2 <= std_logic_vector(shift_left(unsigned(tmp_V_4_reg_4321),to_integer(unsigned('0' & tmp_124_fu_3449_p2(31-1 downto 0)))));
    tmp_126_fu_3499_p2 <= std_logic_vector(unsigned(ap_const_lv8_10) - unsigned(tmp_203_reg_4334));
    tmp_127_fu_3510_p3 <= (p_Result_15_reg_4305 & p_Repl2_2_trunc_fu_3504_p2);
    tmp_128_fu_2710_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_135_fu_2702_p3),64));
    tmp_129_fu_2719_p3 <= (tmp_204_fu_2715_p1 & ap_const_lv5_0);
    tmp_12_fu_850_p2 <= "1" when (unsigned(sh_amt_fu_832_p3) < unsigned(ap_const_lv12_36)) else "0";
    tmp_130_fu_2727_p2 <= std_logic_vector(unsigned(tmp_129_fu_2719_p3) + unsigned(batchIndex_reg_640));
    tmp_131_fu_2733_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_130_fu_2727_p2),64));
    tmp_132_fu_2738_p2 <= std_logic_vector(unsigned(reg_719) + unsigned(p_Val2_13_reg_4036));
    tmp_133_fu_2750_p3 <= (tmp_204_reg_4021 & ap_const_lv4_0);
    tmp_134_fu_3529_p1 <= p_Result_17_fu_3517_p5;
    tmp_135_fu_2702_p3 <= (ap_const_lv4_8 & i1_reg_652);
    tmp_136_fu_2791_p2 <= std_logic_vector(unsigned(batchIndex_cast2_reg_3995) + unsigned(tmp1_fu_2781_p4));
    tmp_137_fu_2796_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_136_fu_2791_p2),64));
    tmp_138_fu_2827_p2 <= "1" when (signed(batch_z_mat_V_q0) > signed(ap_const_lv32_0)) else "0";
    tmp_139_fu_2833_p2 <= std_logic_vector(signed(ap_const_lv9_122) + signed(j2_cast1_reg_4063));
    tmp_13_fu_1071_p2 <= "1" when (tmp_40_fu_1045_p1 = ap_const_lv63_0) else "0";
    tmp_140_fu_2838_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_139_fu_2833_p2),64));
    tmp_141_fu_2049_p1 <= ireg_V_4_fu_2045_p1(63 - 1 downto 0);
    tmp_142_fu_2812_p2 <= std_logic_vector(unsigned(i1_cast_reg_4008) + unsigned(tmp2_fu_2802_p4));
    tmp_143_fu_2817_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_142_fu_2812_p2),64));
    tmp_145_fu_2877_p3 <= 
        ap_const_lv48_FFFFFFFFFFFF when (tmp_138_reg_4101(0) = '1') else 
        ap_const_lv48_0;
    tmp_147_fu_2822_p2 <= std_logic_vector(unsigned(tmp_133_reg_4053) + unsigned(j2_reg_663));
    tmp_148_cast_fu_2892_p2 <= (tmp_206_fu_2874_p1 and tmp_145_fu_2877_p3);
    tmp_148_fu_2843_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_147_reg_4091),64));
    tmp_149_fu_2915_p2 <= std_logic_vector(unsigned(p_Val2_18_reg_4132) + unsigned(reg_728));
    tmp_14_fu_990_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_amt_cast_fu_987_p1),54));
    tmp_150_fu_2924_p3 <= (tmp_205_reg_4076 & ap_const_lv4_0);
    tmp_151_fu_2935_p3 <= 
        ap_const_lv80_FFFFFFFFFFFFFFFFFFFF when (tmp_138_reg_4101(0) = '1') else 
        ap_const_lv80_0;
    tmp_152_fu_2942_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (tmp_138_reg_4101(0) = '1') else 
        ap_const_lv64_0;
    tmp_153_fu_2071_p1 <= ireg_V_4_fu_2045_p1(52 - 1 downto 0);
    tmp_154_fu_2152_p1 <= man_V_14_fu_2107_p3(32 - 1 downto 0);
    tmp_155_fu_2973_p3 <= (tmp_207_fu_2969_p1 & ap_const_lv5_0);
    tmp_156_fu_2162_p4 <= sh_amt_4_fu_2138_p3(11 downto 5);
    tmp_157_cast_fu_2931_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_150_fu_2924_p3),9));
    tmp_157_fu_2981_p2 <= std_logic_vector(unsigned(tmp_155_fu_2973_p3) + unsigned(batchIndex_cast1_reg_3990));
    tmp_158_fu_2310_p1 <= tmp_86_fu_2305_p2(32 - 1 downto 0);
    tmp_159_fu_2986_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_157_fu_2981_p2),64));
    tmp_15_fu_994_p2 <= std_logic_vector(shift_right(signed(man_V_2_reg_3570),to_integer(unsigned('0' & tmp_14_fu_990_p1(31-1 downto 0)))));
    tmp_160_fu_2182_p3 <= ireg_V_4_to_int_fu_2178_p1(31 downto 31);
    tmp_161_fu_3024_p2 <= "1" when (signed(batch_z_mat_V_load_1_reg_4192) > signed(ap_const_lv32_0)) else "0";
    tmp_162_fu_3046_p2 <= std_logic_vector(signed(ap_const_lv8_A2) + signed(k3_cast2_reg_4158));
    tmp_163_fu_3055_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_167_cast_fu_3051_p1),64));
    tmp_164_fu_2991_p3 <= (tmp_207_fu_2969_p1 & ap_const_lv4_0);
    tmp_165_fu_2999_p2 <= std_logic_vector(unsigned(tmp_164_fu_2991_p3) + unsigned(j2_cast_reg_4058));
    tmp_166_fu_3004_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_165_fu_2999_p2),64));
        tmp_167_cast_fu_3051_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_162_fu_3046_p2),9));

    tmp_167_fu_3105_p2 <= (tmp_209_fu_3102_p1 and tmp_152_reg_4152);
    tmp_168_fu_3110_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (tmp_161_reg_4198(0) = '1') else 
        ap_const_lv64_0;
    tmp_16_fu_1110_p2 <= "1" when (signed(F2_1_fu_1104_p2) > signed(ap_const_lv12_10)) else "0";
    tmp_170_fu_3019_p2 <= std_logic_vector(unsigned(tmp155_cast_fu_3015_p1) + unsigned(tmp_157_cast_reg_4142));
    tmp_171_fu_3060_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_170_reg_4187),64));
    tmp_172_fu_2354_p1 <= ireg_V_5_fu_2350_p1(63 - 1 downto 0);
    tmp_174_fu_2376_p1 <= ireg_V_5_fu_2350_p1(52 - 1 downto 0);
    tmp_175_cast_fu_3125_p2 <= (tmp_168_fu_3110_p3 and tmp_167_fu_3105_p2);
    tmp_175_fu_2457_p1 <= man_V_17_fu_2412_p3(32 - 1 downto 0);
    tmp_176_fu_3075_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_3071_p1) - unsigned(k3_cast2_reg_4158));
    tmp_177_fu_3084_p2 <= (tmp_208_fu_3080_p1 and tmp_151_reg_4147);
    tmp_178_fu_3089_p3 <= 
        ap_const_lv80_FFFFFFFFFFFFFFFFFFFF when (tmp_161_reg_4198(0) = '1') else 
        ap_const_lv80_0;
    tmp_179_fu_3202_p2 <= std_logic_vector(signed(tmp_185_cast_reg_4244) + signed(tmp156_fu_3196_p2));
    tmp_17_fu_1116_p2 <= std_logic_vector(signed(ap_const_lv12_FF0) + signed(F2_1_fu_1104_p2));
    tmp_180_fu_3233_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_179_reg_4257),64));
    tmp_181_fu_3207_p3 <= (k1_reg_685 & ap_const_lv5_0);
    tmp_182_cast_fu_3156_p2 <= (tmp_152_reg_4152 and r_V_s_reg_4234);
    tmp_182_fu_2467_p4 <= sh_amt_5_fu_2443_p3(11 downto 5);
    tmp_183_fu_3215_p2 <= std_logic_vector(unsigned(tmp_181_fu_3207_p3) + unsigned(batchIndex_cast_reg_3985));
    tmp_184_fu_3220_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_183_fu_3215_p2),64));
        tmp_185_cast_fu_3177_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_176_reg_4224),9));

    tmp_18_fu_1122_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) - unsigned(F2_1_fu_1104_p2));
    tmp_192_fu_2615_p1 <= tmp_104_fu_2610_p2(32 - 1 downto 0);
    tmp_193_fu_2487_p3 <= ireg_V_5_to_int_fu_2483_p1(31 downto 31);
    tmp_195_fu_3339_p4 <= lsb_index_fu_3333_p2(31 downto 1);
    tmp_196_fu_3355_p1 <= tmp_113_fu_3328_p2(6 - 1 downto 0);
    tmp_197_fu_3359_p2 <= std_logic_vector(signed(ap_const_lv6_39) - signed(tmp_196_fu_3355_p1));
    tmp_198_fu_3365_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_197_fu_3359_p2),32));
    tmp_199_fu_3369_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv32_FFFFFFFF),to_integer(unsigned('0' & tmp_198_fu_3365_p1(31-1 downto 0)))));
    tmp_19_fu_1136_p2 <= "1" when (F2_1_fu_1104_p2 = ap_const_lv12_10) else "0";
    tmp_1_fu_820_p2 <= std_logic_vector(signed(ap_const_lv12_FF0) + signed(F2_fu_808_p2));
    tmp_201_fu_3392_p3 <= lsb_index_fu_3333_p2(31 downto 31);
    tmp_203_fu_3324_p1 <= l_fu_3316_p3(8 - 1 downto 0);
    tmp_204_fu_2715_p1 <= i1_reg_652(1 - 1 downto 0);
    tmp_205_fu_2777_p1 <= j2_reg_663(4 - 1 downto 0);
    tmp_206_fu_2874_p1 <= r_V_1_reg_4125(48 - 1 downto 0);
    tmp_207_fu_2969_p1 <= k3_reg_674(4 - 1 downto 0);
    tmp_208_fu_3080_p1 <= grp_fu_3033_p2(80 - 1 downto 0);
    tmp_209_fu_3102_p1 <= r_V_3_reg_4229(64 - 1 downto 0);
    tmp_20_fu_884_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_35_fu_876_p3(0) = '1') else 
        ap_const_lv32_0;
    tmp_21_fu_771_p1 <= ireg_V_fu_745_p1(52 - 1 downto 0);
    tmp_224_cast_cast_fu_3492_p3 <= 
        ap_const_lv8_7F when (tmp_202_reg_4360(0) = '1') else 
        ap_const_lv8_7E;
    tmp_22_fu_846_p1 <= man_V_2_fu_801_p3(32 - 1 downto 0);
    tmp_23_fu_1674_p2 <= std_logic_vector(signed(ap_const_lv11_780) + signed(i_2_reg_583));
    tmp_24_fu_1680_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_23_fu_1674_p2),64));
    tmp_25_fu_1003_p2 <= std_logic_vector(shift_left(unsigned(tmp_22_reg_3580),to_integer(unsigned('0' & sh_amt_cast_fu_987_p1(31-1 downto 0)))));
    tmp_26_fu_1473_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_2_reg_3719),12));
    tmp_27_fu_1080_p3 <= (ap_const_lv1_1 & tmp_49_reg_3624);
    tmp_28_fu_1467_p2 <= "1" when (tmp_74_fu_1441_p1 = ap_const_lv63_0) else "0";
    tmp_29_fu_856_p4 <= sh_amt_fu_832_p3(11 downto 5);
    tmp_2_fu_826_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) - unsigned(F2_fu_808_p2));
    tmp_30_fu_1146_p2 <= "1" when (unsigned(sh_amt_1_fu_1128_p3) < unsigned(ap_const_lv12_36)) else "0";
    tmp_31_fu_1324_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_amt_1_cast_fu_1321_p1),54));
    tmp_32_fu_999_p1 <= tmp_15_fu_994_p2(32 - 1 downto 0);
    tmp_33_fu_1328_p2 <= std_logic_vector(shift_right(signed(man_V_5_reg_3645),to_integer(unsigned('0' & tmp_31_fu_1324_p1(31-1 downto 0)))));
    tmp_34_fu_1180_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_57_fu_1172_p3(0) = '1') else 
        ap_const_lv32_0;
    tmp_35_fu_876_p3 <= ireg_V_to_int_fu_872_p1(31 downto 31);
    tmp_36_fu_1506_p2 <= "1" when (signed(F2_2_fu_1500_p2) > signed(ap_const_lv12_10)) else "0";
    tmp_37_fu_1512_p2 <= std_logic_vector(signed(ap_const_lv12_FF0) + signed(F2_2_fu_1500_p2));
    tmp_38_fu_1518_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) - unsigned(F2_2_fu_1500_p2));
    tmp_39_fu_1532_p2 <= "1" when (F2_2_fu_1500_p2 = ap_const_lv12_10) else "0";
    tmp_3_fu_781_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_reg_3554),12));
    tmp_40_fu_1045_p1 <= ireg_V_1_fu_1041_p1(63 - 1 downto 0);
    tmp_41_fu_1337_p2 <= std_logic_vector(shift_left(unsigned(tmp_50_reg_3655),to_integer(unsigned('0' & sh_amt_1_cast_fu_1321_p1(31-1 downto 0)))));
    tmp_43_fu_1976_p2 <= std_logic_vector(signed(ap_const_lv12_B80) + signed(i_3_reg_595));
    tmp_44_fu_1982_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_43_fu_1976_p2),64));
    tmp_46_fu_1775_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_3_reg_3783),12));
    tmp_48_fu_1769_p2 <= "1" when (tmp_105_fu_1743_p1 = ap_const_lv63_0) else "0";
    tmp_49_fu_1067_p1 <= ireg_V_1_fu_1041_p1(52 - 1 downto 0);
    tmp_4_fu_840_p2 <= "1" when (F2_fu_808_p2 = ap_const_lv12_10) else "0";
    tmp_50_fu_1142_p1 <= man_V_5_fu_1097_p3(32 - 1 downto 0);
    tmp_51_fu_1476_p3 <= (ap_const_lv1_1 & tmp_79_reg_3724);
    tmp_52_fu_1152_p4 <= sh_amt_1_fu_1128_p3(11 downto 5);
    tmp_53_fu_1542_p2 <= "1" when (unsigned(sh_amt_2_fu_1524_p3) < unsigned(ap_const_lv12_36)) else "0";
    tmp_54_fu_1333_p1 <= tmp_33_fu_1328_p2(32 - 1 downto 0);
    tmp_55_fu_1688_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_amt_2_cast_fu_1685_p1),54));
    tmp_56_fu_1692_p2 <= std_logic_vector(shift_right(signed(man_V_8_reg_3735),to_integer(unsigned('0' & tmp_55_fu_1688_p1(31-1 downto 0)))));
    tmp_57_fu_1172_p3 <= ireg_V_1_to_int_fu_1168_p1(31 downto 31);
    tmp_58_fu_1576_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_97_fu_1568_p3(0) = '1') else 
        ap_const_lv32_0;
    tmp_59_fu_1808_p2 <= "1" when (signed(F2_3_fu_1802_p2) > signed(ap_const_lv12_10)) else "0";
    tmp_5_fu_1310_p2 <= std_logic_vector(signed(ap_const_lv8_C0) + signed(i_1_reg_571));
    tmp_60_fu_1814_p2 <= std_logic_vector(signed(ap_const_lv12_FF0) + signed(F2_3_fu_1802_p2));
    tmp_61_fu_1820_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) - unsigned(F2_3_fu_1802_p2));
    tmp_62_fu_1834_p2 <= "1" when (F2_3_fu_1802_p2 = ap_const_lv12_10) else "0";
    tmp_63_fu_1701_p2 <= std_logic_vector(shift_left(unsigned(tmp_87_reg_3745),to_integer(unsigned('0' & sh_amt_2_cast_fu_1685_p1(31-1 downto 0)))));
    tmp_65_fu_1387_p4 <= abs_dif_V_1_fu_1376_p3(28 downto 16);
    tmp_66_fu_1778_p3 <= (ap_const_lv1_1 & tmp_111_reg_3788);
    tmp_67_fu_1844_p2 <= "1" when (unsigned(sh_amt_3_fu_1826_p3) < unsigned(ap_const_lv12_36)) else "0";
    tmp_68_fu_1990_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_amt_3_cast_fu_1987_p1),54));
    tmp_69_fu_1420_p1 <= grp_fu_1414_p2(32 - 1 downto 0);
    tmp_6_fu_1316_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_1310_p2),64));
    tmp_70_fu_2288_p2 <= std_logic_vector(signed(ap_const_lv13_1780) + signed(i_4_cast_reg_3839));
    tmp_71_fu_2293_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_70_fu_2288_p2),64));
    tmp_72_fu_1994_p2 <= std_logic_vector(shift_right(signed(man_V_11_reg_3799),to_integer(unsigned('0' & tmp_68_fu_1990_p1(31-1 downto 0)))));
    tmp_73_fu_2087_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_4_reg_3852),12));
    tmp_74_fu_1441_p1 <= ireg_V_2_fu_1437_p1(63 - 1 downto 0);
    tmp_75_fu_2075_p2 <= "1" when (tmp_141_fu_2049_p1 = ap_const_lv63_0) else "0";
    tmp_76_fu_1878_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_121_fu_1870_p3(0) = '1') else 
        ap_const_lv32_0;
    tmp_77_fu_2003_p2 <= std_logic_vector(shift_left(unsigned(tmp_112_reg_3809),to_integer(unsigned('0' & sh_amt_3_cast_fu_1987_p1(31-1 downto 0)))));
    tmp_78_fu_2090_p3 <= (ap_const_lv1_1 & tmp_153_reg_3857);
    tmp_79_fu_1463_p1 <= ireg_V_2_fu_1437_p1(52 - 1 downto 0);
    tmp_7_fu_784_p3 <= (ap_const_lv1_1 & tmp_21_reg_3559);
    tmp_80_fu_2120_p2 <= "1" when (signed(F2_4_fu_2114_p2) > signed(ap_const_lv12_10)) else "0";
    tmp_81_fu_2126_p2 <= std_logic_vector(signed(ap_const_lv12_FF0) + signed(F2_4_fu_2114_p2));
    tmp_82_fu_2132_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) - unsigned(F2_4_fu_2114_p2));
    tmp_83_fu_2146_p2 <= "1" when (F2_4_fu_2114_p2 = ap_const_lv12_10) else "0";
    tmp_84_fu_2156_p2 <= "1" when (unsigned(sh_amt_4_fu_2138_p3) < unsigned(ap_const_lv12_36)) else "0";
    tmp_85_fu_2301_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_amt_4_cast_fu_2298_p1),54));
    tmp_86_fu_2305_p2 <= std_logic_vector(shift_right(signed(man_V_14_reg_3873),to_integer(unsigned('0' & tmp_85_fu_2301_p1(31-1 downto 0)))));
    tmp_87_fu_1538_p1 <= man_V_8_fu_1493_p3(32 - 1 downto 0);
    tmp_88_fu_2190_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_160_fu_2182_p3(0) = '1') else 
        ap_const_lv32_0;
    tmp_89_fu_1548_p4 <= sh_amt_2_fu_1524_p3(11 downto 5);
    tmp_8_fu_775_p2 <= "1" when (tmp_9_fu_749_p1 = ap_const_lv63_0) else "0";
    tmp_90_fu_2593_p2 <= std_logic_vector(signed(ap_const_lv13_16A0) + signed(i_5_cast_reg_3908));
    tmp_91_fu_2598_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_90_fu_2593_p2),64));
    tmp_92_fu_2314_p2 <= std_logic_vector(shift_left(unsigned(tmp_154_reg_3883),to_integer(unsigned('0' & sh_amt_4_cast_fu_2298_p1(31-1 downto 0)))));
    tmp_93_fu_2392_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_5_reg_3921),12));
    tmp_94_fu_2395_p3 <= (ap_const_lv1_1 & tmp_174_reg_3926);
    tmp_95_fu_2380_p2 <= "1" when (tmp_172_fu_2354_p1 = ap_const_lv63_0) else "0";
    tmp_96_fu_1697_p1 <= tmp_56_fu_1692_p2(32 - 1 downto 0);
    tmp_97_fu_1568_p3 <= ireg_V_2_to_int_fu_1564_p1(31 downto 31);
    tmp_98_fu_2425_p2 <= "1" when (signed(F2_5_fu_2419_p2) > signed(ap_const_lv12_10)) else "0";
    tmp_99_fu_2431_p2 <= std_logic_vector(signed(ap_const_lv12_FF0) + signed(F2_5_fu_2419_p2));
    tmp_9_fu_749_p1 <= ireg_V_fu_745_p1(63 - 1 downto 0);
    tmp_V_4_fu_3299_p3 <= 
        tmp_V_fu_3293_p2 when (p_Result_15_reg_4305(0) = '1') else 
        reg_719;
    tmp_V_fu_3293_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(reg_719));
    tmp_fu_982_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_559),64));
    tmp_s_fu_814_p2 <= "1" when (signed(F2_fu_808_p2) > signed(ap_const_lv12_10)) else "0";
end behav;
