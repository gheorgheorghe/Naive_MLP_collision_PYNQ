// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="backward_lite,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.656750,HLS_SYN_LAT=1083481,HLS_SYN_TPT=none,HLS_SYN_MEM=11,HLS_SYN_DSP=33,HLS_SYN_FF=4952,HLS_SYN_LUT=8595,HLS_VERSION=2018_3}" *)

module backward_lite (
        ap_clk,
        ap_rst_n,
        in_stream_TDATA,
        in_stream_TVALID,
        in_stream_TREADY,
        in_stream_TLAST,
        out_stream_TDATA,
        out_stream_TVALID,
        out_stream_TREADY,
        out_stream_TLAST
);

parameter    ap_ST_fsm_state1 = 98'd1;
parameter    ap_ST_fsm_state2 = 98'd2;
parameter    ap_ST_fsm_state3 = 98'd4;
parameter    ap_ST_fsm_state4 = 98'd8;
parameter    ap_ST_fsm_state5 = 98'd16;
parameter    ap_ST_fsm_state6 = 98'd32;
parameter    ap_ST_fsm_state7 = 98'd64;
parameter    ap_ST_fsm_state8 = 98'd128;
parameter    ap_ST_fsm_state9 = 98'd256;
parameter    ap_ST_fsm_state10 = 98'd512;
parameter    ap_ST_fsm_state11 = 98'd1024;
parameter    ap_ST_fsm_state12 = 98'd2048;
parameter    ap_ST_fsm_state13 = 98'd4096;
parameter    ap_ST_fsm_state14 = 98'd8192;
parameter    ap_ST_fsm_state15 = 98'd16384;
parameter    ap_ST_fsm_state16 = 98'd32768;
parameter    ap_ST_fsm_state17 = 98'd65536;
parameter    ap_ST_fsm_state18 = 98'd131072;
parameter    ap_ST_fsm_state19 = 98'd262144;
parameter    ap_ST_fsm_state20 = 98'd524288;
parameter    ap_ST_fsm_state21 = 98'd1048576;
parameter    ap_ST_fsm_state22 = 98'd2097152;
parameter    ap_ST_fsm_state23 = 98'd4194304;
parameter    ap_ST_fsm_state24 = 98'd8388608;
parameter    ap_ST_fsm_state25 = 98'd16777216;
parameter    ap_ST_fsm_state26 = 98'd33554432;
parameter    ap_ST_fsm_state27 = 98'd67108864;
parameter    ap_ST_fsm_state28 = 98'd134217728;
parameter    ap_ST_fsm_state29 = 98'd268435456;
parameter    ap_ST_fsm_state30 = 98'd536870912;
parameter    ap_ST_fsm_state31 = 98'd1073741824;
parameter    ap_ST_fsm_state32 = 98'd2147483648;
parameter    ap_ST_fsm_state33 = 98'd4294967296;
parameter    ap_ST_fsm_state34 = 98'd8589934592;
parameter    ap_ST_fsm_state35 = 98'd17179869184;
parameter    ap_ST_fsm_state36 = 98'd34359738368;
parameter    ap_ST_fsm_state37 = 98'd68719476736;
parameter    ap_ST_fsm_state38 = 98'd137438953472;
parameter    ap_ST_fsm_state39 = 98'd274877906944;
parameter    ap_ST_fsm_state40 = 98'd549755813888;
parameter    ap_ST_fsm_state41 = 98'd1099511627776;
parameter    ap_ST_fsm_state42 = 98'd2199023255552;
parameter    ap_ST_fsm_state43 = 98'd4398046511104;
parameter    ap_ST_fsm_state44 = 98'd8796093022208;
parameter    ap_ST_fsm_state45 = 98'd17592186044416;
parameter    ap_ST_fsm_state46 = 98'd35184372088832;
parameter    ap_ST_fsm_state47 = 98'd70368744177664;
parameter    ap_ST_fsm_state48 = 98'd140737488355328;
parameter    ap_ST_fsm_state49 = 98'd281474976710656;
parameter    ap_ST_fsm_state50 = 98'd562949953421312;
parameter    ap_ST_fsm_state51 = 98'd1125899906842624;
parameter    ap_ST_fsm_state52 = 98'd2251799813685248;
parameter    ap_ST_fsm_state53 = 98'd4503599627370496;
parameter    ap_ST_fsm_state54 = 98'd9007199254740992;
parameter    ap_ST_fsm_state55 = 98'd18014398509481984;
parameter    ap_ST_fsm_state56 = 98'd36028797018963968;
parameter    ap_ST_fsm_state57 = 98'd72057594037927936;
parameter    ap_ST_fsm_state58 = 98'd144115188075855872;
parameter    ap_ST_fsm_state59 = 98'd288230376151711744;
parameter    ap_ST_fsm_state60 = 98'd576460752303423488;
parameter    ap_ST_fsm_state61 = 98'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 98'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 98'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 98'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 98'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 98'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 98'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 98'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 98'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 98'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 98'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 98'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 98'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 98'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 98'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 98'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 98'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 98'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 98'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 98'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 98'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 98'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 98'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 98'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 98'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 98'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 98'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 98'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 98'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 98'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 98'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 98'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 98'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 98'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 98'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 98'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 98'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 98'd158456325028528675187087900672;

input   ap_clk;
input   ap_rst_n;
input  [31:0] in_stream_TDATA;
input   in_stream_TVALID;
output   in_stream_TREADY;
input   in_stream_TLAST;
output  [31:0] out_stream_TDATA;
output   out_stream_TVALID;
input   out_stream_TREADY;
output   out_stream_TLAST;

 reg    ap_rst_n_inv;
reg   [31:0] in_stream_data_0_data_out;
wire    in_stream_data_0_vld_in;
wire    in_stream_data_0_vld_out;
wire    in_stream_data_0_ack_in;
reg    in_stream_data_0_ack_out;
reg   [31:0] in_stream_data_0_payload_A;
reg   [31:0] in_stream_data_0_payload_B;
reg    in_stream_data_0_sel_rd;
reg    in_stream_data_0_sel_wr;
wire    in_stream_data_0_sel;
wire    in_stream_data_0_load_A;
wire    in_stream_data_0_load_B;
reg   [1:0] in_stream_data_0_state;
wire    in_stream_data_0_state_cmp_full;
wire    in_stream_last_0_vld_in;
reg    in_stream_last_0_ack_out;
reg   [1:0] in_stream_last_0_state;
reg   [31:0] out_stream_data_1_data_out;
reg    out_stream_data_1_vld_in;
wire    out_stream_data_1_vld_out;
wire    out_stream_data_1_ack_in;
wire    out_stream_data_1_ack_out;
reg   [31:0] out_stream_data_1_payload_A;
reg   [31:0] out_stream_data_1_payload_B;
reg    out_stream_data_1_sel_rd;
reg    out_stream_data_1_sel_wr;
wire    out_stream_data_1_sel;
wire    out_stream_data_1_load_A;
wire    out_stream_data_1_load_B;
reg   [1:0] out_stream_data_1_state;
wire    out_stream_data_1_state_cmp_full;
reg    out_stream_last_1_data_out;
reg    out_stream_last_1_vld_in;
wire    out_stream_last_1_vld_out;
wire    out_stream_last_1_ack_in;
wire    out_stream_last_1_ack_out;
reg    out_stream_last_1_payload_A;
reg    out_stream_last_1_payload_B;
reg    out_stream_last_1_sel_rd;
reg    out_stream_last_1_sel_wr;
wire    out_stream_last_1_sel;
wire    out_stream_last_1_load_A;
wire    out_stream_last_1_load_B;
reg   [1:0] out_stream_last_1_state;
wire    out_stream_last_1_state_cmp_full;
wire   [8:0] dataOut_last_address0;
reg    dataOut_last_ce0;
wire   [0:0] dataOut_last_q0;
reg    in_stream_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [97:0] ap_CS_fsm;
wire    ap_CS_fsm_state2;
wire   [0:0] exitcond1_fu_733_p2;
wire    ap_CS_fsm_state5;
wire   [0:0] exitcond2_fu_1029_p2;
wire    ap_CS_fsm_state55;
wire   [0:0] exitcond3_fu_1431_p2;
wire    ap_CS_fsm_state58;
wire   [0:0] exitcond4_fu_1733_p2;
wire    ap_CS_fsm_state61;
wire   [0:0] exitcond5_fu_2039_p2;
wire    ap_CS_fsm_state64;
wire   [0:0] exitcond6_fu_2344_p2;
reg    out_stream_TDATA_blk_n;
wire    ap_CS_fsm_state97;
wire    ap_CS_fsm_state98;
reg   [31:0] reg_715;
reg    ap_block_state2;
reg    ap_block_state5;
reg    ap_block_state55;
reg    ap_block_state58;
reg    ap_block_state61;
reg    ap_block_state64;
wire   [31:0] dataOut_V_q0;
reg   [31:0] reg_719;
wire    ap_CS_fsm_state70;
wire    ap_CS_fsm_state74;
wire   [31:0] dataOut_V_q1;
wire    ap_CS_fsm_state82;
wire    ap_CS_fsm_state90;
wire    ap_CS_fsm_state93;
wire   [31:0] batch_w_mat_V_q0;
reg  signed [31:0] reg_724;
wire    ap_CS_fsm_state73;
wire    ap_CS_fsm_state77;
reg   [31:0] reg_728;
wire   [6:0] i_7_fu_739_p2;
reg   [6:0] i_7_reg_3544;
reg   [0:0] p_Result_3_reg_3549;
reg   [10:0] exp_tmp_V_reg_3554;
wire   [51:0] tmp_21_fu_771_p1;
reg   [51:0] tmp_21_reg_3559;
wire   [0:0] tmp_8_fu_775_p2;
reg   [0:0] tmp_8_reg_3564;
wire   [53:0] man_V_2_fu_801_p3;
reg   [53:0] man_V_2_reg_3570;
wire    ap_CS_fsm_state3;
wire  signed [11:0] sh_amt_fu_832_p3;
reg  signed [11:0] sh_amt_reg_3575;
wire   [31:0] tmp_22_fu_846_p1;
reg   [31:0] tmp_22_reg_3580;
wire   [0:0] sel_tmp4_fu_950_p2;
reg   [0:0] sel_tmp4_reg_3585;
wire   [0:0] or_cond_fu_956_p2;
reg   [0:0] or_cond_reg_3590;
wire   [31:0] newSel1_fu_962_p3;
reg   [31:0] newSel1_reg_3595;
wire   [0:0] or_cond2_fu_976_p2;
reg   [0:0] or_cond2_reg_3600;
wire   [63:0] tmp_10_fu_1035_p1;
reg   [63:0] tmp_10_reg_3608;
reg   [0:0] p_Result_5_reg_3614;
reg   [10:0] exp_tmp_V_1_reg_3619;
wire   [51:0] tmp_49_fu_1067_p1;
reg   [51:0] tmp_49_reg_3624;
wire   [0:0] tmp_13_fu_1071_p2;
reg   [0:0] tmp_13_reg_3629;
wire   [53:0] man_V_5_fu_1097_p3;
reg   [53:0] man_V_5_reg_3645;
wire    ap_CS_fsm_state6;
wire  signed [11:0] sh_amt_1_fu_1128_p3;
reg  signed [11:0] sh_amt_1_reg_3650;
wire   [31:0] tmp_50_fu_1142_p1;
reg   [31:0] tmp_50_reg_3655;
wire   [0:0] sel_tmp17_fu_1246_p2;
reg   [0:0] sel_tmp17_reg_3660;
wire   [0:0] or_cond3_fu_1252_p2;
reg   [0:0] or_cond3_reg_3665;
wire   [31:0] newSel5_fu_1258_p3;
reg   [31:0] newSel5_reg_3670;
wire   [0:0] or_cond5_fu_1272_p2;
reg   [0:0] or_cond5_reg_3675;
reg  signed [27:0] tmp_42_reg_3680;
reg   [0:0] tmp_64_reg_3687;
wire   [0:0] icmp2_fu_1397_p2;
reg   [0:0] icmp2_reg_3692;
wire    ap_CS_fsm_state7;
wire   [7:0] i_9_fu_1425_p2;
wire    ap_CS_fsm_state54;
reg   [0:0] p_Result_7_reg_3714;
reg   [10:0] exp_tmp_V_2_reg_3719;
wire   [51:0] tmp_79_fu_1463_p1;
reg   [51:0] tmp_79_reg_3724;
wire   [0:0] tmp_28_fu_1467_p2;
reg   [0:0] tmp_28_reg_3729;
wire   [53:0] man_V_8_fu_1493_p3;
reg   [53:0] man_V_8_reg_3735;
wire    ap_CS_fsm_state56;
wire  signed [11:0] sh_amt_2_fu_1524_p3;
reg  signed [11:0] sh_amt_2_reg_3740;
wire   [31:0] tmp_87_fu_1538_p1;
reg   [31:0] tmp_87_reg_3745;
wire   [0:0] sel_tmp26_fu_1642_p2;
reg   [0:0] sel_tmp26_reg_3750;
wire   [0:0] or_cond6_fu_1648_p2;
reg   [0:0] or_cond6_reg_3755;
wire   [31:0] newSel9_fu_1654_p3;
reg   [31:0] newSel9_reg_3760;
wire   [0:0] or_cond8_fu_1668_p2;
reg   [0:0] or_cond8_reg_3765;
wire   [10:0] i_8_fu_1727_p2;
wire    ap_CS_fsm_state57;
reg   [0:0] p_Result_9_reg_3778;
reg   [10:0] exp_tmp_V_3_reg_3783;
wire   [51:0] tmp_111_fu_1765_p1;
reg   [51:0] tmp_111_reg_3788;
wire   [0:0] tmp_48_fu_1769_p2;
reg   [0:0] tmp_48_reg_3793;
wire   [53:0] man_V_11_fu_1795_p3;
reg   [53:0] man_V_11_reg_3799;
wire    ap_CS_fsm_state59;
wire  signed [11:0] sh_amt_3_fu_1826_p3;
reg  signed [11:0] sh_amt_3_reg_3804;
wire   [31:0] tmp_112_fu_1840_p1;
reg   [31:0] tmp_112_reg_3809;
wire   [0:0] sel_tmp35_fu_1944_p2;
reg   [0:0] sel_tmp35_reg_3814;
wire   [0:0] or_cond9_fu_1950_p2;
reg   [0:0] or_cond9_reg_3819;
wire   [31:0] newSel13_fu_1956_p3;
reg   [31:0] newSel13_reg_3824;
wire   [0:0] or_cond11_fu_1970_p2;
reg   [0:0] or_cond11_reg_3829;
wire   [11:0] i_10_fu_2029_p2;
wire    ap_CS_fsm_state60;
wire   [12:0] i_4_cast_fu_2035_p1;
reg   [12:0] i_4_cast_reg_3839;
reg   [0:0] p_Result_11_reg_3847;
reg   [10:0] exp_tmp_V_4_reg_3852;
wire   [51:0] tmp_153_fu_2071_p1;
reg   [51:0] tmp_153_reg_3857;
wire   [0:0] tmp_75_fu_2075_p2;
reg   [0:0] tmp_75_reg_3862;
wire   [11:0] i_11_fu_2081_p2;
reg   [11:0] i_11_reg_3868;
wire   [53:0] man_V_14_fu_2107_p3;
reg   [53:0] man_V_14_reg_3873;
wire    ap_CS_fsm_state62;
wire  signed [11:0] sh_amt_4_fu_2138_p3;
reg  signed [11:0] sh_amt_4_reg_3878;
wire   [31:0] tmp_154_fu_2152_p1;
reg   [31:0] tmp_154_reg_3883;
wire   [0:0] sel_tmp44_fu_2256_p2;
reg   [0:0] sel_tmp44_reg_3888;
wire   [0:0] or_cond12_fu_2262_p2;
reg   [0:0] or_cond12_reg_3893;
wire   [31:0] newSel17_fu_2268_p3;
reg   [31:0] newSel17_reg_3898;
wire   [0:0] or_cond14_fu_2282_p2;
reg   [0:0] or_cond14_reg_3903;
wire   [12:0] i_5_cast_fu_2340_p1;
reg   [12:0] i_5_cast_reg_3908;
reg   [0:0] p_Result_13_reg_3916;
reg   [10:0] exp_tmp_V_5_reg_3921;
wire   [51:0] tmp_174_fu_2376_p1;
reg   [51:0] tmp_174_reg_3926;
wire   [0:0] tmp_95_fu_2380_p2;
reg   [0:0] tmp_95_reg_3931;
wire   [11:0] i_12_fu_2386_p2;
reg   [11:0] i_12_reg_3937;
wire   [53:0] man_V_17_fu_2412_p3;
reg   [53:0] man_V_17_reg_3942;
wire    ap_CS_fsm_state65;
wire  signed [11:0] sh_amt_5_fu_2443_p3;
reg  signed [11:0] sh_amt_5_reg_3947;
wire   [31:0] tmp_175_fu_2457_p1;
reg   [31:0] tmp_175_reg_3952;
wire   [0:0] sel_tmp53_fu_2561_p2;
reg   [0:0] sel_tmp53_reg_3957;
wire   [0:0] or_cond15_fu_2567_p2;
reg   [0:0] or_cond15_reg_3962;
wire   [31:0] newSel21_fu_2573_p3;
reg   [31:0] newSel21_reg_3967;
wire   [0:0] or_cond17_fu_2587_p2;
reg   [0:0] or_cond17_reg_3972;
wire   [8:0] i_13_fu_2651_p2;
wire    ap_CS_fsm_state67;
wire   [7:0] batchIndex_cast_fu_2662_p1;
reg   [7:0] batchIndex_cast_reg_3985;
wire    ap_CS_fsm_state68;
wire   [8:0] batchIndex_cast1_fu_2666_p1;
reg   [8:0] batchIndex_cast1_reg_3990;
wire   [9:0] batchIndex_cast2_fu_2670_p1;
reg   [9:0] batchIndex_cast2_reg_3995;
wire   [5:0] batchIndex_1_fu_2680_p2;
reg   [5:0] batchIndex_1_reg_4003;
wire   [8:0] i1_cast_fu_2686_p1;
reg   [8:0] i1_cast_reg_4008;
wire    ap_CS_fsm_state69;
wire   [1:0] i_14_fu_2696_p2;
reg   [1:0] i_14_reg_4016;
wire   [0:0] tmp_204_fu_2715_p1;
reg   [0:0] tmp_204_reg_4021;
wire   [0:0] exitcond9_fu_2690_p2;
reg   [8:0] dataOut_V_addr_2_reg_4031;
wire   [31:0] smooth_grad_V_q0;
reg  signed [31:0] p_Val2_13_reg_4036;
wire  signed [63:0] r_V_fu_2744_p1;
reg  signed [63:0] r_V_reg_4043;
wire    ap_CS_fsm_state71;
wire  signed [47:0] r_V_cast_fu_2747_p1;
reg  signed [47:0] r_V_cast_reg_4048;
wire   [4:0] tmp_133_fu_2750_p3;
reg   [4:0] tmp_133_reg_4053;
wire   [7:0] j2_cast_fu_2757_p1;
reg   [7:0] j2_cast_reg_4058;
wire    ap_CS_fsm_state72;
wire   [8:0] j2_cast1_fu_2761_p1;
reg   [8:0] j2_cast1_reg_4063;
wire   [4:0] j_fu_2771_p2;
reg   [4:0] j_reg_4071;
wire   [3:0] tmp_205_fu_2777_p1;
reg   [3:0] tmp_205_reg_4076;
wire   [0:0] exitcond10_fu_2765_p2;
wire   [4:0] tmp_147_fu_2822_p2;
reg   [4:0] tmp_147_reg_4091;
wire   [0:0] tmp_138_fu_2827_p2;
reg   [0:0] tmp_138_reg_4101;
reg   [8:0] dataOut_V_addr_3_reg_4108;
wire   [31:0] batch_a_mat_V_q0;
reg   [31:0] batch_a_mat_V_load_reg_4114;
reg   [8:0] dataOut_V_addr_4_reg_4119;
wire  signed [63:0] r_V_1_fu_2851_p2;
reg  signed [63:0] r_V_1_reg_4125;
reg   [31:0] p_Val2_18_reg_4132;
wire  signed [93:0] r_V_6_cast_fu_2921_p1;
reg  signed [93:0] r_V_6_cast_reg_4137;
wire    ap_CS_fsm_state75;
wire   [8:0] tmp_157_cast_fu_2931_p1;
reg   [8:0] tmp_157_cast_reg_4142;
wire   [79:0] tmp_151_fu_2935_p3;
reg   [79:0] tmp_151_reg_4147;
wire   [63:0] tmp_152_fu_2942_p3;
reg   [63:0] tmp_152_reg_4152;
wire   [7:0] k3_cast2_fu_2949_p1;
reg   [7:0] k3_cast2_reg_4158;
wire    ap_CS_fsm_state76;
wire   [4:0] k_fu_2963_p2;
reg   [4:0] k_reg_4167;
wire   [3:0] tmp_207_fu_2969_p1;
reg   [3:0] tmp_207_reg_4172;
wire   [0:0] exitcond11_fu_2957_p2;
wire   [8:0] tmp_170_fu_3019_p2;
reg   [8:0] tmp_170_reg_4187;
wire   [31:0] batch_z_mat_V_q0;
reg  signed [31:0] batch_z_mat_V_load_1_reg_4192;
wire   [0:0] tmp_161_fu_3024_p2;
reg   [0:0] tmp_161_reg_4198;
wire    ap_CS_fsm_state78;
reg   [8:0] dataOut_V_addr_5_reg_4214;
wire    ap_CS_fsm_state81;
reg   [8:0] dataOut_V_addr_6_reg_4219;
wire   [7:0] tmp_176_fu_3075_p2;
reg   [7:0] tmp_176_reg_4224;
wire   [93:0] grp_fu_3033_p2;
reg   [93:0] r_V_3_reg_4229;
wire   [63:0] grp_fu_3041_p2;
reg   [63:0] r_V_s_reg_4234;
wire  signed [79:0] r_V_4_cast_fu_3096_p2;
reg  signed [79:0] r_V_4_cast_reg_4239;
wire  signed [8:0] tmp_185_cast_fu_3177_p1;
reg  signed [8:0] tmp_185_cast_reg_4244;
wire    ap_CS_fsm_state83;
wire   [2:0] k0_fu_3190_p2;
reg   [2:0] k0_reg_4252;
wire    ap_CS_fsm_state84;
wire   [8:0] tmp_179_fu_3202_p2;
reg   [8:0] tmp_179_reg_4257;
wire   [0:0] exitcond12_fu_3184_p2;
wire   [31:0] batch_x_mat_V_q0;
reg  signed [31:0] batch_x_mat_V_load_reg_4267;
wire    ap_CS_fsm_state85;
wire    ap_CS_fsm_state86;
reg   [8:0] dataOut_V_addr_7_reg_4277;
wire    ap_CS_fsm_state89;
wire   [79:0] grp_fu_3228_p2;
reg   [79:0] r_V_2_reg_4282;
wire   [8:0] i_15_fu_3267_p2;
reg   [8:0] i_15_reg_4290;
wire    ap_CS_fsm_state92;
reg    ap_block_state92;
wire   [0:0] exitcond_fu_3261_p2;
reg   [0:0] p_Result_15_reg_4305;
reg   [0:0] dataOut_last_load_reg_4311;
wire   [0:0] tmp_110_fu_3287_p2;
reg   [0:0] tmp_110_reg_4316;
wire    ap_CS_fsm_state94;
wire   [31:0] tmp_V_4_fu_3299_p3;
reg   [31:0] tmp_V_4_reg_4321;
reg   [31:0] l_fu_3316_p3;
reg   [31:0] l_reg_4329;
wire   [7:0] tmp_203_fu_3324_p1;
reg   [7:0] tmp_203_reg_4334;
wire   [31:0] tmp_113_fu_3328_p2;
reg   [31:0] tmp_113_reg_4339;
wire    ap_CS_fsm_state95;
wire   [31:0] tmp_117_fu_3425_p3;
reg   [31:0] tmp_117_reg_4345;
wire   [0:0] tmp_120_fu_3433_p2;
reg   [0:0] tmp_120_reg_4350;
reg   [30:0] m_reg_4355;
wire    ap_CS_fsm_state96;
reg   [0:0] tmp_202_reg_4360;
wire   [31:0] p_s_fu_3533_p3;
reg   [8:0] dataOut_V_address0;
reg    dataOut_V_ce0;
reg    dataOut_V_we0;
reg   [31:0] dataOut_V_d0;
reg   [8:0] dataOut_V_address1;
reg    dataOut_V_ce1;
reg    dataOut_V_we1;
reg   [31:0] dataOut_V_d1;
reg   [5:0] smooth_grad_V_address0;
reg    smooth_grad_V_ce0;
reg    smooth_grad_V_we0;
reg   [31:0] smooth_grad_V_d0;
reg   [5:0] nn_out_mat_V_address0;
reg    nn_out_mat_V_ce0;
reg    nn_out_mat_V_we0;
wire   [31:0] nn_out_mat_V_d0;
wire   [31:0] nn_out_mat_V_q0;
reg   [5:0] batch_y_mat_V_address0;
reg    batch_y_mat_V_ce0;
reg    batch_y_mat_V_we0;
wire   [31:0] batch_y_mat_V_d0;
wire   [31:0] batch_y_mat_V_q0;
reg   [9:0] batch_a_mat_V_address0;
reg    batch_a_mat_V_ce0;
reg    batch_a_mat_V_we0;
wire   [31:0] batch_a_mat_V_d0;
reg   [9:0] batch_z_mat_V_address0;
reg    batch_z_mat_V_ce0;
reg    batch_z_mat_V_we0;
wire   [31:0] batch_z_mat_V_d0;
reg   [7:0] batch_x_mat_V_address0;
reg    batch_x_mat_V_ce0;
reg    batch_x_mat_V_we0;
wire   [31:0] batch_x_mat_V_d0;
reg   [8:0] batch_w_mat_V_address0;
reg    batch_w_mat_V_ce0;
reg    batch_w_mat_V_we0;
wire   [31:0] batch_w_mat_V_d0;
reg   [6:0] i_reg_559;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state1;
reg   [7:0] i_1_reg_571;
reg   [10:0] i_2_reg_583;
reg   [11:0] i_3_reg_595;
reg   [11:0] i_4_reg_607;
wire    ap_CS_fsm_state63;
reg   [11:0] i_5_reg_618;
wire    ap_CS_fsm_state66;
reg   [8:0] i_6_reg_629;
wire   [0:0] exitcond7_fu_2645_p2;
reg   [5:0] batchIndex_reg_640;
reg   [1:0] i1_reg_652;
wire   [0:0] exitcond8_fu_2674_p2;
reg   [4:0] j2_reg_663;
reg   [4:0] k3_reg_674;
reg   [2:0] k1_reg_685;
wire    ap_CS_fsm_state91;
reg   [8:0] i5_reg_696;
wire   [63:0] tmp_fu_982_p1;
wire   [63:0] tmp_6_fu_1316_p1;
wire   [5:0] smooth_grad_V_addr_1_gep_fu_376_p3;
wire   [63:0] tmp_24_fu_1680_p1;
wire   [63:0] tmp_44_fu_1982_p1;
wire   [63:0] tmp_71_fu_2293_p1;
wire   [63:0] tmp_91_fu_2598_p1;
wire   [63:0] tmp_108_fu_2657_p1;
wire   [63:0] tmp_131_fu_2733_p1;
wire   [63:0] tmp_128_fu_2710_p1;
wire   [63:0] tmp_137_fu_2796_p1;
wire   [63:0] tmp_143_fu_2817_p1;
wire   [63:0] tmp_140_fu_2838_p1;
wire   [63:0] tmp_148_fu_2843_p1;
wire   [63:0] tmp_159_fu_2986_p1;
wire   [63:0] tmp_166_fu_3004_p1;
wire   [63:0] tmp_163_fu_3055_p1;
wire   [63:0] tmp_171_fu_3060_p1;
wire   [63:0] tmp_184_fu_3220_p1;
wire   [63:0] tmp_180_fu_3233_p1;
wire   [63:0] tmp_109_fu_3273_p1;
wire  signed [31:0] abs_dif_V_3_fu_1363_p1;
wire   [31:0] tmp_69_fu_1420_p1;
wire   [31:0] tmp_132_fu_2738_p2;
wire   [31:0] tmp_149_fu_2915_p2;
wire   [63:0] grp_fu_707_p1;
wire   [63:0] ireg_V_fu_745_p1;
wire   [62:0] tmp_9_fu_749_p1;
wire   [52:0] tmp_7_fu_784_p3;
wire   [53:0] p_Result_4_fu_791_p1;
wire   [53:0] man_V_1_fu_795_p2;
wire   [11:0] tmp_3_fu_781_p1;
wire   [11:0] F2_fu_808_p2;
wire   [0:0] tmp_s_fu_814_p2;
wire   [11:0] tmp_1_fu_820_p2;
wire   [11:0] tmp_2_fu_826_p2;
wire   [6:0] tmp_29_fu_856_p4;
wire   [31:0] ireg_V_to_int_fu_872_p1;
wire   [0:0] tmp_35_fu_876_p3;
wire   [0:0] tmp_4_fu_840_p2;
wire   [0:0] sel_tmp1_fu_892_p2;
wire   [0:0] sel_tmp6_demorgan_fu_903_p2;
wire   [0:0] sel_tmp6_fu_908_p2;
wire   [0:0] tmp_12_fu_850_p2;
wire   [0:0] sel_tmp7_fu_914_p2;
wire   [0:0] sel_tmp8_fu_920_p2;
wire   [0:0] sel_tmp21_demorgan_fu_938_p2;
wire   [0:0] icmp_fu_866_p2;
wire   [0:0] sel_tmp3_fu_944_p2;
wire   [0:0] sel_tmp_fu_932_p2;
wire   [0:0] sel_tmp9_fu_926_p2;
wire   [31:0] tmp_20_fu_884_p3;
wire   [0:0] sel_tmp2_fu_897_p2;
wire   [0:0] or_cond1_fu_970_p2;
wire  signed [31:0] sh_amt_cast_fu_987_p1;
wire   [53:0] tmp_14_fu_990_p1;
wire   [53:0] tmp_15_fu_994_p2;
wire   [31:0] tmp_25_fu_1003_p2;
wire   [31:0] tmp_32_fu_999_p1;
wire   [31:0] newSel_fu_1008_p3;
wire   [31:0] newSel2_fu_1015_p3;
wire   [63:0] ireg_V_1_fu_1041_p1;
wire   [62:0] tmp_40_fu_1045_p1;
wire   [52:0] tmp_27_fu_1080_p3;
wire   [53:0] p_Result_6_fu_1087_p1;
wire   [53:0] man_V_4_fu_1091_p2;
wire   [11:0] tmp_11_fu_1077_p1;
wire   [11:0] F2_1_fu_1104_p2;
wire   [0:0] tmp_16_fu_1110_p2;
wire   [11:0] tmp_17_fu_1116_p2;
wire   [11:0] tmp_18_fu_1122_p2;
wire   [6:0] tmp_52_fu_1152_p4;
wire   [31:0] ireg_V_1_to_int_fu_1168_p1;
wire   [0:0] tmp_57_fu_1172_p3;
wire   [0:0] tmp_19_fu_1136_p2;
wire   [0:0] sel_tmp5_fu_1188_p2;
wire   [0:0] sel_tmp30_demorgan_fu_1199_p2;
wire   [0:0] sel_tmp11_fu_1204_p2;
wire   [0:0] tmp_30_fu_1146_p2;
wire   [0:0] sel_tmp12_fu_1210_p2;
wire   [0:0] sel_tmp13_fu_1216_p2;
wire   [0:0] sel_tmp45_demorgan_fu_1234_p2;
wire   [0:0] icmp1_fu_1162_p2;
wire   [0:0] sel_tmp16_fu_1240_p2;
wire   [0:0] sel_tmp15_fu_1228_p2;
wire   [0:0] sel_tmp14_fu_1222_p2;
wire   [31:0] tmp_34_fu_1180_p3;
wire   [0:0] sel_tmp10_fu_1193_p2;
wire   [0:0] or_cond4_fu_1266_p2;
wire  signed [32:0] lhs_V_fu_1278_p1;
wire  signed [32:0] rhs_V_fu_1282_p1;
wire   [32:0] ret_V_fu_1286_p2;
wire   [7:0] tmp_5_fu_1310_p2;
wire  signed [31:0] sh_amt_1_cast_fu_1321_p1;
wire   [53:0] tmp_31_fu_1324_p1;
wire   [53:0] tmp_33_fu_1328_p2;
wire   [31:0] tmp_41_fu_1337_p2;
wire   [31:0] tmp_54_fu_1333_p1;
wire   [31:0] newSel4_fu_1342_p3;
wire   [31:0] newSel6_fu_1349_p3;
wire  signed [28:0] abs_dif_V_3_cast_fu_1367_p1;
wire   [28:0] abs_dif_V_fu_1370_p2;
wire  signed [28:0] abs_dif_V_1_fu_1376_p3;
wire   [12:0] tmp_65_fu_1387_p4;
wire  signed [31:0] abs_dif_V_1_cast_fu_1383_p1;
wire   [43:0] grp_fu_1414_p0;
wire   [32:0] grp_fu_1414_p1;
wire   [31:0] grp_fu_1414_p2;
wire   [63:0] ireg_V_2_fu_1437_p1;
wire   [62:0] tmp_74_fu_1441_p1;
wire   [52:0] tmp_51_fu_1476_p3;
wire   [53:0] p_Result_8_fu_1483_p1;
wire   [53:0] man_V_7_fu_1487_p2;
wire   [11:0] tmp_26_fu_1473_p1;
wire   [11:0] F2_2_fu_1500_p2;
wire   [0:0] tmp_36_fu_1506_p2;
wire   [11:0] tmp_37_fu_1512_p2;
wire   [11:0] tmp_38_fu_1518_p2;
wire   [6:0] tmp_89_fu_1548_p4;
wire   [31:0] ireg_V_2_to_int_fu_1564_p1;
wire   [0:0] tmp_97_fu_1568_p3;
wire   [0:0] tmp_39_fu_1532_p2;
wire   [0:0] sel_tmp18_fu_1584_p2;
wire   [0:0] sel_tmp55_demorgan_fu_1595_p2;
wire   [0:0] sel_tmp20_fu_1600_p2;
wire   [0:0] tmp_53_fu_1542_p2;
wire   [0:0] sel_tmp21_fu_1606_p2;
wire   [0:0] sel_tmp22_fu_1612_p2;
wire   [0:0] sel_tmp70_demorgan_fu_1630_p2;
wire   [0:0] icmp3_fu_1558_p2;
wire   [0:0] sel_tmp25_fu_1636_p2;
wire   [0:0] sel_tmp24_fu_1624_p2;
wire   [0:0] sel_tmp23_fu_1618_p2;
wire   [31:0] tmp_58_fu_1576_p3;
wire   [0:0] sel_tmp19_fu_1589_p2;
wire   [0:0] or_cond7_fu_1662_p2;
wire   [10:0] tmp_23_fu_1674_p2;
wire  signed [31:0] sh_amt_2_cast_fu_1685_p1;
wire   [53:0] tmp_55_fu_1688_p1;
wire   [53:0] tmp_56_fu_1692_p2;
wire   [31:0] tmp_63_fu_1701_p2;
wire   [31:0] tmp_96_fu_1697_p1;
wire   [31:0] newSel8_fu_1706_p3;
wire   [31:0] newSel10_fu_1713_p3;
wire   [63:0] ireg_V_3_fu_1739_p1;
wire   [62:0] tmp_105_fu_1743_p1;
wire   [52:0] tmp_66_fu_1778_p3;
wire   [53:0] p_Result_10_fu_1785_p1;
wire   [53:0] man_V_10_fu_1789_p2;
wire   [11:0] tmp_46_fu_1775_p1;
wire   [11:0] F2_3_fu_1802_p2;
wire   [0:0] tmp_59_fu_1808_p2;
wire   [11:0] tmp_60_fu_1814_p2;
wire   [11:0] tmp_61_fu_1820_p2;
wire   [6:0] tmp_118_fu_1850_p4;
wire   [31:0] ireg_V_3_to_int_fu_1866_p1;
wire   [0:0] tmp_121_fu_1870_p3;
wire   [0:0] tmp_62_fu_1834_p2;
wire   [0:0] sel_tmp27_fu_1886_p2;
wire   [0:0] sel_tmp80_demorgan_fu_1897_p2;
wire   [0:0] sel_tmp29_fu_1902_p2;
wire   [0:0] tmp_67_fu_1844_p2;
wire   [0:0] sel_tmp30_fu_1908_p2;
wire   [0:0] sel_tmp31_fu_1914_p2;
wire   [0:0] sel_tmp95_demorgan_fu_1932_p2;
wire   [0:0] icmp4_fu_1860_p2;
wire   [0:0] sel_tmp34_fu_1938_p2;
wire   [0:0] sel_tmp33_fu_1926_p2;
wire   [0:0] sel_tmp32_fu_1920_p2;
wire   [31:0] tmp_76_fu_1878_p3;
wire   [0:0] sel_tmp28_fu_1891_p2;
wire   [0:0] or_cond10_fu_1964_p2;
wire   [11:0] tmp_43_fu_1976_p2;
wire  signed [31:0] sh_amt_3_cast_fu_1987_p1;
wire   [53:0] tmp_68_fu_1990_p1;
wire   [53:0] tmp_72_fu_1994_p2;
wire   [31:0] tmp_77_fu_2003_p2;
wire   [31:0] tmp_119_fu_1999_p1;
wire   [31:0] newSel12_fu_2008_p3;
wire   [31:0] newSel14_fu_2015_p3;
wire   [63:0] ireg_V_4_fu_2045_p1;
wire   [62:0] tmp_141_fu_2049_p1;
wire   [52:0] tmp_78_fu_2090_p3;
wire   [53:0] p_Result_12_fu_2097_p1;
wire   [53:0] man_V_13_fu_2101_p2;
wire   [11:0] tmp_73_fu_2087_p1;
wire   [11:0] F2_4_fu_2114_p2;
wire   [0:0] tmp_80_fu_2120_p2;
wire   [11:0] tmp_81_fu_2126_p2;
wire   [11:0] tmp_82_fu_2132_p2;
wire   [6:0] tmp_156_fu_2162_p4;
wire   [31:0] ireg_V_4_to_int_fu_2178_p1;
wire   [0:0] tmp_160_fu_2182_p3;
wire   [0:0] tmp_83_fu_2146_p2;
wire   [0:0] sel_tmp36_fu_2198_p2;
wire   [0:0] sel_tmp105_demorgan_fu_2209_p2;
wire   [0:0] sel_tmp38_fu_2214_p2;
wire   [0:0] tmp_84_fu_2156_p2;
wire   [0:0] sel_tmp39_fu_2220_p2;
wire   [0:0] sel_tmp40_fu_2226_p2;
wire   [0:0] sel_tmp120_demorgan_fu_2244_p2;
wire   [0:0] icmp5_fu_2172_p2;
wire   [0:0] sel_tmp43_fu_2250_p2;
wire   [0:0] sel_tmp42_fu_2238_p2;
wire   [0:0] sel_tmp41_fu_2232_p2;
wire   [31:0] tmp_88_fu_2190_p3;
wire   [0:0] sel_tmp37_fu_2203_p2;
wire   [0:0] or_cond13_fu_2276_p2;
wire   [12:0] tmp_70_fu_2288_p2;
wire  signed [31:0] sh_amt_4_cast_fu_2298_p1;
wire   [53:0] tmp_85_fu_2301_p1;
wire   [53:0] tmp_86_fu_2305_p2;
wire   [31:0] tmp_92_fu_2314_p2;
wire   [31:0] tmp_158_fu_2310_p1;
wire   [31:0] newSel16_fu_2319_p3;
wire   [31:0] newSel18_fu_2326_p3;
wire   [63:0] ireg_V_5_fu_2350_p1;
wire   [62:0] tmp_172_fu_2354_p1;
wire   [52:0] tmp_94_fu_2395_p3;
wire   [53:0] p_Result_14_fu_2402_p1;
wire   [53:0] man_V_16_fu_2406_p2;
wire   [11:0] tmp_93_fu_2392_p1;
wire   [11:0] F2_5_fu_2419_p2;
wire   [0:0] tmp_98_fu_2425_p2;
wire   [11:0] tmp_99_fu_2431_p2;
wire   [11:0] tmp_100_fu_2437_p2;
wire   [6:0] tmp_182_fu_2467_p4;
wire   [31:0] ireg_V_5_to_int_fu_2483_p1;
wire   [0:0] tmp_193_fu_2487_p3;
wire   [0:0] tmp_101_fu_2451_p2;
wire   [0:0] sel_tmp45_fu_2503_p2;
wire   [0:0] sel_tmp130_demorgan_fu_2514_p2;
wire   [0:0] sel_tmp47_fu_2519_p2;
wire   [0:0] tmp_102_fu_2461_p2;
wire   [0:0] sel_tmp48_fu_2525_p2;
wire   [0:0] sel_tmp49_fu_2531_p2;
wire   [0:0] sel_tmp145_demorgan_fu_2549_p2;
wire   [0:0] icmp6_fu_2477_p2;
wire   [0:0] sel_tmp52_fu_2555_p2;
wire   [0:0] sel_tmp51_fu_2543_p2;
wire   [0:0] sel_tmp50_fu_2537_p2;
wire   [31:0] tmp_106_fu_2495_p3;
wire   [0:0] sel_tmp46_fu_2508_p2;
wire   [0:0] or_cond16_fu_2581_p2;
wire   [12:0] tmp_90_fu_2593_p2;
wire  signed [31:0] sh_amt_5_cast_fu_2603_p1;
wire   [53:0] tmp_103_fu_2606_p1;
wire   [53:0] tmp_104_fu_2610_p2;
wire   [31:0] tmp_107_fu_2619_p2;
wire   [31:0] tmp_192_fu_2615_p1;
wire   [31:0] newSel20_fu_2624_p3;
wire   [31:0] newSel22_fu_2631_p3;
wire   [5:0] tmp_135_fu_2702_p3;
wire   [5:0] tmp_129_fu_2719_p3;
wire   [5:0] tmp_130_fu_2727_p2;
wire   [9:0] tmp1_fu_2781_p4;
wire   [9:0] tmp_136_fu_2791_p2;
wire   [8:0] tmp2_fu_2802_p4;
wire   [8:0] tmp_142_fu_2812_p2;
wire   [8:0] tmp_139_fu_2833_p2;
wire  signed [31:0] r_V_1_fu_2851_p0;
wire  signed [31:0] r_V_1_fu_2851_p1;
wire  signed [31:0] r_V_5_fu_2859_p0;
wire  signed [31:0] r_V_5_fu_2859_p1;
wire   [47:0] r_V_5_fu_2859_p2;
wire   [47:0] tmp_206_fu_2874_p1;
wire   [47:0] tmp_145_fu_2877_p3;
wire   [47:0] tmp_148_cast_fu_2892_p2;
wire   [47:0] lhs_V_1_fu_2884_p3;
wire   [47:0] ret_V_5_fu_2898_p2;
wire   [7:0] tmp_150_fu_2924_p3;
wire   [8:0] tmp_155_fu_2973_p3;
wire   [8:0] tmp_157_fu_2981_p2;
wire   [7:0] tmp_164_fu_2991_p3;
wire   [7:0] tmp_165_fu_2999_p2;
wire   [5:0] k3_cast_fu_2953_p1;
wire   [5:0] tmp155_fu_3009_p2;
wire   [8:0] tmp155_cast_fu_3015_p1;
wire  signed [63:0] grp_fu_3033_p0;
wire   [7:0] tmp_162_fu_3046_p2;
wire  signed [8:0] tmp_167_cast_fu_3051_p1;
wire   [6:0] p_shl_fu_3064_p3;
wire   [7:0] p_shl_cast_fu_3071_p1;
wire   [79:0] tmp_208_fu_3080_p1;
wire   [79:0] tmp_177_fu_3084_p2;
wire   [79:0] tmp_178_fu_3089_p3;
wire   [63:0] tmp_209_fu_3102_p1;
wire   [63:0] tmp_167_fu_3105_p2;
wire   [63:0] tmp_168_fu_3110_p3;
wire   [63:0] lhs_V_2_fu_3117_p3;
wire   [63:0] tmp_175_cast_fu_3125_p2;
wire   [63:0] ret_V_6_fu_3131_p2;
wire   [63:0] lhs_V_3_fu_3148_p3;
wire   [63:0] tmp_182_cast_fu_3156_p2;
wire   [63:0] ret_V_7_fu_3160_p2;
wire   [8:0] k1_cast_fu_3180_p1;
wire   [8:0] tmp156_fu_3196_p2;
wire   [7:0] tmp_181_fu_3207_p3;
wire   [7:0] tmp_183_fu_3215_p2;
wire   [79:0] lhs_V_4_fu_3237_p3;
wire   [79:0] ret_V_8_fu_3245_p2;
wire   [31:0] tmp_V_fu_3293_p2;
reg   [31:0] p_Result_16_fu_3306_p4;
wire   [31:0] lsb_index_fu_3333_p2;
wire   [30:0] tmp_195_fu_3339_p4;
wire   [5:0] tmp_196_fu_3355_p1;
wire   [5:0] tmp_197_fu_3359_p2;
wire   [31:0] tmp_198_fu_3365_p1;
wire   [31:0] tmp_199_fu_3369_p2;
wire   [31:0] p_Result_s_fu_3375_p2;
wire   [0:0] icmp7_fu_3349_p2;
wire   [0:0] tmp_114_fu_3380_p2;
wire   [0:0] tmp_201_fu_3392_p3;
wire   [0:0] p_Result_1_fu_3406_p3;
wire   [0:0] rev_fu_3400_p2;
wire   [0:0] tmp_115_fu_3413_p2;
wire   [0:0] a_fu_3386_p2;
wire   [0:0] tmp_116_fu_3419_p2;
wire   [31:0] tmp_122_fu_3439_p2;
wire   [31:0] tmp_124_fu_3449_p2;
wire   [31:0] tmp_123_fu_3444_p2;
wire   [31:0] tmp_125_fu_3454_p2;
wire   [31:0] m_1_fu_3459_p3;
wire   [31:0] m_2_fu_3466_p2;
wire   [7:0] tmp_224_cast_cast_fu_3492_p3;
wire   [7:0] tmp_126_fu_3499_p2;
wire   [7:0] p_Repl2_2_trunc_fu_3504_p2;
wire   [31:0] m_6_fu_3489_p1;
wire   [8:0] tmp_127_fu_3510_p3;
wire   [31:0] p_Result_17_fu_3517_p5;
wire   [31:0] tmp_134_fu_3529_p1;
reg    grp_fu_1414_ap_start;
wire    grp_fu_1414_ap_done;
reg   [97:0] ap_NS_fsm;
wire   [43:0] grp_fu_1414_p10;

// power-on initialization
initial begin
#0 in_stream_data_0_sel_rd = 1'b0;
#0 in_stream_data_0_sel_wr = 1'b0;
#0 in_stream_data_0_state = 2'd0;
#0 in_stream_last_0_state = 2'd0;
#0 out_stream_data_1_sel_rd = 1'b0;
#0 out_stream_data_1_sel_wr = 1'b0;
#0 out_stream_data_1_state = 2'd0;
#0 out_stream_last_1_sel_rd = 1'b0;
#0 out_stream_last_1_sel_wr = 1'b0;
#0 out_stream_last_1_state = 2'd0;
#0 ap_CS_fsm = 98'd1;
end

backward_lite_datbkb #(
    .DataWidth( 1 ),
    .AddressRange( 434 ),
    .AddressWidth( 9 ))
dataOut_last_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dataOut_last_address0),
    .ce0(dataOut_last_ce0),
    .q0(dataOut_last_q0)
);

backward_lite_datcud #(
    .DataWidth( 32 ),
    .AddressRange( 434 ),
    .AddressWidth( 9 ))
dataOut_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dataOut_V_address0),
    .ce0(dataOut_V_ce0),
    .we0(dataOut_V_we0),
    .d0(dataOut_V_d0),
    .q0(dataOut_V_q0),
    .address1(dataOut_V_address1),
    .ce1(dataOut_V_ce1),
    .we1(dataOut_V_we1),
    .d1(dataOut_V_d1),
    .q1(dataOut_V_q1)
);

backward_lite_smodEe #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
smooth_grad_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(smooth_grad_V_address0),
    .ce0(smooth_grad_V_ce0),
    .we0(smooth_grad_V_we0),
    .d0(smooth_grad_V_d0),
    .q0(smooth_grad_V_q0)
);

backward_lite_smodEe #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
nn_out_mat_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(nn_out_mat_V_address0),
    .ce0(nn_out_mat_V_ce0),
    .we0(nn_out_mat_V_we0),
    .d0(nn_out_mat_V_d0),
    .q0(nn_out_mat_V_q0)
);

backward_lite_smodEe #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
batch_y_mat_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(batch_y_mat_V_address0),
    .ce0(batch_y_mat_V_ce0),
    .we0(batch_y_mat_V_we0),
    .d0(batch_y_mat_V_d0),
    .q0(batch_y_mat_V_q0)
);

backward_lite_batg8j #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
batch_a_mat_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(batch_a_mat_V_address0),
    .ce0(batch_a_mat_V_ce0),
    .we0(batch_a_mat_V_we0),
    .d0(batch_a_mat_V_d0),
    .q0(batch_a_mat_V_q0)
);

backward_lite_batg8j #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
batch_z_mat_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(batch_z_mat_V_address0),
    .ce0(batch_z_mat_V_ce0),
    .we0(batch_z_mat_V_we0),
    .d0(batch_z_mat_V_d0),
    .q0(batch_z_mat_V_q0)
);

backward_lite_batibs #(
    .DataWidth( 32 ),
    .AddressRange( 224 ),
    .AddressWidth( 8 ))
batch_x_mat_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(batch_x_mat_V_address0),
    .ce0(batch_x_mat_V_ce0),
    .we0(batch_x_mat_V_we0),
    .d0(batch_x_mat_V_d0),
    .q0(batch_x_mat_V_q0)
);

backward_lite_batjbC #(
    .DataWidth( 32 ),
    .AddressRange( 288 ),
    .AddressWidth( 9 ))
batch_w_mat_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(batch_w_mat_V_address0),
    .ce0(batch_w_mat_V_ce0),
    .we0(batch_w_mat_V_we0),
    .d0(batch_w_mat_V_d0),
    .q0(batch_w_mat_V_q0)
);

backward_lite_fpekbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
backward_lite_fpekbM_U1(
    .din0(in_stream_data_0_data_out),
    .dout(grp_fu_707_p1)
);

backward_lite_sdilbW #(
    .ID( 1 ),
    .NUM_STAGE( 48 ),
    .din0_WIDTH( 44 ),
    .din1_WIDTH( 33 ),
    .dout_WIDTH( 32 ))
backward_lite_sdilbW_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_1414_ap_start),
    .done(grp_fu_1414_ap_done),
    .din0(grp_fu_1414_p0),
    .din1(grp_fu_1414_p1),
    .ce(1'b1),
    .dout(grp_fu_1414_p2)
);

backward_lite_mulmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 94 ))
backward_lite_mulmb6_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3033_p0),
    .din1(reg_724),
    .ce(1'b1),
    .dout(grp_fu_3033_p2)
);

backward_lite_mulncg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
backward_lite_mulncg_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(r_V_1_reg_4125),
    .din1(batch_z_mat_V_load_1_reg_4192),
    .ce(1'b1),
    .dout(grp_fu_3041_p2)
);

backward_lite_mulocq #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 80 ),
    .dout_WIDTH( 80 ))
backward_lite_mulocq_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(batch_x_mat_V_load_reg_4267),
    .din1(r_V_4_cast_reg_4239),
    .ce(1'b1),
    .dout(grp_fu_3228_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_stream_data_0_sel_rd <= 1'b0;
    end else begin
        if (((in_stream_data_0_ack_out == 1'b1) & (in_stream_data_0_vld_out == 1'b1))) begin
            in_stream_data_0_sel_rd <= ~in_stream_data_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_stream_data_0_sel_wr <= 1'b0;
    end else begin
        if (((in_stream_data_0_ack_in == 1'b1) & (in_stream_data_0_vld_in == 1'b1))) begin
            in_stream_data_0_sel_wr <= ~in_stream_data_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_stream_data_0_state <= 2'd0;
    end else begin
        if ((((in_stream_data_0_vld_in == 1'b0) & (in_stream_data_0_state == 2'd2)) | ((in_stream_data_0_vld_in == 1'b0) & (in_stream_data_0_ack_out == 1'b1) & (in_stream_data_0_state == 2'd3)))) begin
            in_stream_data_0_state <= 2'd2;
        end else if ((((in_stream_data_0_ack_out == 1'b0) & (in_stream_data_0_state == 2'd1)) | ((in_stream_data_0_ack_out == 1'b0) & (in_stream_data_0_vld_in == 1'b1) & (in_stream_data_0_state == 2'd3)))) begin
            in_stream_data_0_state <= 2'd1;
        end else if (((~((in_stream_data_0_vld_in == 1'b0) & (in_stream_data_0_ack_out == 1'b1)) & ~((in_stream_data_0_ack_out == 1'b0) & (in_stream_data_0_vld_in == 1'b1)) & (in_stream_data_0_state == 2'd3)) | ((in_stream_data_0_ack_out == 1'b1) & (in_stream_data_0_state == 2'd1)) | ((in_stream_data_0_vld_in == 1'b1) & (in_stream_data_0_state == 2'd2)))) begin
            in_stream_data_0_state <= 2'd3;
        end else begin
            in_stream_data_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_stream_last_0_state <= 2'd0;
    end else begin
        if ((((in_stream_last_0_vld_in == 1'b0) & (in_stream_last_0_state == 2'd2)) | ((in_stream_last_0_vld_in == 1'b0) & (in_stream_last_0_ack_out == 1'b1) & (in_stream_last_0_state == 2'd3)))) begin
            in_stream_last_0_state <= 2'd2;
        end else if ((((in_stream_last_0_ack_out == 1'b0) & (in_stream_last_0_state == 2'd1)) | ((in_stream_last_0_ack_out == 1'b0) & (in_stream_last_0_vld_in == 1'b1) & (in_stream_last_0_state == 2'd3)))) begin
            in_stream_last_0_state <= 2'd1;
        end else if (((~((in_stream_last_0_vld_in == 1'b0) & (in_stream_last_0_ack_out == 1'b1)) & ~((in_stream_last_0_ack_out == 1'b0) & (in_stream_last_0_vld_in == 1'b1)) & (in_stream_last_0_state == 2'd3)) | ((in_stream_last_0_ack_out == 1'b1) & (in_stream_last_0_state == 2'd1)) | ((in_stream_last_0_vld_in == 1'b1) & (in_stream_last_0_state == 2'd2)))) begin
            in_stream_last_0_state <= 2'd3;
        end else begin
            in_stream_last_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        out_stream_data_1_sel_rd <= 1'b0;
    end else begin
        if (((out_stream_data_1_ack_out == 1'b1) & (out_stream_data_1_vld_out == 1'b1))) begin
            out_stream_data_1_sel_rd <= ~out_stream_data_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        out_stream_data_1_sel_wr <= 1'b0;
    end else begin
        if (((out_stream_data_1_ack_in == 1'b1) & (out_stream_data_1_vld_in == 1'b1))) begin
            out_stream_data_1_sel_wr <= ~out_stream_data_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        out_stream_data_1_state <= 2'd0;
    end else begin
        if ((((out_stream_data_1_vld_in == 1'b0) & (out_stream_data_1_state == 2'd2)) | ((out_stream_data_1_vld_in == 1'b0) & (out_stream_data_1_ack_out == 1'b1) & (out_stream_data_1_state == 2'd3)))) begin
            out_stream_data_1_state <= 2'd2;
        end else if ((((out_stream_data_1_ack_out == 1'b0) & (out_stream_data_1_state == 2'd1)) | ((out_stream_data_1_ack_out == 1'b0) & (out_stream_data_1_vld_in == 1'b1) & (out_stream_data_1_state == 2'd3)))) begin
            out_stream_data_1_state <= 2'd1;
        end else if (((~((out_stream_data_1_vld_in == 1'b0) & (out_stream_data_1_ack_out == 1'b1)) & ~((out_stream_data_1_ack_out == 1'b0) & (out_stream_data_1_vld_in == 1'b1)) & (out_stream_data_1_state == 2'd3)) | ((out_stream_data_1_ack_out == 1'b1) & (out_stream_data_1_state == 2'd1)) | ((out_stream_data_1_vld_in == 1'b1) & (out_stream_data_1_state == 2'd2)))) begin
            out_stream_data_1_state <= 2'd3;
        end else begin
            out_stream_data_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        out_stream_last_1_sel_rd <= 1'b0;
    end else begin
        if (((out_stream_last_1_ack_out == 1'b1) & (out_stream_last_1_vld_out == 1'b1))) begin
            out_stream_last_1_sel_rd <= ~out_stream_last_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        out_stream_last_1_sel_wr <= 1'b0;
    end else begin
        if (((out_stream_last_1_ack_in == 1'b1) & (out_stream_last_1_vld_in == 1'b1))) begin
            out_stream_last_1_sel_wr <= ~out_stream_last_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        out_stream_last_1_state <= 2'd0;
    end else begin
        if ((((out_stream_last_1_vld_in == 1'b0) & (out_stream_last_1_state == 2'd2)) | ((out_stream_last_1_vld_in == 1'b0) & (out_stream_last_1_ack_out == 1'b1) & (out_stream_last_1_state == 2'd3)))) begin
            out_stream_last_1_state <= 2'd2;
        end else if ((((out_stream_last_1_ack_out == 1'b0) & (out_stream_last_1_state == 2'd1)) | ((out_stream_last_1_ack_out == 1'b0) & (out_stream_last_1_vld_in == 1'b1) & (out_stream_last_1_state == 2'd3)))) begin
            out_stream_last_1_state <= 2'd1;
        end else if (((~((out_stream_last_1_vld_in == 1'b0) & (out_stream_last_1_ack_out == 1'b1)) & ~((out_stream_last_1_ack_out == 1'b0) & (out_stream_last_1_vld_in == 1'b1)) & (out_stream_last_1_state == 2'd3)) | ((out_stream_last_1_ack_out == 1'b1) & (out_stream_last_1_state == 2'd1)) | ((out_stream_last_1_vld_in == 1'b1) & (out_stream_last_1_state == 2'd2)))) begin
            out_stream_last_1_state <= 2'd3;
        end else begin
            out_stream_last_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state67) & (exitcond7_fu_2645_p2 == 1'd1))) begin
        batchIndex_reg_640 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state69) & (exitcond9_fu_2690_p2 == 1'd1))) begin
        batchIndex_reg_640 <= batchIndex_1_reg_4003;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state68) & (exitcond8_fu_2674_p2 == 1'd0))) begin
        i1_reg_652 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state72) & (exitcond10_fu_2765_p2 == 1'd1))) begin
        i1_reg_652 <= i_14_reg_4016;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state68) & (exitcond8_fu_2674_p2 == 1'd1))) begin
        i5_reg_696 <= 9'd0;
    end else if (((out_stream_data_1_ack_in == 1'b1) & (1'b1 == ap_CS_fsm_state98))) begin
        i5_reg_696 <= i_15_reg_4290;
    end
end

always @ (posedge ap_clk) begin
    if ((~((in_stream_data_0_vld_out == 1'b0) & (exitcond1_fu_733_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_733_p2 == 1'd1))) begin
        i_1_reg_571 <= 8'd64;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        i_1_reg_571 <= i_9_fu_1425_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((in_stream_data_0_vld_out == 1'b0) & (exitcond2_fu_1029_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state5) & (exitcond2_fu_1029_p2 == 1'd1))) begin
        i_2_reg_583 <= 11'd128;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        i_2_reg_583 <= i_8_fu_1727_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((in_stream_data_0_vld_out == 1'b0) & (exitcond3_fu_1431_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state55) & (exitcond3_fu_1431_p2 == 1'd1))) begin
        i_3_reg_595 <= 12'd1152;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        i_3_reg_595 <= i_10_fu_2029_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((in_stream_data_0_vld_out == 1'b0) & (exitcond4_fu_1733_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state58) & (exitcond4_fu_1733_p2 == 1'd1))) begin
        i_4_reg_607 <= 12'd2176;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        i_4_reg_607 <= i_11_reg_3868;
    end
end

always @ (posedge ap_clk) begin
    if ((~((in_stream_data_0_vld_out == 1'b0) & (exitcond5_fu_2039_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state61) & (exitcond5_fu_2039_p2 == 1'd1))) begin
        i_5_reg_618 <= 12'd2400;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        i_5_reg_618 <= i_12_reg_3937;
    end
end

always @ (posedge ap_clk) begin
    if ((~((in_stream_data_0_vld_out == 1'b0) & (exitcond6_fu_2344_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state64) & (exitcond6_fu_2344_p2 == 1'd1))) begin
        i_6_reg_629 <= 9'd0;
    end else if (((1'b1 == ap_CS_fsm_state67) & (exitcond7_fu_2645_p2 == 1'd0))) begin
        i_6_reg_629 <= i_13_fu_2651_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        i_reg_559 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        i_reg_559 <= i_7_reg_3544;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state76) & (exitcond11_fu_2957_p2 == 1'd1))) begin
        j2_reg_663 <= j_reg_4071;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        j2_reg_663 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        k1_reg_685 <= k0_reg_4252;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        k1_reg_685 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state84) & (exitcond12_fu_3184_p2 == 1'd1))) begin
        k3_reg_674 <= k_reg_4167;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        k3_reg_674 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state82))) begin
        reg_719 <= dataOut_V_q1;
    end else if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state70))) begin
        reg_719 <= dataOut_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        reg_728 <= dataOut_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        reg_728 <= dataOut_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        batchIndex_1_reg_4003 <= batchIndex_1_fu_2680_p2;
        batchIndex_cast1_reg_3990[5 : 0] <= batchIndex_cast1_fu_2666_p1[5 : 0];
        batchIndex_cast2_reg_3995[5 : 0] <= batchIndex_cast2_fu_2670_p1[5 : 0];
        batchIndex_cast_reg_3985[5 : 0] <= batchIndex_cast_fu_2662_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        batch_a_mat_V_load_reg_4114 <= batch_a_mat_V_q0;
        dataOut_V_addr_3_reg_4108 <= tmp_140_fu_2838_p1;
        dataOut_V_addr_4_reg_4119[4 : 0] <= tmp_148_fu_2843_p1[4 : 0];
        tmp_138_reg_4101 <= tmp_138_fu_2827_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        batch_x_mat_V_load_reg_4267 <= batch_x_mat_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        batch_z_mat_V_load_1_reg_4192 <= batch_z_mat_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state69) & (exitcond9_fu_2690_p2 == 1'd0))) begin
        dataOut_V_addr_2_reg_4031[1 : 0] <= tmp_128_fu_2710_p1[1 : 0];
        tmp_204_reg_4021 <= tmp_204_fu_2715_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        dataOut_V_addr_5_reg_4214 <= tmp_163_fu_3055_p1;
        dataOut_V_addr_6_reg_4219 <= tmp_171_fu_3060_p1;
        tmp_176_reg_4224 <= tmp_176_fu_3075_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state89)) begin
        dataOut_V_addr_7_reg_4277 <= tmp_180_fu_3233_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        dataOut_last_load_reg_4311 <= dataOut_last_q0;
        p_Result_15_reg_4305 <= dataOut_V_q1[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if ((~((in_stream_data_0_vld_out == 1'b0) & (exitcond2_fu_1029_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state5) & (exitcond2_fu_1029_p2 == 1'd0))) begin
        exp_tmp_V_1_reg_3619 <= {{ireg_V_1_fu_1041_p1[62:52]}};
        p_Result_5_reg_3614 <= ireg_V_1_fu_1041_p1[32'd63];
        tmp_10_reg_3608[7 : 0] <= tmp_10_fu_1035_p1[7 : 0];
        tmp_13_reg_3629 <= tmp_13_fu_1071_p2;
        tmp_49_reg_3624 <= tmp_49_fu_1067_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((in_stream_data_0_vld_out == 1'b0) & (exitcond3_fu_1431_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state55) & (exitcond3_fu_1431_p2 == 1'd0))) begin
        exp_tmp_V_2_reg_3719 <= {{ireg_V_2_fu_1437_p1[62:52]}};
        p_Result_7_reg_3714 <= ireg_V_2_fu_1437_p1[32'd63];
        tmp_28_reg_3729 <= tmp_28_fu_1467_p2;
        tmp_79_reg_3724 <= tmp_79_fu_1463_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((in_stream_data_0_vld_out == 1'b0) & (exitcond4_fu_1733_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state58) & (exitcond4_fu_1733_p2 == 1'd0))) begin
        exp_tmp_V_3_reg_3783 <= {{ireg_V_3_fu_1739_p1[62:52]}};
        p_Result_9_reg_3778 <= ireg_V_3_fu_1739_p1[32'd63];
        tmp_111_reg_3788 <= tmp_111_fu_1765_p1;
        tmp_48_reg_3793 <= tmp_48_fu_1769_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((in_stream_data_0_vld_out == 1'b0) & (exitcond5_fu_2039_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state61) & (exitcond5_fu_2039_p2 == 1'd0))) begin
        exp_tmp_V_4_reg_3852 <= {{ireg_V_4_fu_2045_p1[62:52]}};
        i_11_reg_3868 <= i_11_fu_2081_p2;
        p_Result_11_reg_3847 <= ireg_V_4_fu_2045_p1[32'd63];
        tmp_153_reg_3857 <= tmp_153_fu_2071_p1;
        tmp_75_reg_3862 <= tmp_75_fu_2075_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((in_stream_data_0_vld_out == 1'b0) & (exitcond6_fu_2344_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state64) & (exitcond6_fu_2344_p2 == 1'd0))) begin
        exp_tmp_V_5_reg_3921 <= {{ireg_V_5_fu_2350_p1[62:52]}};
        i_12_reg_3937 <= i_12_fu_2386_p2;
        p_Result_13_reg_3916 <= ireg_V_5_fu_2350_p1[32'd63];
        tmp_174_reg_3926 <= tmp_174_fu_2376_p1;
        tmp_95_reg_3931 <= tmp_95_fu_2380_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((in_stream_data_0_vld_out == 1'b0) & (exitcond1_fu_733_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_733_p2 == 1'd0))) begin
        exp_tmp_V_reg_3554 <= {{ireg_V_fu_745_p1[62:52]}};
        p_Result_3_reg_3549 <= ireg_V_fu_745_p1[32'd63];
        tmp_21_reg_3559 <= tmp_21_fu_771_p1;
        tmp_8_reg_3564 <= tmp_8_fu_775_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        i1_cast_reg_4008[1 : 0] <= i1_cast_fu_2686_p1[1 : 0];
        i_14_reg_4016 <= i_14_fu_2696_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out_stream_last_1_ack_in == 1'b0) | (out_stream_data_1_ack_in == 1'b0)) & (1'b1 == ap_CS_fsm_state92))) begin
        i_15_reg_4290 <= i_15_fu_3267_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((in_stream_data_0_vld_out == 1'b0) & (exitcond5_fu_2039_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state61))) begin
        i_4_cast_reg_3839[11 : 0] <= i_4_cast_fu_2035_p1[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((~((in_stream_data_0_vld_out == 1'b0) & (exitcond6_fu_2344_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state64))) begin
        i_5_cast_reg_3908[11 : 0] <= i_5_cast_fu_2340_p1[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((~((in_stream_data_0_vld_out == 1'b0) & (exitcond1_fu_733_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state2))) begin
        i_7_reg_3544 <= i_7_fu_739_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        icmp2_reg_3692 <= icmp2_fu_1397_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((in_stream_data_0_load_A == 1'b1)) begin
        in_stream_data_0_payload_A <= in_stream_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((in_stream_data_0_load_B == 1'b1)) begin
        in_stream_data_0_payload_B <= in_stream_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        j2_cast1_reg_4063[4 : 0] <= j2_cast1_fu_2761_p1[4 : 0];
        j2_cast_reg_4058[4 : 0] <= j2_cast_fu_2757_p1[4 : 0];
        j_reg_4071 <= j_fu_2771_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        k0_reg_4252 <= k0_fu_3190_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        k3_cast2_reg_4158[4 : 0] <= k3_cast2_fu_2949_p1[4 : 0];
        k_reg_4167 <= k_fu_2963_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state94)) begin
        l_reg_4329 <= l_fu_3316_p3;
        tmp_110_reg_4316 <= tmp_110_fu_3287_p2;
        tmp_203_reg_4334 <= tmp_203_fu_3324_p1;
        tmp_V_4_reg_4321 <= tmp_V_4_fu_3299_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state96) & (tmp_110_reg_4316 == 1'd0))) begin
        m_reg_4355 <= {{m_2_fu_3466_p2[31:1]}};
        tmp_202_reg_4360 <= m_2_fu_3466_p2[32'd25];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        man_V_11_reg_3799 <= man_V_11_fu_1795_p3;
        newSel13_reg_3824 <= newSel13_fu_1956_p3;
        or_cond11_reg_3829 <= or_cond11_fu_1970_p2;
        or_cond9_reg_3819 <= or_cond9_fu_1950_p2;
        sel_tmp35_reg_3814 <= sel_tmp35_fu_1944_p2;
        sh_amt_3_reg_3804 <= sh_amt_3_fu_1826_p3;
        tmp_112_reg_3809 <= tmp_112_fu_1840_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        man_V_14_reg_3873 <= man_V_14_fu_2107_p3;
        newSel17_reg_3898 <= newSel17_fu_2268_p3;
        or_cond12_reg_3893 <= or_cond12_fu_2262_p2;
        or_cond14_reg_3903 <= or_cond14_fu_2282_p2;
        sel_tmp44_reg_3888 <= sel_tmp44_fu_2256_p2;
        sh_amt_4_reg_3878 <= sh_amt_4_fu_2138_p3;
        tmp_154_reg_3883 <= tmp_154_fu_2152_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        man_V_17_reg_3942 <= man_V_17_fu_2412_p3;
        newSel21_reg_3967 <= newSel21_fu_2573_p3;
        or_cond15_reg_3962 <= or_cond15_fu_2567_p2;
        or_cond17_reg_3972 <= or_cond17_fu_2587_p2;
        sel_tmp53_reg_3957 <= sel_tmp53_fu_2561_p2;
        sh_amt_5_reg_3947 <= sh_amt_5_fu_2443_p3;
        tmp_175_reg_3952 <= tmp_175_fu_2457_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        man_V_2_reg_3570 <= man_V_2_fu_801_p3;
        newSel1_reg_3595 <= newSel1_fu_962_p3;
        or_cond2_reg_3600 <= or_cond2_fu_976_p2;
        or_cond_reg_3590 <= or_cond_fu_956_p2;
        sel_tmp4_reg_3585 <= sel_tmp4_fu_950_p2;
        sh_amt_reg_3575 <= sh_amt_fu_832_p3;
        tmp_22_reg_3580 <= tmp_22_fu_846_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        man_V_5_reg_3645 <= man_V_5_fu_1097_p3;
        newSel5_reg_3670 <= newSel5_fu_1258_p3;
        or_cond3_reg_3665 <= or_cond3_fu_1252_p2;
        or_cond5_reg_3675 <= or_cond5_fu_1272_p2;
        sel_tmp17_reg_3660 <= sel_tmp17_fu_1246_p2;
        sh_amt_1_reg_3650 <= sh_amt_1_fu_1128_p3;
        tmp_42_reg_3680 <= {{ret_V_fu_1286_p2[32:5]}};
        tmp_50_reg_3655 <= tmp_50_fu_1142_p1;
        tmp_64_reg_3687 <= ret_V_fu_1286_p2[32'd32];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        man_V_8_reg_3735 <= man_V_8_fu_1493_p3;
        newSel9_reg_3760 <= newSel9_fu_1654_p3;
        or_cond6_reg_3755 <= or_cond6_fu_1648_p2;
        or_cond8_reg_3765 <= or_cond8_fu_1668_p2;
        sel_tmp26_reg_3750 <= sel_tmp26_fu_1642_p2;
        sh_amt_2_reg_3740 <= sh_amt_2_fu_1524_p3;
        tmp_87_reg_3745 <= tmp_87_fu_1538_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((out_stream_data_1_load_A == 1'b1)) begin
        out_stream_data_1_payload_A <= p_s_fu_3533_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((out_stream_data_1_load_B == 1'b1)) begin
        out_stream_data_1_payload_B <= p_s_fu_3533_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((out_stream_last_1_load_A == 1'b1)) begin
        out_stream_last_1_payload_A <= dataOut_last_load_reg_4311;
    end
end

always @ (posedge ap_clk) begin
    if ((out_stream_last_1_load_B == 1'b1)) begin
        out_stream_last_1_payload_B <= dataOut_last_load_reg_4311;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        p_Val2_13_reg_4036 <= smooth_grad_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        p_Val2_18_reg_4132 <= {{r_V_5_fu_2859_p2[47:16]}};
        r_V_1_reg_4125 <= r_V_1_fu_2851_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        r_V_2_reg_4282 <= grp_fu_3228_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        r_V_3_reg_4229 <= grp_fu_3033_p2;
        r_V_4_cast_reg_4239 <= r_V_4_cast_fu_3096_p2;
        r_V_s_reg_4234 <= grp_fu_3041_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        r_V_6_cast_reg_4137 <= r_V_6_cast_fu_2921_p1;
        tmp_151_reg_4147 <= tmp_151_fu_2935_p3;
        tmp_152_reg_4152 <= tmp_152_fu_2942_p3;
        tmp_157_cast_reg_4142[7 : 4] <= tmp_157_cast_fu_2931_p1[7 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        r_V_cast_reg_4048 <= r_V_cast_fu_2747_p1;
        r_V_reg_4043 <= r_V_fu_2744_p1;
        tmp_133_reg_4053[4] <= tmp_133_fu_2750_p3[4];
    end
end

always @ (posedge ap_clk) begin
    if (((~((in_stream_data_0_vld_out == 1'b0) & (exitcond6_fu_2344_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state64) & (exitcond6_fu_2344_p2 == 1'd0)) | (~((in_stream_data_0_vld_out == 1'b0) & (exitcond5_fu_2039_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state61) & (exitcond5_fu_2039_p2 == 1'd0)) | (~((in_stream_data_0_vld_out == 1'b0) & (exitcond4_fu_1733_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state58) & (exitcond4_fu_1733_p2 == 1'd0)) | (~((in_stream_data_0_vld_out == 1'b0) & (exitcond3_fu_1431_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state55) & (exitcond3_fu_1431_p2 == 1'd0)) | (~((in_stream_data_0_vld_out == 1'b0) & (exitcond2_fu_1029_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state5) & (exitcond2_fu_1029_p2 == 1'd0)) | (~((in_stream_data_0_vld_out == 1'b0) & (exitcond1_fu_733_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_733_p2 == 1'd0)))) begin
        reg_715 <= in_stream_data_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state73))) begin
        reg_724 <= batch_w_mat_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state95) & (tmp_110_reg_4316 == 1'd0))) begin
        tmp_113_reg_4339 <= tmp_113_fu_3328_p2;
        tmp_117_reg_4345[0] <= tmp_117_fu_3425_p3[0];
        tmp_120_reg_4350 <= tmp_120_fu_3433_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state72) & (exitcond10_fu_2765_p2 == 1'd0))) begin
        tmp_147_reg_4091 <= tmp_147_fu_2822_p2;
        tmp_205_reg_4076 <= tmp_205_fu_2777_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        tmp_161_reg_4198 <= tmp_161_fu_3024_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state76) & (exitcond11_fu_2957_p2 == 1'd0))) begin
        tmp_170_reg_4187 <= tmp_170_fu_3019_p2;
        tmp_207_reg_4172 <= tmp_207_fu_2969_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state84) & (exitcond12_fu_3184_p2 == 1'd0))) begin
        tmp_179_reg_4257 <= tmp_179_fu_3202_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        tmp_185_cast_reg_4244 <= tmp_185_cast_fu_3177_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        batch_a_mat_V_address0 = tmp_137_fu_2796_p1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        batch_a_mat_V_address0 = tmp_24_fu_1680_p1;
    end else begin
        batch_a_mat_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state57))) begin
        batch_a_mat_V_ce0 = 1'b1;
    end else begin
        batch_a_mat_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        batch_a_mat_V_we0 = 1'b1;
    end else begin
        batch_a_mat_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        batch_w_mat_V_address0 = tmp_166_fu_3004_p1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        batch_w_mat_V_address0 = tmp_143_fu_2817_p1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        batch_w_mat_V_address0 = tmp_91_fu_2598_p1;
    end else begin
        batch_w_mat_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state66))) begin
        batch_w_mat_V_ce0 = 1'b1;
    end else begin
        batch_w_mat_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        batch_w_mat_V_we0 = 1'b1;
    end else begin
        batch_w_mat_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        batch_x_mat_V_address0 = tmp_184_fu_3220_p1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        batch_x_mat_V_address0 = tmp_71_fu_2293_p1;
    end else begin
        batch_x_mat_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state63))) begin
        batch_x_mat_V_ce0 = 1'b1;
    end else begin
        batch_x_mat_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        batch_x_mat_V_we0 = 1'b1;
    end else begin
        batch_x_mat_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        batch_y_mat_V_address0 = tmp_6_fu_1316_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        batch_y_mat_V_address0 = tmp_10_fu_1035_p1;
    end else begin
        batch_y_mat_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (~((in_stream_data_0_vld_out == 1'b0) & (exitcond2_fu_1029_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state5)))) begin
        batch_y_mat_V_ce0 = 1'b1;
    end else begin
        batch_y_mat_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        batch_y_mat_V_we0 = 1'b1;
    end else begin
        batch_y_mat_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        batch_z_mat_V_address0 = tmp_159_fu_2986_p1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        batch_z_mat_V_address0 = tmp_137_fu_2796_p1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        batch_z_mat_V_address0 = tmp_44_fu_1982_p1;
    end else begin
        batch_z_mat_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state60))) begin
        batch_z_mat_V_ce0 = 1'b1;
    end else begin
        batch_z_mat_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        batch_z_mat_V_we0 = 1'b1;
    end else begin
        batch_z_mat_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        dataOut_V_address0 = dataOut_V_addr_6_reg_4219;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        dataOut_V_address0 = tmp_171_fu_3060_p1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        dataOut_V_address0 = dataOut_V_addr_4_reg_4119;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        dataOut_V_address0 = tmp_140_fu_2838_p1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        dataOut_V_address0 = dataOut_V_addr_2_reg_4031;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        dataOut_V_address0 = tmp_128_fu_2710_p1;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        dataOut_V_address0 = tmp_108_fu_2657_p1;
    end else begin
        dataOut_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        dataOut_V_address1 = tmp_109_fu_3273_p1;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        dataOut_V_address1 = dataOut_V_addr_7_reg_4277;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        dataOut_V_address1 = tmp_180_fu_3233_p1;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        dataOut_V_address1 = dataOut_V_addr_5_reg_4214;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        dataOut_V_address1 = tmp_163_fu_3055_p1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        dataOut_V_address1 = dataOut_V_addr_3_reg_4108;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        dataOut_V_address1 = tmp_148_fu_2843_p1;
    end else begin
        dataOut_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state73))) begin
        dataOut_V_ce0 = 1'b1;
    end else begin
        dataOut_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state91) | (~((out_stream_last_1_ack_in == 1'b0) | (out_stream_data_1_ack_in == 1'b0)) & (1'b1 == ap_CS_fsm_state92)))) begin
        dataOut_V_ce1 = 1'b1;
    end else begin
        dataOut_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        dataOut_V_d0 = {{ret_V_7_fu_3160_p2[63:32]}};
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        dataOut_V_d0 = tmp_149_fu_2915_p2;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        dataOut_V_d0 = tmp_132_fu_2738_p2;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        dataOut_V_d0 = 32'd0;
    end else begin
        dataOut_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        dataOut_V_d1 = {{ret_V_8_fu_3245_p2[79:48]}};
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        dataOut_V_d1 = {{ret_V_6_fu_3131_p2[63:32]}};
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        dataOut_V_d1 = {{ret_V_5_fu_2898_p2[47:16]}};
    end else begin
        dataOut_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state71) | ((1'b1 == ap_CS_fsm_state67) & (exitcond7_fu_2645_p2 == 1'd0)))) begin
        dataOut_V_we0 = 1'b1;
    end else begin
        dataOut_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state91))) begin
        dataOut_V_we1 = 1'b1;
    end else begin
        dataOut_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((out_stream_last_1_ack_in == 1'b0) | (out_stream_data_1_ack_in == 1'b0)) & (1'b1 == ap_CS_fsm_state92))) begin
        dataOut_last_ce0 = 1'b1;
    end else begin
        dataOut_last_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp2_fu_1397_p2 == 1'd0))) begin
        grp_fu_1414_ap_start = 1'b1;
    end else begin
        grp_fu_1414_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state64) & (exitcond6_fu_2344_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state61) & (exitcond5_fu_2039_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state58) & (exitcond4_fu_1733_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state55) & (exitcond3_fu_1431_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state5) & (exitcond2_fu_1029_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_733_p2 == 1'd0)))) begin
        in_stream_TDATA_blk_n = in_stream_data_0_state[1'd0];
    end else begin
        in_stream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((in_stream_data_0_vld_out == 1'b0) & (exitcond6_fu_2344_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state64) & (exitcond6_fu_2344_p2 == 1'd0)) | (~((in_stream_data_0_vld_out == 1'b0) & (exitcond5_fu_2039_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state61) & (exitcond5_fu_2039_p2 == 1'd0)) | (~((in_stream_data_0_vld_out == 1'b0) & (exitcond4_fu_1733_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state58) & (exitcond4_fu_1733_p2 == 1'd0)) | (~((in_stream_data_0_vld_out == 1'b0) & (exitcond3_fu_1431_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state55) & (exitcond3_fu_1431_p2 == 1'd0)) | (~((in_stream_data_0_vld_out == 1'b0) & (exitcond2_fu_1029_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state5) & (exitcond2_fu_1029_p2 == 1'd0)) | (~((in_stream_data_0_vld_out == 1'b0) & (exitcond1_fu_733_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_733_p2 == 1'd0)))) begin
        in_stream_data_0_ack_out = 1'b1;
    end else begin
        in_stream_data_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((in_stream_data_0_sel == 1'b1)) begin
        in_stream_data_0_data_out = in_stream_data_0_payload_B;
    end else begin
        in_stream_data_0_data_out = in_stream_data_0_payload_A;
    end
end

always @ (*) begin
    if (((~((in_stream_data_0_vld_out == 1'b0) & (exitcond6_fu_2344_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state64) & (exitcond6_fu_2344_p2 == 1'd0)) | (~((in_stream_data_0_vld_out == 1'b0) & (exitcond5_fu_2039_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state61) & (exitcond5_fu_2039_p2 == 1'd0)) | (~((in_stream_data_0_vld_out == 1'b0) & (exitcond4_fu_1733_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state58) & (exitcond4_fu_1733_p2 == 1'd0)) | (~((in_stream_data_0_vld_out == 1'b0) & (exitcond3_fu_1431_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state55) & (exitcond3_fu_1431_p2 == 1'd0)) | (~((in_stream_data_0_vld_out == 1'b0) & (exitcond2_fu_1029_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state5) & (exitcond2_fu_1029_p2 == 1'd0)) | (~((in_stream_data_0_vld_out == 1'b0) & (exitcond1_fu_733_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_733_p2 == 1'd0)))) begin
        in_stream_last_0_ack_out = 1'b1;
    end else begin
        in_stream_last_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        nn_out_mat_V_address0 = tmp_10_fu_1035_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        nn_out_mat_V_address0 = tmp_fu_982_p1;
    end else begin
        nn_out_mat_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (~((in_stream_data_0_vld_out == 1'b0) & (exitcond2_fu_1029_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state5)))) begin
        nn_out_mat_V_ce0 = 1'b1;
    end else begin
        nn_out_mat_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        nn_out_mat_V_we0 = 1'b1;
    end else begin
        nn_out_mat_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state97))) begin
        out_stream_TDATA_blk_n = out_stream_data_1_state[1'd1];
    end else begin
        out_stream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((out_stream_data_1_sel == 1'b1)) begin
        out_stream_data_1_data_out = out_stream_data_1_payload_B;
    end else begin
        out_stream_data_1_data_out = out_stream_data_1_payload_A;
    end
end

always @ (*) begin
    if (((out_stream_data_1_ack_in == 1'b1) & (1'b1 == ap_CS_fsm_state97))) begin
        out_stream_data_1_vld_in = 1'b1;
    end else begin
        out_stream_data_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((out_stream_last_1_sel == 1'b1)) begin
        out_stream_last_1_data_out = out_stream_last_1_payload_B;
    end else begin
        out_stream_last_1_data_out = out_stream_last_1_payload_A;
    end
end

always @ (*) begin
    if (((out_stream_data_1_ack_in == 1'b1) & (1'b1 == ap_CS_fsm_state97))) begin
        out_stream_last_1_vld_in = 1'b1;
    end else begin
        out_stream_last_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        smooth_grad_V_address0 = tmp_131_fu_2733_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        smooth_grad_V_address0 = smooth_grad_V_addr_1_gep_fu_376_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        smooth_grad_V_address0 = tmp_10_reg_3608;
    end else begin
        smooth_grad_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state7))) begin
        smooth_grad_V_ce0 = 1'b1;
    end else begin
        smooth_grad_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        smooth_grad_V_d0 = tmp_69_fu_1420_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        smooth_grad_V_d0 = abs_dif_V_3_fu_1363_p1;
    end else begin
        smooth_grad_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state54) & (icmp2_reg_3692 == 1'd0)) | ((1'b1 == ap_CS_fsm_state7) & (icmp2_fu_1397_p2 == 1'd1)))) begin
        smooth_grad_V_we0 = 1'b1;
    end else begin
        smooth_grad_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            if ((~((in_stream_data_0_vld_out == 1'b0) & (exitcond1_fu_733_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_733_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if ((~((in_stream_data_0_vld_out == 1'b0) & (exitcond1_fu_733_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_733_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state5 : begin
            if ((~((in_stream_data_0_vld_out == 1'b0) & (exitcond2_fu_1029_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state5) & (exitcond2_fu_1029_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else if ((~((in_stream_data_0_vld_out == 1'b0) & (exitcond2_fu_1029_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state5) & (exitcond2_fu_1029_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (icmp2_fu_1397_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state55 : begin
            if ((~((in_stream_data_0_vld_out == 1'b0) & (exitcond3_fu_1431_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state55) & (exitcond3_fu_1431_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end else if ((~((in_stream_data_0_vld_out == 1'b0) & (exitcond3_fu_1431_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state55) & (exitcond3_fu_1431_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state58 : begin
            if ((~((in_stream_data_0_vld_out == 1'b0) & (exitcond4_fu_1733_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state58) & (exitcond4_fu_1733_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else if ((~((in_stream_data_0_vld_out == 1'b0) & (exitcond4_fu_1733_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state58) & (exitcond4_fu_1733_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state61 : begin
            if ((~((in_stream_data_0_vld_out == 1'b0) & (exitcond5_fu_2039_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state61) & (exitcond5_fu_2039_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end else if ((~((in_stream_data_0_vld_out == 1'b0) & (exitcond5_fu_2039_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state61) & (exitcond5_fu_2039_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state64 : begin
            if ((~((in_stream_data_0_vld_out == 1'b0) & (exitcond6_fu_2344_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state64) & (exitcond6_fu_2344_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end else if ((~((in_stream_data_0_vld_out == 1'b0) & (exitcond6_fu_2344_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state64) & (exitcond6_fu_2344_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state67 : begin
            if (((1'b1 == ap_CS_fsm_state67) & (exitcond7_fu_2645_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end
        end
        ap_ST_fsm_state68 : begin
            if (((1'b1 == ap_CS_fsm_state68) & (exitcond8_fu_2674_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state92;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end
        end
        ap_ST_fsm_state69 : begin
            if (((1'b1 == ap_CS_fsm_state69) & (exitcond9_fu_2690_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            if (((1'b1 == ap_CS_fsm_state72) & (exitcond10_fu_2765_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            if (((1'b1 == ap_CS_fsm_state76) & (exitcond11_fu_2957_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            if (((1'b1 == ap_CS_fsm_state84) & (exitcond12_fu_3184_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state85;
            end
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state92 : begin
            if ((~((out_stream_last_1_ack_in == 1'b0) | (out_stream_data_1_ack_in == 1'b0)) & (out_stream_last_1_state[1'd0] == 1'b0) & (out_stream_data_1_state[1'd0] == 1'b0) & (1'b1 == ap_CS_fsm_state92) & (exitcond_fu_3261_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~((out_stream_last_1_ack_in == 1'b0) | (out_stream_data_1_ack_in == 1'b0)) & (1'b1 == ap_CS_fsm_state92) & (exitcond_fu_3261_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state93;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state92;
            end
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            if (((out_stream_data_1_ack_in == 1'b1) & (1'b1 == ap_CS_fsm_state97))) begin
                ap_NS_fsm = ap_ST_fsm_state98;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state97;
            end
        end
        ap_ST_fsm_state98 : begin
            if (((out_stream_data_1_ack_in == 1'b1) & (1'b1 == ap_CS_fsm_state98))) begin
                ap_NS_fsm = ap_ST_fsm_state92;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state98;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_1_fu_1104_p2 = (12'd1075 - tmp_11_fu_1077_p1);

assign F2_2_fu_1500_p2 = (12'd1075 - tmp_26_fu_1473_p1);

assign F2_3_fu_1802_p2 = (12'd1075 - tmp_46_fu_1775_p1);

assign F2_4_fu_2114_p2 = (12'd1075 - tmp_73_fu_2087_p1);

assign F2_5_fu_2419_p2 = (12'd1075 - tmp_93_fu_2392_p1);

assign F2_fu_808_p2 = (12'd1075 - tmp_3_fu_781_p1);

assign a_fu_3386_p2 = (tmp_114_fu_3380_p2 & icmp7_fu_3349_p2);

assign abs_dif_V_1_cast_fu_1383_p1 = abs_dif_V_1_fu_1376_p3;

assign abs_dif_V_1_fu_1376_p3 = ((tmp_64_reg_3687[0:0] === 1'b1) ? abs_dif_V_fu_1370_p2 : abs_dif_V_3_cast_fu_1367_p1);

assign abs_dif_V_3_cast_fu_1367_p1 = tmp_42_reg_3680;

assign abs_dif_V_3_fu_1363_p1 = tmp_42_reg_3680;

assign abs_dif_V_fu_1370_p2 = ($signed(29'd0) - $signed(abs_dif_V_3_cast_fu_1367_p1));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

always @ (*) begin
    ap_block_state2 = ((in_stream_data_0_vld_out == 1'b0) & (exitcond1_fu_733_p2 == 1'd0));
end

always @ (*) begin
    ap_block_state5 = ((in_stream_data_0_vld_out == 1'b0) & (exitcond2_fu_1029_p2 == 1'd0));
end

always @ (*) begin
    ap_block_state55 = ((in_stream_data_0_vld_out == 1'b0) & (exitcond3_fu_1431_p2 == 1'd0));
end

always @ (*) begin
    ap_block_state58 = ((in_stream_data_0_vld_out == 1'b0) & (exitcond4_fu_1733_p2 == 1'd0));
end

always @ (*) begin
    ap_block_state61 = ((in_stream_data_0_vld_out == 1'b0) & (exitcond5_fu_2039_p2 == 1'd0));
end

always @ (*) begin
    ap_block_state64 = ((in_stream_data_0_vld_out == 1'b0) & (exitcond6_fu_2344_p2 == 1'd0));
end

always @ (*) begin
    ap_block_state92 = ((out_stream_last_1_ack_in == 1'b0) | (out_stream_data_1_ack_in == 1'b0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign batchIndex_1_fu_2680_p2 = (batchIndex_reg_640 + 6'd1);

assign batchIndex_cast1_fu_2666_p1 = batchIndex_reg_640;

assign batchIndex_cast2_fu_2670_p1 = batchIndex_reg_640;

assign batchIndex_cast_fu_2662_p1 = batchIndex_reg_640;

assign batch_a_mat_V_d0 = ((or_cond8_reg_3765[0:0] === 1'b1) ? newSel10_fu_1713_p3 : 32'd0);

assign batch_w_mat_V_d0 = ((or_cond17_reg_3972[0:0] === 1'b1) ? newSel22_fu_2631_p3 : 32'd0);

assign batch_x_mat_V_d0 = ((or_cond14_reg_3903[0:0] === 1'b1) ? newSel18_fu_2326_p3 : 32'd0);

assign batch_y_mat_V_d0 = ((or_cond5_reg_3675[0:0] === 1'b1) ? newSel6_fu_1349_p3 : 32'd0);

assign batch_z_mat_V_d0 = ((or_cond11_reg_3829[0:0] === 1'b1) ? newSel14_fu_2015_p3 : 32'd0);

assign dataOut_last_address0 = tmp_109_fu_3273_p1;

assign exitcond10_fu_2765_p2 = ((j2_reg_663 == 5'd16) ? 1'b1 : 1'b0);

assign exitcond11_fu_2957_p2 = ((k3_reg_674 == 5'd16) ? 1'b1 : 1'b0);

assign exitcond12_fu_3184_p2 = ((k1_reg_685 == 3'd7) ? 1'b1 : 1'b0);

assign exitcond1_fu_733_p2 = ((i_reg_559 == 7'd64) ? 1'b1 : 1'b0);

assign exitcond2_fu_1029_p2 = ((i_1_reg_571 == 8'd128) ? 1'b1 : 1'b0);

assign exitcond3_fu_1431_p2 = ((i_2_reg_583 == 11'd1152) ? 1'b1 : 1'b0);

assign exitcond4_fu_1733_p2 = ((i_3_reg_595 == 12'd2176) ? 1'b1 : 1'b0);

assign exitcond5_fu_2039_p2 = ((i_4_reg_607 == 12'd2400) ? 1'b1 : 1'b0);

assign exitcond6_fu_2344_p2 = ((i_5_reg_618 == 12'd2688) ? 1'b1 : 1'b0);

assign exitcond7_fu_2645_p2 = ((i_6_reg_629 == 9'd434) ? 1'b1 : 1'b0);

assign exitcond8_fu_2674_p2 = ((batchIndex_reg_640 == 6'd32) ? 1'b1 : 1'b0);

assign exitcond9_fu_2690_p2 = ((i1_reg_652 == 2'd2) ? 1'b1 : 1'b0);

assign exitcond_fu_3261_p2 = ((i5_reg_696 == 9'd434) ? 1'b1 : 1'b0);

assign grp_fu_1414_p0 = {{tmp_42_reg_3680}, {16'd0}};

assign grp_fu_1414_p1 = grp_fu_1414_p10;

assign grp_fu_1414_p10 = $unsigned(abs_dif_V_1_cast_fu_1383_p1);

assign grp_fu_3033_p0 = r_V_6_cast_reg_4137;

assign i1_cast_fu_2686_p1 = i1_reg_652;

assign i_10_fu_2029_p2 = (12'd1 + i_3_reg_595);

assign i_11_fu_2081_p2 = (12'd1 + i_4_reg_607);

assign i_12_fu_2386_p2 = (12'd1 + i_5_reg_618);

assign i_13_fu_2651_p2 = (i_6_reg_629 + 9'd1);

assign i_14_fu_2696_p2 = (i1_reg_652 + 2'd1);

assign i_15_fu_3267_p2 = (i5_reg_696 + 9'd1);

assign i_4_cast_fu_2035_p1 = i_4_reg_607;

assign i_5_cast_fu_2340_p1 = i_5_reg_618;

assign i_7_fu_739_p2 = (i_reg_559 + 7'd1);

assign i_8_fu_1727_p2 = (11'd1 + i_2_reg_583);

assign i_9_fu_1425_p2 = (i_1_reg_571 + 8'd1);

assign icmp1_fu_1162_p2 = ((tmp_52_fu_1152_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp2_fu_1397_p2 = (($signed(tmp_65_fu_1387_p4) < $signed(13'd1)) ? 1'b1 : 1'b0);

assign icmp3_fu_1558_p2 = ((tmp_89_fu_1548_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp4_fu_1860_p2 = ((tmp_118_fu_1850_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp5_fu_2172_p2 = ((tmp_156_fu_2162_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp6_fu_2477_p2 = ((tmp_182_fu_2467_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp7_fu_3349_p2 = (($signed(tmp_195_fu_3339_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_fu_866_p2 = ((tmp_29_fu_856_p4 == 7'd0) ? 1'b1 : 1'b0);

assign in_stream_TREADY = in_stream_last_0_state[1'd1];

assign in_stream_data_0_ack_in = in_stream_data_0_state[1'd1];

assign in_stream_data_0_load_A = (in_stream_data_0_state_cmp_full & ~in_stream_data_0_sel_wr);

assign in_stream_data_0_load_B = (in_stream_data_0_state_cmp_full & in_stream_data_0_sel_wr);

assign in_stream_data_0_sel = in_stream_data_0_sel_rd;

assign in_stream_data_0_state_cmp_full = ((in_stream_data_0_state != 2'd1) ? 1'b1 : 1'b0);

assign in_stream_data_0_vld_in = in_stream_TVALID;

assign in_stream_data_0_vld_out = in_stream_data_0_state[1'd0];

assign in_stream_last_0_vld_in = in_stream_TVALID;

assign ireg_V_1_fu_1041_p1 = grp_fu_707_p1;

assign ireg_V_1_to_int_fu_1168_p1 = reg_715;

assign ireg_V_2_fu_1437_p1 = grp_fu_707_p1;

assign ireg_V_2_to_int_fu_1564_p1 = reg_715;

assign ireg_V_3_fu_1739_p1 = grp_fu_707_p1;

assign ireg_V_3_to_int_fu_1866_p1 = reg_715;

assign ireg_V_4_fu_2045_p1 = grp_fu_707_p1;

assign ireg_V_4_to_int_fu_2178_p1 = reg_715;

assign ireg_V_5_fu_2350_p1 = grp_fu_707_p1;

assign ireg_V_5_to_int_fu_2483_p1 = reg_715;

assign ireg_V_fu_745_p1 = grp_fu_707_p1;

assign ireg_V_to_int_fu_872_p1 = reg_715;

assign j2_cast1_fu_2761_p1 = j2_reg_663;

assign j2_cast_fu_2757_p1 = j2_reg_663;

assign j_fu_2771_p2 = (j2_reg_663 + 5'd1);

assign k0_fu_3190_p2 = (k1_reg_685 + 3'd1);

assign k1_cast_fu_3180_p1 = k1_reg_685;

assign k3_cast2_fu_2949_p1 = k3_reg_674;

assign k3_cast_fu_2953_p1 = k3_reg_674;

assign k_fu_2963_p2 = (k3_reg_674 + 5'd1);


always @ (p_Result_16_fu_3306_p4) begin
    if (p_Result_16_fu_3306_p4[0] == 1'b1) begin
        l_fu_3316_p3 = 32'd0;
    end else if (p_Result_16_fu_3306_p4[1] == 1'b1) begin
        l_fu_3316_p3 = 32'd1;
    end else if (p_Result_16_fu_3306_p4[2] == 1'b1) begin
        l_fu_3316_p3 = 32'd2;
    end else if (p_Result_16_fu_3306_p4[3] == 1'b1) begin
        l_fu_3316_p3 = 32'd3;
    end else if (p_Result_16_fu_3306_p4[4] == 1'b1) begin
        l_fu_3316_p3 = 32'd4;
    end else if (p_Result_16_fu_3306_p4[5] == 1'b1) begin
        l_fu_3316_p3 = 32'd5;
    end else if (p_Result_16_fu_3306_p4[6] == 1'b1) begin
        l_fu_3316_p3 = 32'd6;
    end else if (p_Result_16_fu_3306_p4[7] == 1'b1) begin
        l_fu_3316_p3 = 32'd7;
    end else if (p_Result_16_fu_3306_p4[8] == 1'b1) begin
        l_fu_3316_p3 = 32'd8;
    end else if (p_Result_16_fu_3306_p4[9] == 1'b1) begin
        l_fu_3316_p3 = 32'd9;
    end else if (p_Result_16_fu_3306_p4[10] == 1'b1) begin
        l_fu_3316_p3 = 32'd10;
    end else if (p_Result_16_fu_3306_p4[11] == 1'b1) begin
        l_fu_3316_p3 = 32'd11;
    end else if (p_Result_16_fu_3306_p4[12] == 1'b1) begin
        l_fu_3316_p3 = 32'd12;
    end else if (p_Result_16_fu_3306_p4[13] == 1'b1) begin
        l_fu_3316_p3 = 32'd13;
    end else if (p_Result_16_fu_3306_p4[14] == 1'b1) begin
        l_fu_3316_p3 = 32'd14;
    end else if (p_Result_16_fu_3306_p4[15] == 1'b1) begin
        l_fu_3316_p3 = 32'd15;
    end else if (p_Result_16_fu_3306_p4[16] == 1'b1) begin
        l_fu_3316_p3 = 32'd16;
    end else if (p_Result_16_fu_3306_p4[17] == 1'b1) begin
        l_fu_3316_p3 = 32'd17;
    end else if (p_Result_16_fu_3306_p4[18] == 1'b1) begin
        l_fu_3316_p3 = 32'd18;
    end else if (p_Result_16_fu_3306_p4[19] == 1'b1) begin
        l_fu_3316_p3 = 32'd19;
    end else if (p_Result_16_fu_3306_p4[20] == 1'b1) begin
        l_fu_3316_p3 = 32'd20;
    end else if (p_Result_16_fu_3306_p4[21] == 1'b1) begin
        l_fu_3316_p3 = 32'd21;
    end else if (p_Result_16_fu_3306_p4[22] == 1'b1) begin
        l_fu_3316_p3 = 32'd22;
    end else if (p_Result_16_fu_3306_p4[23] == 1'b1) begin
        l_fu_3316_p3 = 32'd23;
    end else if (p_Result_16_fu_3306_p4[24] == 1'b1) begin
        l_fu_3316_p3 = 32'd24;
    end else if (p_Result_16_fu_3306_p4[25] == 1'b1) begin
        l_fu_3316_p3 = 32'd25;
    end else if (p_Result_16_fu_3306_p4[26] == 1'b1) begin
        l_fu_3316_p3 = 32'd26;
    end else if (p_Result_16_fu_3306_p4[27] == 1'b1) begin
        l_fu_3316_p3 = 32'd27;
    end else if (p_Result_16_fu_3306_p4[28] == 1'b1) begin
        l_fu_3316_p3 = 32'd28;
    end else if (p_Result_16_fu_3306_p4[29] == 1'b1) begin
        l_fu_3316_p3 = 32'd29;
    end else if (p_Result_16_fu_3306_p4[30] == 1'b1) begin
        l_fu_3316_p3 = 32'd30;
    end else if (p_Result_16_fu_3306_p4[31] == 1'b1) begin
        l_fu_3316_p3 = 32'd31;
    end else begin
        l_fu_3316_p3 = 32'd32;
    end
end

assign lhs_V_1_fu_2884_p3 = {{reg_719}, {16'd0}};

assign lhs_V_2_fu_3117_p3 = {{reg_719}, {32'd0}};

assign lhs_V_3_fu_3148_p3 = {{reg_728}, {32'd0}};

assign lhs_V_4_fu_3237_p3 = {{reg_719}, {48'd0}};

assign lhs_V_fu_1278_p1 = $signed(batch_y_mat_V_q0);

assign lsb_index_fu_3333_p2 = ($signed(32'd4294967272) + $signed(tmp_113_fu_3328_p2));

assign m_1_fu_3459_p3 = ((tmp_120_reg_4350[0:0] === 1'b1) ? tmp_123_fu_3444_p2 : tmp_125_fu_3454_p2);

assign m_2_fu_3466_p2 = (m_1_fu_3459_p3 + tmp_117_reg_4345);

assign m_6_fu_3489_p1 = m_reg_4355;

assign man_V_10_fu_1789_p2 = (54'd0 - p_Result_10_fu_1785_p1);

assign man_V_11_fu_1795_p3 = ((p_Result_9_reg_3778[0:0] === 1'b1) ? man_V_10_fu_1789_p2 : p_Result_10_fu_1785_p1);

assign man_V_13_fu_2101_p2 = (54'd0 - p_Result_12_fu_2097_p1);

assign man_V_14_fu_2107_p3 = ((p_Result_11_reg_3847[0:0] === 1'b1) ? man_V_13_fu_2101_p2 : p_Result_12_fu_2097_p1);

assign man_V_16_fu_2406_p2 = (54'd0 - p_Result_14_fu_2402_p1);

assign man_V_17_fu_2412_p3 = ((p_Result_13_reg_3916[0:0] === 1'b1) ? man_V_16_fu_2406_p2 : p_Result_14_fu_2402_p1);

assign man_V_1_fu_795_p2 = (54'd0 - p_Result_4_fu_791_p1);

assign man_V_2_fu_801_p3 = ((p_Result_3_reg_3549[0:0] === 1'b1) ? man_V_1_fu_795_p2 : p_Result_4_fu_791_p1);

assign man_V_4_fu_1091_p2 = (54'd0 - p_Result_6_fu_1087_p1);

assign man_V_5_fu_1097_p3 = ((p_Result_5_reg_3614[0:0] === 1'b1) ? man_V_4_fu_1091_p2 : p_Result_6_fu_1087_p1);

assign man_V_7_fu_1487_p2 = (54'd0 - p_Result_8_fu_1483_p1);

assign man_V_8_fu_1493_p3 = ((p_Result_7_reg_3714[0:0] === 1'b1) ? man_V_7_fu_1487_p2 : p_Result_8_fu_1483_p1);

assign newSel10_fu_1713_p3 = ((or_cond6_reg_3755[0:0] === 1'b1) ? newSel8_fu_1706_p3 : newSel9_reg_3760);

assign newSel12_fu_2008_p3 = ((sel_tmp35_reg_3814[0:0] === 1'b1) ? tmp_77_fu_2003_p2 : tmp_119_fu_1999_p1);

assign newSel13_fu_1956_p3 = ((sel_tmp32_fu_1920_p2[0:0] === 1'b1) ? tmp_76_fu_1878_p3 : tmp_112_fu_1840_p1);

assign newSel14_fu_2015_p3 = ((or_cond9_reg_3819[0:0] === 1'b1) ? newSel12_fu_2008_p3 : newSel13_reg_3824);

assign newSel16_fu_2319_p3 = ((sel_tmp44_reg_3888[0:0] === 1'b1) ? tmp_92_fu_2314_p2 : tmp_158_fu_2310_p1);

assign newSel17_fu_2268_p3 = ((sel_tmp41_fu_2232_p2[0:0] === 1'b1) ? tmp_88_fu_2190_p3 : tmp_154_fu_2152_p1);

assign newSel18_fu_2326_p3 = ((or_cond12_reg_3893[0:0] === 1'b1) ? newSel16_fu_2319_p3 : newSel17_reg_3898);

assign newSel1_fu_962_p3 = ((sel_tmp9_fu_926_p2[0:0] === 1'b1) ? tmp_20_fu_884_p3 : tmp_22_fu_846_p1);

assign newSel20_fu_2624_p3 = ((sel_tmp53_reg_3957[0:0] === 1'b1) ? tmp_107_fu_2619_p2 : tmp_192_fu_2615_p1);

assign newSel21_fu_2573_p3 = ((sel_tmp50_fu_2537_p2[0:0] === 1'b1) ? tmp_106_fu_2495_p3 : tmp_175_fu_2457_p1);

assign newSel22_fu_2631_p3 = ((or_cond15_reg_3962[0:0] === 1'b1) ? newSel20_fu_2624_p3 : newSel21_reg_3967);

assign newSel2_fu_1015_p3 = ((or_cond_reg_3590[0:0] === 1'b1) ? newSel_fu_1008_p3 : newSel1_reg_3595);

assign newSel4_fu_1342_p3 = ((sel_tmp17_reg_3660[0:0] === 1'b1) ? tmp_41_fu_1337_p2 : tmp_54_fu_1333_p1);

assign newSel5_fu_1258_p3 = ((sel_tmp14_fu_1222_p2[0:0] === 1'b1) ? tmp_34_fu_1180_p3 : tmp_50_fu_1142_p1);

assign newSel6_fu_1349_p3 = ((or_cond3_reg_3665[0:0] === 1'b1) ? newSel4_fu_1342_p3 : newSel5_reg_3670);

assign newSel8_fu_1706_p3 = ((sel_tmp26_reg_3750[0:0] === 1'b1) ? tmp_63_fu_1701_p2 : tmp_96_fu_1697_p1);

assign newSel9_fu_1654_p3 = ((sel_tmp23_fu_1618_p2[0:0] === 1'b1) ? tmp_58_fu_1576_p3 : tmp_87_fu_1538_p1);

assign newSel_fu_1008_p3 = ((sel_tmp4_reg_3585[0:0] === 1'b1) ? tmp_25_fu_1003_p2 : tmp_32_fu_999_p1);

assign nn_out_mat_V_d0 = ((or_cond2_reg_3600[0:0] === 1'b1) ? newSel2_fu_1015_p3 : 32'd0);

assign or_cond10_fu_1964_p2 = (sel_tmp32_fu_1920_p2 | sel_tmp28_fu_1891_p2);

assign or_cond11_fu_1970_p2 = (or_cond9_fu_1950_p2 | or_cond10_fu_1964_p2);

assign or_cond12_fu_2262_p2 = (sel_tmp44_fu_2256_p2 | sel_tmp42_fu_2238_p2);

assign or_cond13_fu_2276_p2 = (sel_tmp41_fu_2232_p2 | sel_tmp37_fu_2203_p2);

assign or_cond14_fu_2282_p2 = (or_cond13_fu_2276_p2 | or_cond12_fu_2262_p2);

assign or_cond15_fu_2567_p2 = (sel_tmp53_fu_2561_p2 | sel_tmp51_fu_2543_p2);

assign or_cond16_fu_2581_p2 = (sel_tmp50_fu_2537_p2 | sel_tmp46_fu_2508_p2);

assign or_cond17_fu_2587_p2 = (or_cond16_fu_2581_p2 | or_cond15_fu_2567_p2);

assign or_cond1_fu_970_p2 = (sel_tmp9_fu_926_p2 | sel_tmp2_fu_897_p2);

assign or_cond2_fu_976_p2 = (or_cond_fu_956_p2 | or_cond1_fu_970_p2);

assign or_cond3_fu_1252_p2 = (sel_tmp17_fu_1246_p2 | sel_tmp15_fu_1228_p2);

assign or_cond4_fu_1266_p2 = (sel_tmp14_fu_1222_p2 | sel_tmp10_fu_1193_p2);

assign or_cond5_fu_1272_p2 = (or_cond4_fu_1266_p2 | or_cond3_fu_1252_p2);

assign or_cond6_fu_1648_p2 = (sel_tmp26_fu_1642_p2 | sel_tmp24_fu_1624_p2);

assign or_cond7_fu_1662_p2 = (sel_tmp23_fu_1618_p2 | sel_tmp19_fu_1589_p2);

assign or_cond8_fu_1668_p2 = (or_cond7_fu_1662_p2 | or_cond6_fu_1648_p2);

assign or_cond9_fu_1950_p2 = (sel_tmp35_fu_1944_p2 | sel_tmp33_fu_1926_p2);

assign or_cond_fu_956_p2 = (sel_tmp_fu_932_p2 | sel_tmp4_fu_950_p2);

assign out_stream_TDATA = out_stream_data_1_data_out;

assign out_stream_TLAST = out_stream_last_1_data_out;

assign out_stream_TVALID = out_stream_last_1_state[1'd0];

assign out_stream_data_1_ack_in = out_stream_data_1_state[1'd1];

assign out_stream_data_1_ack_out = out_stream_TREADY;

assign out_stream_data_1_load_A = (out_stream_data_1_state_cmp_full & ~out_stream_data_1_sel_wr);

assign out_stream_data_1_load_B = (out_stream_data_1_state_cmp_full & out_stream_data_1_sel_wr);

assign out_stream_data_1_sel = out_stream_data_1_sel_rd;

assign out_stream_data_1_state_cmp_full = ((out_stream_data_1_state != 2'd1) ? 1'b1 : 1'b0);

assign out_stream_data_1_vld_out = out_stream_data_1_state[1'd0];

assign out_stream_last_1_ack_in = out_stream_last_1_state[1'd1];

assign out_stream_last_1_ack_out = out_stream_TREADY;

assign out_stream_last_1_load_A = (out_stream_last_1_state_cmp_full & ~out_stream_last_1_sel_wr);

assign out_stream_last_1_load_B = (out_stream_last_1_state_cmp_full & out_stream_last_1_sel_wr);

assign out_stream_last_1_sel = out_stream_last_1_sel_rd;

assign out_stream_last_1_state_cmp_full = ((out_stream_last_1_state != 2'd1) ? 1'b1 : 1'b0);

assign out_stream_last_1_vld_out = out_stream_last_1_state[1'd0];

assign p_Repl2_2_trunc_fu_3504_p2 = (tmp_224_cast_cast_fu_3492_p3 + tmp_126_fu_3499_p2);

assign p_Result_10_fu_1785_p1 = tmp_66_fu_1778_p3;

assign p_Result_12_fu_2097_p1 = tmp_78_fu_2090_p3;

assign p_Result_14_fu_2402_p1 = tmp_94_fu_2395_p3;

integer ap_tvar_int_0;

always @ (tmp_V_4_fu_3299_p3) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            p_Result_16_fu_3306_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_16_fu_3306_p4[ap_tvar_int_0] = tmp_V_4_fu_3299_p3[31 - ap_tvar_int_0];
        end
    end
end

assign p_Result_17_fu_3517_p5 = {{tmp_127_fu_3510_p3}, {m_6_fu_3489_p1[22:0]}};

assign p_Result_1_fu_3406_p3 = tmp_V_4_reg_4321[lsb_index_fu_3333_p2];

assign p_Result_4_fu_791_p1 = tmp_7_fu_784_p3;

assign p_Result_6_fu_1087_p1 = tmp_27_fu_1080_p3;

assign p_Result_8_fu_1483_p1 = tmp_51_fu_1476_p3;

assign p_Result_s_fu_3375_p2 = (tmp_V_4_reg_4321 & tmp_199_fu_3369_p2);

assign p_s_fu_3533_p3 = ((tmp_110_reg_4316[0:0] === 1'b1) ? 32'd0 : tmp_134_fu_3529_p1);

assign p_shl_cast_fu_3071_p1 = p_shl_fu_3064_p3;

assign p_shl_fu_3064_p3 = {{tmp_207_reg_4172}, {3'd0}};

assign r_V_1_fu_2851_p0 = r_V_reg_4043;

assign r_V_1_fu_2851_p1 = reg_724;

assign r_V_1_fu_2851_p2 = ($signed(r_V_1_fu_2851_p0) * $signed(r_V_1_fu_2851_p1));

assign r_V_4_cast_fu_3096_p2 = (tmp_178_fu_3089_p3 & tmp_177_fu_3084_p2);

assign r_V_5_fu_2859_p0 = r_V_cast_reg_4048;

assign r_V_5_fu_2859_p1 = batch_a_mat_V_load_reg_4114;

assign r_V_5_fu_2859_p2 = ($signed(r_V_5_fu_2859_p0) * $signed(r_V_5_fu_2859_p1));

assign r_V_6_cast_fu_2921_p1 = r_V_1_reg_4125;

assign r_V_cast_fu_2747_p1 = p_Val2_13_reg_4036;

assign r_V_fu_2744_p1 = p_Val2_13_reg_4036;

assign ret_V_5_fu_2898_p2 = (tmp_148_cast_fu_2892_p2 + lhs_V_1_fu_2884_p3);

assign ret_V_6_fu_3131_p2 = (lhs_V_2_fu_3117_p3 + tmp_175_cast_fu_3125_p2);

assign ret_V_7_fu_3160_p2 = (lhs_V_3_fu_3148_p3 + tmp_182_cast_fu_3156_p2);

assign ret_V_8_fu_3245_p2 = (r_V_2_reg_4282 + lhs_V_4_fu_3237_p3);

assign ret_V_fu_1286_p2 = ($signed(lhs_V_fu_1278_p1) - $signed(rhs_V_fu_1282_p1));

assign rev_fu_3400_p2 = (tmp_201_fu_3392_p3 ^ 1'd1);

assign rhs_V_fu_1282_p1 = $signed(nn_out_mat_V_q0);

assign sel_tmp105_demorgan_fu_2209_p2 = (tmp_83_fu_2146_p2 | tmp_75_reg_3862);

assign sel_tmp10_fu_1193_p2 = (tmp_19_fu_1136_p2 & sel_tmp5_fu_1188_p2);

assign sel_tmp11_fu_1204_p2 = (sel_tmp30_demorgan_fu_1199_p2 ^ 1'd1);

assign sel_tmp120_demorgan_fu_2244_p2 = (tmp_80_fu_2120_p2 | sel_tmp105_demorgan_fu_2209_p2);

assign sel_tmp12_fu_1210_p2 = (tmp_16_fu_1110_p2 & sel_tmp11_fu_1204_p2);

assign sel_tmp130_demorgan_fu_2514_p2 = (tmp_95_reg_3931 | tmp_101_fu_2451_p2);

assign sel_tmp13_fu_1216_p2 = (tmp_30_fu_1146_p2 ^ 1'd1);

assign sel_tmp145_demorgan_fu_2549_p2 = (tmp_98_fu_2425_p2 | sel_tmp130_demorgan_fu_2514_p2);

assign sel_tmp14_fu_1222_p2 = (sel_tmp13_fu_1216_p2 & sel_tmp12_fu_1210_p2);

assign sel_tmp15_fu_1228_p2 = (tmp_30_fu_1146_p2 & sel_tmp12_fu_1210_p2);

assign sel_tmp16_fu_1240_p2 = (sel_tmp45_demorgan_fu_1234_p2 ^ 1'd1);

assign sel_tmp17_fu_1246_p2 = (sel_tmp16_fu_1240_p2 & icmp1_fu_1162_p2);

assign sel_tmp18_fu_1584_p2 = (tmp_28_reg_3729 ^ 1'd1);

assign sel_tmp19_fu_1589_p2 = (tmp_39_fu_1532_p2 & sel_tmp18_fu_1584_p2);

assign sel_tmp1_fu_892_p2 = (tmp_8_reg_3564 ^ 1'd1);

assign sel_tmp20_fu_1600_p2 = (sel_tmp55_demorgan_fu_1595_p2 ^ 1'd1);

assign sel_tmp21_demorgan_fu_938_p2 = (tmp_s_fu_814_p2 | sel_tmp6_demorgan_fu_903_p2);

assign sel_tmp21_fu_1606_p2 = (tmp_36_fu_1506_p2 & sel_tmp20_fu_1600_p2);

assign sel_tmp22_fu_1612_p2 = (tmp_53_fu_1542_p2 ^ 1'd1);

assign sel_tmp23_fu_1618_p2 = (sel_tmp22_fu_1612_p2 & sel_tmp21_fu_1606_p2);

assign sel_tmp24_fu_1624_p2 = (tmp_53_fu_1542_p2 & sel_tmp21_fu_1606_p2);

assign sel_tmp25_fu_1636_p2 = (sel_tmp70_demorgan_fu_1630_p2 ^ 1'd1);

assign sel_tmp26_fu_1642_p2 = (sel_tmp25_fu_1636_p2 & icmp3_fu_1558_p2);

assign sel_tmp27_fu_1886_p2 = (tmp_48_reg_3793 ^ 1'd1);

assign sel_tmp28_fu_1891_p2 = (tmp_62_fu_1834_p2 & sel_tmp27_fu_1886_p2);

assign sel_tmp29_fu_1902_p2 = (sel_tmp80_demorgan_fu_1897_p2 ^ 1'd1);

assign sel_tmp2_fu_897_p2 = (tmp_4_fu_840_p2 & sel_tmp1_fu_892_p2);

assign sel_tmp30_demorgan_fu_1199_p2 = (tmp_19_fu_1136_p2 | tmp_13_reg_3629);

assign sel_tmp30_fu_1908_p2 = (tmp_59_fu_1808_p2 & sel_tmp29_fu_1902_p2);

assign sel_tmp31_fu_1914_p2 = (tmp_67_fu_1844_p2 ^ 1'd1);

assign sel_tmp32_fu_1920_p2 = (sel_tmp31_fu_1914_p2 & sel_tmp30_fu_1908_p2);

assign sel_tmp33_fu_1926_p2 = (tmp_67_fu_1844_p2 & sel_tmp30_fu_1908_p2);

assign sel_tmp34_fu_1938_p2 = (sel_tmp95_demorgan_fu_1932_p2 ^ 1'd1);

assign sel_tmp35_fu_1944_p2 = (sel_tmp34_fu_1938_p2 & icmp4_fu_1860_p2);

assign sel_tmp36_fu_2198_p2 = (tmp_75_reg_3862 ^ 1'd1);

assign sel_tmp37_fu_2203_p2 = (tmp_83_fu_2146_p2 & sel_tmp36_fu_2198_p2);

assign sel_tmp38_fu_2214_p2 = (sel_tmp105_demorgan_fu_2209_p2 ^ 1'd1);

assign sel_tmp39_fu_2220_p2 = (tmp_80_fu_2120_p2 & sel_tmp38_fu_2214_p2);

assign sel_tmp3_fu_944_p2 = (sel_tmp21_demorgan_fu_938_p2 ^ 1'd1);

assign sel_tmp40_fu_2226_p2 = (tmp_84_fu_2156_p2 ^ 1'd1);

assign sel_tmp41_fu_2232_p2 = (sel_tmp40_fu_2226_p2 & sel_tmp39_fu_2220_p2);

assign sel_tmp42_fu_2238_p2 = (tmp_84_fu_2156_p2 & sel_tmp39_fu_2220_p2);

assign sel_tmp43_fu_2250_p2 = (sel_tmp120_demorgan_fu_2244_p2 ^ 1'd1);

assign sel_tmp44_fu_2256_p2 = (sel_tmp43_fu_2250_p2 & icmp5_fu_2172_p2);

assign sel_tmp45_demorgan_fu_1234_p2 = (tmp_16_fu_1110_p2 | sel_tmp30_demorgan_fu_1199_p2);

assign sel_tmp45_fu_2503_p2 = (tmp_95_reg_3931 ^ 1'd1);

assign sel_tmp46_fu_2508_p2 = (tmp_101_fu_2451_p2 & sel_tmp45_fu_2503_p2);

assign sel_tmp47_fu_2519_p2 = (sel_tmp130_demorgan_fu_2514_p2 ^ 1'd1);

assign sel_tmp48_fu_2525_p2 = (tmp_98_fu_2425_p2 & sel_tmp47_fu_2519_p2);

assign sel_tmp49_fu_2531_p2 = (tmp_102_fu_2461_p2 ^ 1'd1);

assign sel_tmp4_fu_950_p2 = (sel_tmp3_fu_944_p2 & icmp_fu_866_p2);

assign sel_tmp50_fu_2537_p2 = (sel_tmp49_fu_2531_p2 & sel_tmp48_fu_2525_p2);

assign sel_tmp51_fu_2543_p2 = (tmp_102_fu_2461_p2 & sel_tmp48_fu_2525_p2);

assign sel_tmp52_fu_2555_p2 = (sel_tmp145_demorgan_fu_2549_p2 ^ 1'd1);

assign sel_tmp53_fu_2561_p2 = (sel_tmp52_fu_2555_p2 & icmp6_fu_2477_p2);

assign sel_tmp55_demorgan_fu_1595_p2 = (tmp_39_fu_1532_p2 | tmp_28_reg_3729);

assign sel_tmp5_fu_1188_p2 = (tmp_13_reg_3629 ^ 1'd1);

assign sel_tmp6_demorgan_fu_903_p2 = (tmp_8_reg_3564 | tmp_4_fu_840_p2);

assign sel_tmp6_fu_908_p2 = (sel_tmp6_demorgan_fu_903_p2 ^ 1'd1);

assign sel_tmp70_demorgan_fu_1630_p2 = (tmp_36_fu_1506_p2 | sel_tmp55_demorgan_fu_1595_p2);

assign sel_tmp7_fu_914_p2 = (tmp_s_fu_814_p2 & sel_tmp6_fu_908_p2);

assign sel_tmp80_demorgan_fu_1897_p2 = (tmp_62_fu_1834_p2 | tmp_48_reg_3793);

assign sel_tmp8_fu_920_p2 = (tmp_12_fu_850_p2 ^ 1'd1);

assign sel_tmp95_demorgan_fu_1932_p2 = (tmp_59_fu_1808_p2 | sel_tmp80_demorgan_fu_1897_p2);

assign sel_tmp9_fu_926_p2 = (sel_tmp8_fu_920_p2 & sel_tmp7_fu_914_p2);

assign sel_tmp_fu_932_p2 = (tmp_12_fu_850_p2 & sel_tmp7_fu_914_p2);

assign sh_amt_1_cast_fu_1321_p1 = sh_amt_1_reg_3650;

assign sh_amt_1_fu_1128_p3 = ((tmp_16_fu_1110_p2[0:0] === 1'b1) ? tmp_17_fu_1116_p2 : tmp_18_fu_1122_p2);

assign sh_amt_2_cast_fu_1685_p1 = sh_amt_2_reg_3740;

assign sh_amt_2_fu_1524_p3 = ((tmp_36_fu_1506_p2[0:0] === 1'b1) ? tmp_37_fu_1512_p2 : tmp_38_fu_1518_p2);

assign sh_amt_3_cast_fu_1987_p1 = sh_amt_3_reg_3804;

assign sh_amt_3_fu_1826_p3 = ((tmp_59_fu_1808_p2[0:0] === 1'b1) ? tmp_60_fu_1814_p2 : tmp_61_fu_1820_p2);

assign sh_amt_4_cast_fu_2298_p1 = sh_amt_4_reg_3878;

assign sh_amt_4_fu_2138_p3 = ((tmp_80_fu_2120_p2[0:0] === 1'b1) ? tmp_81_fu_2126_p2 : tmp_82_fu_2132_p2);

assign sh_amt_5_cast_fu_2603_p1 = sh_amt_5_reg_3947;

assign sh_amt_5_fu_2443_p3 = ((tmp_98_fu_2425_p2[0:0] === 1'b1) ? tmp_99_fu_2431_p2 : tmp_100_fu_2437_p2);

assign sh_amt_cast_fu_987_p1 = sh_amt_reg_3575;

assign sh_amt_fu_832_p3 = ((tmp_s_fu_814_p2[0:0] === 1'b1) ? tmp_1_fu_820_p2 : tmp_2_fu_826_p2);

assign smooth_grad_V_addr_1_gep_fu_376_p3 = tmp_10_reg_3608;

assign tmp155_cast_fu_3015_p1 = tmp155_fu_3009_p2;

assign tmp155_fu_3009_p2 = ($signed(6'd34) + $signed(k3_cast_fu_2953_p1));

assign tmp156_fu_3196_p2 = ($signed(k1_cast_fu_3180_p1) + $signed(9'd306));

assign tmp1_fu_2781_p4 = {{{{1'd1}, {tmp_205_fu_2777_p1}}}, {5'd0}};

assign tmp2_fu_2802_p4 = {{{{4'd8}, {tmp_205_fu_2777_p1}}}, {1'd0}};

assign tmp_100_fu_2437_p2 = (12'd16 - F2_5_fu_2419_p2);

assign tmp_101_fu_2451_p2 = ((F2_5_fu_2419_p2 == 12'd16) ? 1'b1 : 1'b0);

assign tmp_102_fu_2461_p2 = ((sh_amt_5_fu_2443_p3 < 12'd54) ? 1'b1 : 1'b0);

assign tmp_103_fu_2606_p1 = $unsigned(sh_amt_5_cast_fu_2603_p1);

assign tmp_104_fu_2610_p2 = $signed(man_V_17_reg_3942) >>> tmp_103_fu_2606_p1;

assign tmp_105_fu_1743_p1 = ireg_V_3_fu_1739_p1[62:0];

assign tmp_106_fu_2495_p3 = ((tmp_193_fu_2487_p3[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign tmp_107_fu_2619_p2 = tmp_175_reg_3952 << sh_amt_5_cast_fu_2603_p1;

assign tmp_108_fu_2657_p1 = i_6_reg_629;

assign tmp_109_fu_3273_p1 = i5_reg_696;

assign tmp_10_fu_1035_p1 = i_1_reg_571;

assign tmp_110_fu_3287_p2 = ((reg_719 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_111_fu_1765_p1 = ireg_V_3_fu_1739_p1[51:0];

assign tmp_112_fu_1840_p1 = man_V_11_fu_1795_p3[31:0];

assign tmp_113_fu_3328_p2 = (32'd32 - l_reg_4329);

assign tmp_114_fu_3380_p2 = ((p_Result_s_fu_3375_p2 != 32'd0) ? 1'b1 : 1'b0);

assign tmp_115_fu_3413_p2 = (rev_fu_3400_p2 & p_Result_1_fu_3406_p3);

assign tmp_116_fu_3419_p2 = (tmp_115_fu_3413_p2 | a_fu_3386_p2);

assign tmp_117_fu_3425_p3 = {{31'd0}, {tmp_116_fu_3419_p2}};

assign tmp_118_fu_1850_p4 = {{sh_amt_3_fu_1826_p3[11:5]}};

assign tmp_119_fu_1999_p1 = tmp_72_fu_1994_p2[31:0];

assign tmp_11_fu_1077_p1 = exp_tmp_V_1_reg_3619;

assign tmp_120_fu_3433_p2 = (($signed(lsb_index_fu_3333_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign tmp_121_fu_1870_p3 = ireg_V_3_to_int_fu_1866_p1[32'd31];

assign tmp_122_fu_3439_p2 = ($signed(32'd4294967271) + $signed(tmp_113_reg_4339));

assign tmp_123_fu_3444_p2 = tmp_V_4_reg_4321 >> tmp_122_fu_3439_p2;

assign tmp_124_fu_3449_p2 = (32'd25 - tmp_113_reg_4339);

assign tmp_125_fu_3454_p2 = tmp_V_4_reg_4321 << tmp_124_fu_3449_p2;

assign tmp_126_fu_3499_p2 = (8'd16 - tmp_203_reg_4334);

assign tmp_127_fu_3510_p3 = {{p_Result_15_reg_4305}, {p_Repl2_2_trunc_fu_3504_p2}};

assign tmp_128_fu_2710_p1 = tmp_135_fu_2702_p3;

assign tmp_129_fu_2719_p3 = {{tmp_204_fu_2715_p1}, {5'd0}};

assign tmp_12_fu_850_p2 = ((sh_amt_fu_832_p3 < 12'd54) ? 1'b1 : 1'b0);

assign tmp_130_fu_2727_p2 = (tmp_129_fu_2719_p3 + batchIndex_reg_640);

assign tmp_131_fu_2733_p1 = tmp_130_fu_2727_p2;

assign tmp_132_fu_2738_p2 = ($signed(reg_719) + $signed(p_Val2_13_reg_4036));

assign tmp_133_fu_2750_p3 = {{tmp_204_reg_4021}, {4'd0}};

assign tmp_134_fu_3529_p1 = p_Result_17_fu_3517_p5;

assign tmp_135_fu_2702_p3 = {{4'd8}, {i1_reg_652}};

assign tmp_136_fu_2791_p2 = (batchIndex_cast2_reg_3995 + tmp1_fu_2781_p4);

assign tmp_137_fu_2796_p1 = tmp_136_fu_2791_p2;

assign tmp_138_fu_2827_p2 = (($signed(batch_z_mat_V_q0) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign tmp_139_fu_2833_p2 = ($signed(9'd290) + $signed(j2_cast1_reg_4063));

assign tmp_13_fu_1071_p2 = ((tmp_40_fu_1045_p1 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_140_fu_2838_p1 = tmp_139_fu_2833_p2;

assign tmp_141_fu_2049_p1 = ireg_V_4_fu_2045_p1[62:0];

assign tmp_142_fu_2812_p2 = (i1_cast_reg_4008 + tmp2_fu_2802_p4);

assign tmp_143_fu_2817_p1 = tmp_142_fu_2812_p2;

assign tmp_145_fu_2877_p3 = ((tmp_138_reg_4101[0:0] === 1'b1) ? 48'd281474976710655 : 48'd0);

assign tmp_147_fu_2822_p2 = (tmp_133_reg_4053 + j2_reg_663);

assign tmp_148_cast_fu_2892_p2 = (tmp_206_fu_2874_p1 & tmp_145_fu_2877_p3);

assign tmp_148_fu_2843_p1 = tmp_147_reg_4091;

assign tmp_149_fu_2915_p2 = (p_Val2_18_reg_4132 + reg_728);

assign tmp_14_fu_990_p1 = $unsigned(sh_amt_cast_fu_987_p1);

assign tmp_150_fu_2924_p3 = {{tmp_205_reg_4076}, {4'd0}};

assign tmp_151_fu_2935_p3 = ((tmp_138_reg_4101[0:0] === 1'b1) ? 80'd1208925819614629174706175 : 80'd0);

assign tmp_152_fu_2942_p3 = ((tmp_138_reg_4101[0:0] === 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign tmp_153_fu_2071_p1 = ireg_V_4_fu_2045_p1[51:0];

assign tmp_154_fu_2152_p1 = man_V_14_fu_2107_p3[31:0];

assign tmp_155_fu_2973_p3 = {{tmp_207_fu_2969_p1}, {5'd0}};

assign tmp_156_fu_2162_p4 = {{sh_amt_4_fu_2138_p3[11:5]}};

assign tmp_157_cast_fu_2931_p1 = tmp_150_fu_2924_p3;

assign tmp_157_fu_2981_p2 = (tmp_155_fu_2973_p3 + batchIndex_cast1_reg_3990);

assign tmp_158_fu_2310_p1 = tmp_86_fu_2305_p2[31:0];

assign tmp_159_fu_2986_p1 = tmp_157_fu_2981_p2;

assign tmp_15_fu_994_p2 = $signed(man_V_2_reg_3570) >>> tmp_14_fu_990_p1;

assign tmp_160_fu_2182_p3 = ireg_V_4_to_int_fu_2178_p1[32'd31];

assign tmp_161_fu_3024_p2 = (($signed(batch_z_mat_V_load_1_reg_4192) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign tmp_162_fu_3046_p2 = ($signed(8'd162) + $signed(k3_cast2_reg_4158));

assign tmp_163_fu_3055_p1 = $unsigned(tmp_167_cast_fu_3051_p1);

assign tmp_164_fu_2991_p3 = {{tmp_207_fu_2969_p1}, {4'd0}};

assign tmp_165_fu_2999_p2 = (tmp_164_fu_2991_p3 + j2_cast_reg_4058);

assign tmp_166_fu_3004_p1 = tmp_165_fu_2999_p2;

assign tmp_167_cast_fu_3051_p1 = $signed(tmp_162_fu_3046_p2);

assign tmp_167_fu_3105_p2 = (tmp_209_fu_3102_p1 & tmp_152_reg_4152);

assign tmp_168_fu_3110_p3 = ((tmp_161_reg_4198[0:0] === 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign tmp_16_fu_1110_p2 = (($signed(F2_1_fu_1104_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign tmp_170_fu_3019_p2 = (tmp155_cast_fu_3015_p1 + tmp_157_cast_reg_4142);

assign tmp_171_fu_3060_p1 = tmp_170_reg_4187;

assign tmp_172_fu_2354_p1 = ireg_V_5_fu_2350_p1[62:0];

assign tmp_174_fu_2376_p1 = ireg_V_5_fu_2350_p1[51:0];

assign tmp_175_cast_fu_3125_p2 = (tmp_168_fu_3110_p3 & tmp_167_fu_3105_p2);

assign tmp_175_fu_2457_p1 = man_V_17_fu_2412_p3[31:0];

assign tmp_176_fu_3075_p2 = (p_shl_cast_fu_3071_p1 - k3_cast2_reg_4158);

assign tmp_177_fu_3084_p2 = (tmp_208_fu_3080_p1 & tmp_151_reg_4147);

assign tmp_178_fu_3089_p3 = ((tmp_161_reg_4198[0:0] === 1'b1) ? 80'd1208925819614629174706175 : 80'd0);

assign tmp_179_fu_3202_p2 = ($signed(tmp_185_cast_reg_4244) + $signed(tmp156_fu_3196_p2));

assign tmp_17_fu_1116_p2 = ($signed(12'd4080) + $signed(F2_1_fu_1104_p2));

assign tmp_180_fu_3233_p1 = tmp_179_reg_4257;

assign tmp_181_fu_3207_p3 = {{k1_reg_685}, {5'd0}};

assign tmp_182_cast_fu_3156_p2 = (tmp_152_reg_4152 & r_V_s_reg_4234);

assign tmp_182_fu_2467_p4 = {{sh_amt_5_fu_2443_p3[11:5]}};

assign tmp_183_fu_3215_p2 = (tmp_181_fu_3207_p3 + batchIndex_cast_reg_3985);

assign tmp_184_fu_3220_p1 = tmp_183_fu_3215_p2;

assign tmp_185_cast_fu_3177_p1 = $signed(tmp_176_reg_4224);

assign tmp_18_fu_1122_p2 = (12'd16 - F2_1_fu_1104_p2);

assign tmp_192_fu_2615_p1 = tmp_104_fu_2610_p2[31:0];

assign tmp_193_fu_2487_p3 = ireg_V_5_to_int_fu_2483_p1[32'd31];

assign tmp_195_fu_3339_p4 = {{lsb_index_fu_3333_p2[31:1]}};

assign tmp_196_fu_3355_p1 = tmp_113_fu_3328_p2[5:0];

assign tmp_197_fu_3359_p2 = ($signed(6'd57) - $signed(tmp_196_fu_3355_p1));

assign tmp_198_fu_3365_p1 = tmp_197_fu_3359_p2;

assign tmp_199_fu_3369_p2 = 32'd4294967295 >> tmp_198_fu_3365_p1;

assign tmp_19_fu_1136_p2 = ((F2_1_fu_1104_p2 == 12'd16) ? 1'b1 : 1'b0);

assign tmp_1_fu_820_p2 = ($signed(12'd4080) + $signed(F2_fu_808_p2));

assign tmp_201_fu_3392_p3 = lsb_index_fu_3333_p2[32'd31];

assign tmp_203_fu_3324_p1 = l_fu_3316_p3[7:0];

assign tmp_204_fu_2715_p1 = i1_reg_652[0:0];

assign tmp_205_fu_2777_p1 = j2_reg_663[3:0];

assign tmp_206_fu_2874_p1 = r_V_1_reg_4125[47:0];

assign tmp_207_fu_2969_p1 = k3_reg_674[3:0];

assign tmp_208_fu_3080_p1 = grp_fu_3033_p2[79:0];

assign tmp_209_fu_3102_p1 = r_V_3_reg_4229[63:0];

assign tmp_20_fu_884_p3 = ((tmp_35_fu_876_p3[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign tmp_21_fu_771_p1 = ireg_V_fu_745_p1[51:0];

assign tmp_224_cast_cast_fu_3492_p3 = ((tmp_202_reg_4360[0:0] === 1'b1) ? 8'd127 : 8'd126);

assign tmp_22_fu_846_p1 = man_V_2_fu_801_p3[31:0];

assign tmp_23_fu_1674_p2 = ($signed(11'd1920) + $signed(i_2_reg_583));

assign tmp_24_fu_1680_p1 = tmp_23_fu_1674_p2;

assign tmp_25_fu_1003_p2 = tmp_22_reg_3580 << sh_amt_cast_fu_987_p1;

assign tmp_26_fu_1473_p1 = exp_tmp_V_2_reg_3719;

assign tmp_27_fu_1080_p3 = {{1'd1}, {tmp_49_reg_3624}};

assign tmp_28_fu_1467_p2 = ((tmp_74_fu_1441_p1 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_29_fu_856_p4 = {{sh_amt_fu_832_p3[11:5]}};

assign tmp_2_fu_826_p2 = (12'd16 - F2_fu_808_p2);

assign tmp_30_fu_1146_p2 = ((sh_amt_1_fu_1128_p3 < 12'd54) ? 1'b1 : 1'b0);

assign tmp_31_fu_1324_p1 = $unsigned(sh_amt_1_cast_fu_1321_p1);

assign tmp_32_fu_999_p1 = tmp_15_fu_994_p2[31:0];

assign tmp_33_fu_1328_p2 = $signed(man_V_5_reg_3645) >>> tmp_31_fu_1324_p1;

assign tmp_34_fu_1180_p3 = ((tmp_57_fu_1172_p3[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign tmp_35_fu_876_p3 = ireg_V_to_int_fu_872_p1[32'd31];

assign tmp_36_fu_1506_p2 = (($signed(F2_2_fu_1500_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign tmp_37_fu_1512_p2 = ($signed(12'd4080) + $signed(F2_2_fu_1500_p2));

assign tmp_38_fu_1518_p2 = (12'd16 - F2_2_fu_1500_p2);

assign tmp_39_fu_1532_p2 = ((F2_2_fu_1500_p2 == 12'd16) ? 1'b1 : 1'b0);

assign tmp_3_fu_781_p1 = exp_tmp_V_reg_3554;

assign tmp_40_fu_1045_p1 = ireg_V_1_fu_1041_p1[62:0];

assign tmp_41_fu_1337_p2 = tmp_50_reg_3655 << sh_amt_1_cast_fu_1321_p1;

assign tmp_43_fu_1976_p2 = ($signed(12'd2944) + $signed(i_3_reg_595));

assign tmp_44_fu_1982_p1 = tmp_43_fu_1976_p2;

assign tmp_46_fu_1775_p1 = exp_tmp_V_3_reg_3783;

assign tmp_48_fu_1769_p2 = ((tmp_105_fu_1743_p1 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_49_fu_1067_p1 = ireg_V_1_fu_1041_p1[51:0];

assign tmp_4_fu_840_p2 = ((F2_fu_808_p2 == 12'd16) ? 1'b1 : 1'b0);

assign tmp_50_fu_1142_p1 = man_V_5_fu_1097_p3[31:0];

assign tmp_51_fu_1476_p3 = {{1'd1}, {tmp_79_reg_3724}};

assign tmp_52_fu_1152_p4 = {{sh_amt_1_fu_1128_p3[11:5]}};

assign tmp_53_fu_1542_p2 = ((sh_amt_2_fu_1524_p3 < 12'd54) ? 1'b1 : 1'b0);

assign tmp_54_fu_1333_p1 = tmp_33_fu_1328_p2[31:0];

assign tmp_55_fu_1688_p1 = $unsigned(sh_amt_2_cast_fu_1685_p1);

assign tmp_56_fu_1692_p2 = $signed(man_V_8_reg_3735) >>> tmp_55_fu_1688_p1;

assign tmp_57_fu_1172_p3 = ireg_V_1_to_int_fu_1168_p1[32'd31];

assign tmp_58_fu_1576_p3 = ((tmp_97_fu_1568_p3[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign tmp_59_fu_1808_p2 = (($signed(F2_3_fu_1802_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign tmp_5_fu_1310_p2 = ($signed(8'd192) + $signed(i_1_reg_571));

assign tmp_60_fu_1814_p2 = ($signed(12'd4080) + $signed(F2_3_fu_1802_p2));

assign tmp_61_fu_1820_p2 = (12'd16 - F2_3_fu_1802_p2);

assign tmp_62_fu_1834_p2 = ((F2_3_fu_1802_p2 == 12'd16) ? 1'b1 : 1'b0);

assign tmp_63_fu_1701_p2 = tmp_87_reg_3745 << sh_amt_2_cast_fu_1685_p1;

assign tmp_65_fu_1387_p4 = {{abs_dif_V_1_fu_1376_p3[28:16]}};

assign tmp_66_fu_1778_p3 = {{1'd1}, {tmp_111_reg_3788}};

assign tmp_67_fu_1844_p2 = ((sh_amt_3_fu_1826_p3 < 12'd54) ? 1'b1 : 1'b0);

assign tmp_68_fu_1990_p1 = $unsigned(sh_amt_3_cast_fu_1987_p1);

assign tmp_69_fu_1420_p1 = grp_fu_1414_p2[31:0];

assign tmp_6_fu_1316_p1 = tmp_5_fu_1310_p2;

assign tmp_70_fu_2288_p2 = ($signed(13'd6016) + $signed(i_4_cast_reg_3839));

assign tmp_71_fu_2293_p1 = tmp_70_fu_2288_p2;

assign tmp_72_fu_1994_p2 = $signed(man_V_11_reg_3799) >>> tmp_68_fu_1990_p1;

assign tmp_73_fu_2087_p1 = exp_tmp_V_4_reg_3852;

assign tmp_74_fu_1441_p1 = ireg_V_2_fu_1437_p1[62:0];

assign tmp_75_fu_2075_p2 = ((tmp_141_fu_2049_p1 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_76_fu_1878_p3 = ((tmp_121_fu_1870_p3[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign tmp_77_fu_2003_p2 = tmp_112_reg_3809 << sh_amt_3_cast_fu_1987_p1;

assign tmp_78_fu_2090_p3 = {{1'd1}, {tmp_153_reg_3857}};

assign tmp_79_fu_1463_p1 = ireg_V_2_fu_1437_p1[51:0];

assign tmp_7_fu_784_p3 = {{1'd1}, {tmp_21_reg_3559}};

assign tmp_80_fu_2120_p2 = (($signed(F2_4_fu_2114_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign tmp_81_fu_2126_p2 = ($signed(12'd4080) + $signed(F2_4_fu_2114_p2));

assign tmp_82_fu_2132_p2 = (12'd16 - F2_4_fu_2114_p2);

assign tmp_83_fu_2146_p2 = ((F2_4_fu_2114_p2 == 12'd16) ? 1'b1 : 1'b0);

assign tmp_84_fu_2156_p2 = ((sh_amt_4_fu_2138_p3 < 12'd54) ? 1'b1 : 1'b0);

assign tmp_85_fu_2301_p1 = $unsigned(sh_amt_4_cast_fu_2298_p1);

assign tmp_86_fu_2305_p2 = $signed(man_V_14_reg_3873) >>> tmp_85_fu_2301_p1;

assign tmp_87_fu_1538_p1 = man_V_8_fu_1493_p3[31:0];

assign tmp_88_fu_2190_p3 = ((tmp_160_fu_2182_p3[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign tmp_89_fu_1548_p4 = {{sh_amt_2_fu_1524_p3[11:5]}};

assign tmp_8_fu_775_p2 = ((tmp_9_fu_749_p1 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_90_fu_2593_p2 = ($signed(13'd5792) + $signed(i_5_cast_reg_3908));

assign tmp_91_fu_2598_p1 = tmp_90_fu_2593_p2;

assign tmp_92_fu_2314_p2 = tmp_154_reg_3883 << sh_amt_4_cast_fu_2298_p1;

assign tmp_93_fu_2392_p1 = exp_tmp_V_5_reg_3921;

assign tmp_94_fu_2395_p3 = {{1'd1}, {tmp_174_reg_3926}};

assign tmp_95_fu_2380_p2 = ((tmp_172_fu_2354_p1 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_96_fu_1697_p1 = tmp_56_fu_1692_p2[31:0];

assign tmp_97_fu_1568_p3 = ireg_V_2_to_int_fu_1564_p1[32'd31];

assign tmp_98_fu_2425_p2 = (($signed(F2_5_fu_2419_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign tmp_99_fu_2431_p2 = ($signed(12'd4080) + $signed(F2_5_fu_2419_p2));

assign tmp_9_fu_749_p1 = ireg_V_fu_745_p1[62:0];

assign tmp_V_4_fu_3299_p3 = ((p_Result_15_reg_4305[0:0] === 1'b1) ? tmp_V_fu_3293_p2 : reg_719);

assign tmp_V_fu_3293_p2 = (32'd0 - reg_719);

assign tmp_fu_982_p1 = i_reg_559;

assign tmp_s_fu_814_p2 = (($signed(F2_fu_808_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    tmp_10_reg_3608[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    i_4_cast_reg_3839[12] <= 1'b0;
    i_5_cast_reg_3908[12] <= 1'b0;
    batchIndex_cast_reg_3985[7:6] <= 2'b00;
    batchIndex_cast1_reg_3990[8:6] <= 3'b000;
    batchIndex_cast2_reg_3995[9:6] <= 4'b0000;
    i1_cast_reg_4008[8:2] <= 7'b0000000;
    dataOut_V_addr_2_reg_4031[8:2] <= 7'b0001000;
    tmp_133_reg_4053[3:0] <= 4'b0000;
    j2_cast_reg_4058[7:5] <= 3'b000;
    j2_cast1_reg_4063[8:5] <= 4'b0000;
    dataOut_V_addr_4_reg_4119[8:5] <= 4'b0000;
    tmp_157_cast_reg_4142[3:0] <= 4'b0000;
    tmp_157_cast_reg_4142[8] <= 1'b0;
    k3_cast2_reg_4158[7:5] <= 3'b000;
    tmp_117_reg_4345[31:1] <= 31'b0000000000000000000000000000000;
end

endmodule //backward_lite
